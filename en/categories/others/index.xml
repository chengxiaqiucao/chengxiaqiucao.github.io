<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Others on Testing Observation</title><link>https://chengxiaqiucao.github.io/en/categories/others/</link><description>Recent content in Others on Testing Observation</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>|by Daniel Wei</copyright><lastBuildDate>Sun, 01 Sep 2024 14:32:39 +0800</lastBuildDate><atom:link href="https://chengxiaqiucao.github.io/en/categories/others/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the Cultural Logic Behind the Agile Manifesto</title><link>https://chengxiaqiucao.github.io/en/post/008-understand-the-real-logic-behind-agile-manifesto/</link><pubDate>Sun, 01 Sep 2024 14:32:39 +0800</pubDate><guid>https://chengxiaqiucao.github.io/en/post/008-understand-the-real-logic-behind-agile-manifesto/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/agile_mani.png" alt="Featured image of post Understanding the Cultural Logic Behind the Agile Manifesto" />&lt;p>Agile is now a widely adopted development philosophy and mindset. The famous Agile Manifesto has been widely circulated and translated into more than 60 languages.&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/agile_mani.png"
width="2147"
height="882"
srcset="https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/agile_mani_hu_e7cc042f16d0b9d7.png 480w, https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/agile_mani_hu_678312c338d5826e.png 1024w"
loading="lazy"
alt="Agile Manifesto"
class="gallery-image"
data-flex-grow="243"
data-flex-basis="584px"
>&lt;/p>
&lt;p>This manifesto primarily presents certain values in software development that these pioneers considered more important, conveying a new philosophy different from traditional development approaches.&lt;/p>
&lt;p>But what is the logic behind these proposed principles?&lt;/p>
&lt;p>We should understand why such a manifesto exists; otherwise, while everyone claims to be practicing Agile, there&amp;rsquo;s some ambiguity, and sometimes people even create many processes, ceremonies, and various Agile tools in the name of Agile, ultimately coming full circle back to where they started.&lt;/p>
&lt;p>Here, I attempt to understand the underlying logic and true purpose of the Agile Manifesto. By grasping this core concept, we can understand the essence of Agile.&lt;/p>
&lt;h2 id="culture-is-the-core-of-agile">Culture is the Core of Agile
&lt;/h2>&lt;p>The values promoted in the Agile Manifesto - individuals and interactions, working software, customer collaboration, responding to change - are not specific practices but rather values.&lt;/p>
&lt;p>And values are essential elements in establishing culture.&lt;/p>
&lt;p>Any organization, when it reaches a certain stage, will begin to emphasize the importance of culture.&lt;/p>
&lt;p>Because mature organizations, after standardized development and establishing mature systems, find that there are still many things that cannot be well resolved through systems alone. At this point, the hoped-for solution lies in the power of culture.&lt;/p>
&lt;p>Agile emerged as a response to traditional development processes that heavily relied on procedures and systems. Based on numerous experiences and lessons where software development couldn&amp;rsquo;t succeed through processes and standards alone, Agile proposes to guide people in establishing the right software development culture at a cultural level, actively improving rather than denying the role of existing processes and standards.&lt;/p>
&lt;p>So, the conclusion of this reflection is:&lt;/p>
&lt;blockquote>
&lt;p>Agile is actually a mindset shift, a set of values for establishing correct behaviors in software development. While implementation methods may vary greatly, the essence is emphasizing that establishing correct development values is more important than specific processes and standards.&lt;/p>&lt;/blockquote>
&lt;h2 id="culture-is-the-evolution-of-systems">Culture is the Evolution of Systems
&lt;/h2>&lt;p>Understanding Agile as an effort to establish culture helps us understand the logic behind various Agile practices and advocated approaches.&lt;/p>
&lt;p>Culture and systems are the pillars supporting an organization&amp;rsquo;s development. They both aim to guide organization members to do things correctly:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Systems&lt;/strong> guide members through various written rules and processes. Following systems to do things is passively doing things correctly&lt;/li>
&lt;li>&lt;strong>Culture&lt;/strong> works through gradual influence, with organization members sharing common missions, visions, and values, reflected in their behavior patterns. It&amp;rsquo;s actively doing things correctly.&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-culture">What is Culture?
&lt;/h2>&lt;p>Culture is actually the behavioral patterns of organization members in practice.&lt;/p>
&lt;p>Understanding corporate culture also includes elements like mission, values, vision, and strategy.&lt;/p>
&lt;p>Their relationship can be summarized in the following diagram:&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/Pasted-20240902.png"
width="1276"
height="636"
srcset="https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/Pasted-20240902_hu_96e600d6cb869aa3.png 480w, https://chengxiaqiucao.github.io/post/008-understand-the-real-logic-behind-agile-manifesto/Pasted-20240902_hu_6c1995aba6ace70f.png 1024w"
loading="lazy"
alt="culture"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="481px"
>&lt;/p>
&lt;p>Coming back to Agile:&lt;/p>
&lt;p>The Agile Manifesto represents values
The 12 Agile Principles are implementation strategies
The Agile vision, like all products, is to deliver value to users&lt;/p>
&lt;p>Ultimately, what Agile hopes to achieve is establishing a new culture oriented towards software development.&lt;/p>
&lt;p>Like water has no constant form and warfare has no constant conditions, Agile has no so-called standard practices. A team that aligns with Agile values, reaches consensus, and puts them into practice is an Agile team.&lt;/p>
&lt;hr>
&lt;p>Promoting my testing course, interested friends can learn more through the following link&lt;/p>
&lt;p>❤️❤️❤️❤️ &lt;a class="link" href="https://coding.imooc.com/class/chapter/885.html#Anchor" target="_blank" rel="noopener"
>Chengxia Qiucao&amp;rsquo;s Testing Career Advancement Course&lt;/a> ❤️❤️❤️❤️&lt;/p></description></item><item><title>Two Useful Windows 11 Operation Tips</title><link>https://chengxiaqiucao.github.io/en/post/010-windows-system-tips/</link><pubDate>Thu, 22 Aug 2024 15:40:10 +0800</pubDate><guid>https://chengxiaqiucao.github.io/en/post/010-windows-system-tips/</guid><description>&lt;h2 id="restore-classic-right-click-menu-in-windows-11">Restore Classic Right-Click Menu in Windows 11
&lt;/h2>&lt;p>Windows 11 has introduced many interface optimizations compared to previous versions. However, one optimization has caused some inconvenience - the right-click menu now folds non-system menu items by default, requiring an extra click on &amp;ldquo;Show more options&amp;rdquo; to reveal the full menu.&lt;/p>
&lt;img src="Pasted-20240822.png" alt="Right-click menu" width=300 />
&lt;p>There are actually two methods to restore the classic menu style:&lt;/p>
&lt;ol>
&lt;li>Hold the Shift key while clicking the menu - this will directly show the full menu (&lt;strong>Recommended&lt;/strong>)&lt;/li>
&lt;li>Alternatively, you can permanently restore the classic menu by adding a registry entry:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> reg.exe add &lt;span class="s2">&amp;#34;HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32&amp;#34;&lt;/span> /f /ve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After executing this command, you&amp;rsquo;ll need to restart File Explorer:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="go">taskkill /f /im explorer.exe &amp;amp; start explorer.exe
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will completely restore the right-click menu to its classic style. To revert back, simply delete the registry entry.&lt;/p>
&lt;h2 id="clipboard-history-tool">Clipboard History Tool
&lt;/h2>&lt;p>Windows 11 includes a very useful built-in tool that keeps a history of your clipboard items. You can access it by pressing &lt;code>Win+V&lt;/code>.&lt;/p>
&lt;img src="Pasted-20240822-2.png" alt="Clipboard tool" width=350 />
&lt;p>In addition to conveniently storing multiple clipboard entries, this tool also provides:&lt;/p>
&lt;ul>
&lt;li>Easy insertion of emoji&lt;/li>
&lt;li>Kaomoji (Japanese emoticons)&lt;/li>
&lt;li>Commonly used special characters&lt;/li>
&lt;li>GIF search functionality&lt;/li>
&lt;/ul>
&lt;p>❤️👍😎🏠🕍❄️ (●ˇ∀ˇ●)(❤️´艸｀❤️)◀▶◯◻&lt;/p>
&lt;p>To disable clipboard history, go to &lt;strong>System Settings &amp;gt; System &amp;gt; Clipboard&lt;/strong> and turn it off.&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/010-windows-system-tips/Pasted-20240822-1.png"
width="1289"
height="185"
srcset="https://chengxiaqiucao.github.io/post/010-windows-system-tips/Pasted-20240822-1_hu_560c7e4763a9b58.png 480w, https://chengxiaqiucao.github.io/post/010-windows-system-tips/Pasted-20240822-1_hu_fa42a580c2c171b8.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="696"
data-flex-basis="1672px"
>&lt;/p>
&lt;hr></description></item><item><title>Setting Up a Blog with Hugo and Github</title><link>https://chengxiaqiucao.github.io/en/post/009-hugo+github-setup-blog/</link><pubDate>Wed, 21 Aug 2024 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/en/post/009-hugo+github-setup-blog/</guid><description>&lt;blockquote>
&lt;p>　　Although I&amp;rsquo;ve always had the habit of writing and recording, my articles have been quite scattered. So I decided to create my own static blog. I&amp;rsquo;ve known for a while that Github allows publishing static pages with a github.io domain through Github Pages. Currently, my preferred writing tool is Obsidian, so my requirement was to be able to conveniently publish to Github after writing articles in Obsidian.&lt;br>
　　So I got to work, and after more than two days of exploration, I finally set up this blog to my satisfaction. Here I&amp;rsquo;m recording the implementation process for future reference.&lt;/p>&lt;/blockquote>
&lt;p>Result:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821.png"
width="1818"
height="971"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821_hu_3158c671d4dc874.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821_hu_34640f2984d57c1f.png 1024w"
loading="lazy"
alt="Completed Blog Effect"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="449px"
>&lt;/p>
&lt;h2 id="hugo-static-page-framework">Hugo Static Page Framework
&lt;/h2>&lt;h3 id="what-is-hugo">What is Hugo?
&lt;/h3>&lt;p>Hugo is a static website generation framework written in Go language. It features good performance, is fast and easy to use, and highly configurable. It can quickly generate a completely HTML-based website based on Markdown format documents. It&amp;rsquo;s a powerful tool for generating blog sites.&lt;/p>
&lt;h3 id="installation">Installation
&lt;/h3>&lt;p>Hugo supports multiple installation methods. I installed it on a Windows system using the winget package manager:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> winget install Hugo.Hugo.Extended
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After installation, check the version information:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-1.png"
width="1666"
height="140"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-1_hu_f043b2045dc4f23a.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-1_hu_1b2383373e72d3be.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="1190"
data-flex-basis="2856px"
>&lt;/p>
&lt;p>After completing the installation, you can use the &lt;code>hugo&lt;/code> command to generate our blog site:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> hugo new site BlogSite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will automatically generate a structure for our website:&lt;/p>
&lt;blockquote>
&lt;p>-archetypes&lt;br>
-assets&lt;br>
-content&lt;br>
-data&lt;br>
-i18n&lt;br>
-layouts&lt;br>
-static&lt;br>
-themes&lt;br>
-hugo.toml&lt;/p>&lt;/blockquote>
&lt;p>The &lt;code>content&lt;/code> directory is where we store our current articles. The &lt;code>theme&lt;/code> directory contains themes that can be applied to the website. The &lt;code>assets&lt;/code> directory can include resources that need to be referenced. The &lt;code>layout&lt;/code> directory contains the structure for rendering the website.&lt;/p>
&lt;p>The &lt;code>archetypes&lt;/code> directory defines some default metadata information (frontMatter) for pages, usually placed in &lt;code>default.md&lt;/code>. Hugo will automatically add this metadata when generating new pages and generate pages based on the configuration during rendering.&lt;/p>
&lt;p>My configuration is as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ replace .File.ContentBaseName &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Date }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">imageNameKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pasted&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">draft&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Categories&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When a markdown document is formally generated, such as this article, it appears in Obsidian as document property information:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-2.png"
width="676"
height="388"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-2_hu_b9be43d5363cac7c.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-2_hu_27bd6ff65c21f2a0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;h3 id="stack-theme">Stack Theme
&lt;/h3>&lt;p>After generating the website, we can choose a theme we like from the &lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>rich templates on the Hugo official website&lt;/a>. Here I&amp;rsquo;m using the Stack theme.
Clone the theme from GitHub to the Theme directory of the generated website:&lt;/p>
&lt;p>&lt;code>git clone https://github.com/CaiJimmy/hugo-theme-stack themes/stack &lt;/code>&lt;/p>
&lt;p>Then, following its official example, include &lt;code>page&lt;/code>, &lt;code>post&lt;/code> directories, and the homepage index.md file in the &lt;code>content&lt;/code> directory.&lt;/p>
&lt;p>For specific configuration information, refer to the hugo.yaml in the Stack example site, which mainly contains configuration information for various site style organizations. I won&amp;rsquo;t go into detail here.&lt;/p>
&lt;h3 id="creating-articles">Creating Articles
&lt;/h3>&lt;p>Because we often need to reference images when creating articles, to facilitate direct referencing by relative paths in the document, we can use the following method to create articles. Instead of generating pages directly, we generate article directories and create them using index.md within the directory:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> hugo new post/hugo+github搭建博客小记/index.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Complete the writing of article content in index.md.&lt;/p>
&lt;h3 id="generating-example-site">Generating Example Site
&lt;/h3>&lt;p>After completing site configuration and necessary materials and article writing, you can execute the following command for local preview:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> Hugo Server --theme&lt;span class="o">=&lt;/span>stack --buildDrafts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>buildDrafts will render articles marked with &lt;code>draft=true&lt;/code> as well.&lt;/p>
&lt;p>After execution, the following information is displayed:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-3.png"
width="2086"
height="784"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-3_hu_872f5532e65d0c29.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-3_hu_e9912806698254e9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="266"
data-flex-basis="638px"
>&lt;/p>
&lt;p>Now you can preview the current page status from &lt;code>http://localhost:1313&lt;/code>:&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-4.png"
width="1383"
height="778"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-4_hu_4d7f99996cc07b74.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-4_hu_56c2085a6e8b65a2.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>If there are no issues, you can use the command to formally generate the site:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> hugo --theme&lt;span class="o">=&lt;/span>stack --baseURL&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://chengxiaqiucao.github.io/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will generate the static site content we need in the public directory of the site:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-5.png"
width="338"
height="483"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-5_hu_f60fbc0271b7e11d.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-5_hu_41bda0080f92bb79.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="69"
data-flex-basis="167px"
>&lt;/p>
&lt;h2 id="publishing-to-github-page">Publishing to Github Page
&lt;/h2>&lt;h3 id="github-repository">Github Repository
&lt;/h3>&lt;p>After completing local debugging, we want to publish our website to Github. First, of course, you need to have your own Github account.
Then create a page repo for your account, such as &lt;code>chengxiaqiucao.github.io&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Console" data-lang="Console">&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> &lt;span class="nb">cd&lt;/span> public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> git remote add origin &lt;span class="s2">&amp;#34;https://github.com/chengxiaqiucao/chengxiaqiucao.github.io.git&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> git add -A
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> git commit -m &lt;span class="s2">&amp;#34;first commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gp">&amp;gt;&lt;/span> git push -u origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Through the above commands, the site content in public is pushed to the Github page repository.&lt;/p>
&lt;h3 id="repository-configuration">Repository Configuration
&lt;/h3>&lt;p>To publish this page, configure the following on Github:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-6.png"
width="1709"
height="1049"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-6_hu_e50b02ebb096b914.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-6_hu_f43e37dbb46d2f2b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="391px"
>&lt;/p>
&lt;p>This way, each time new content is pushed to the repository, it will trigger a build.&lt;/p>
&lt;p>Now let&amp;rsquo;s visit &lt;a class="link" href="https://chengxiaqiucao.github.io/" target="_blank" rel="noopener"
>https://chengxiaqiucao.github.io/&lt;/a> to see the results.&lt;/p>
&lt;h2 id="obsidian-settings">Obsidian Settings
&lt;/h2>&lt;p>Then, when writing articles with Obsidian, to facilitate image pasting, we need to configure the storage location for image attachments:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-7.png"
width="1606"
height="941"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-7_hu_e95b8aec0a3d677.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-7_hu_63b8d1c6600846a9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="409px"
>
There&amp;rsquo;s also a pitfall here: when Obsidian pastes images, it automatically generates a filename like &lt;code>pasted image XXXXXX.png&lt;/code>.&lt;/p>
&lt;p>But there&amp;rsquo;s a problem: this filename contains spaces, which causes the Stack theme to fail to parse it, resulting in images not displaying. Here I recommend using an Obsidian plugin, &lt;a class="link" href="https://github.com/reorx/obsidian-paste-image-rename" target="_blank" rel="noopener"
>paste image rename&lt;/a>, which allows you to set your own pasted image file format:
&lt;img src="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-8.png"
width="1609"
height="783"
srcset="https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-8_hu_50ba73d68355b1a3.png 480w, https://chengxiaqiucao.github.io/post/009-hugo&amp;#43;github-setup-blog/Pasted-20240821-8_hu_6ade5ad1f67279e6.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="205"
data-flex-basis="493px"
>&lt;/p>
&lt;p>Well, now we&amp;rsquo;ve built a blog space of our own, and we can happily start writing~~~&lt;/p></description></item></channel></rss>
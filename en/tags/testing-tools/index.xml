<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing Tools on Testing Observation</title><link>https://chengxiaqiucao.github.io/en/tags/testing-tools/</link><description>Recent content in Testing Tools on Testing Observation</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>|by Daniel Wei</copyright><lastBuildDate>Sat, 21 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://chengxiaqiucao.github.io/en/tags/testing-tools/index.xml" rel="self" type="application/rss+xml"/><item><title>AI Testing with TestGPT</title><link>https://chengxiaqiucao.github.io/en/post/006-ai-testing-by-testgpt/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/en/post/006-ai-testing-by-testgpt/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_203935.png" alt="Featured image of post AI Testing with TestGPT" />&lt;p>The hottest technology today is undoubtedly OpenAI&amp;rsquo;s ChatGPT, and AI technology has been widely applied in many areas. Today we&amp;rsquo;ll discuss TestGPT, a popular application in the software testing field.&lt;/p>
&lt;h3 id="what-is-testgpt">What is TestGPT?
&lt;/h3>&lt;p>TestGPT is an artificial intelligence model (AI model) for the testing domain, released by CodiumAI Ltd., a startup company headquartered in Tel Aviv, Israel. It is powered by OpenAI&amp;rsquo;s GPT-4 large language model.&lt;/p>
&lt;p>Official website: &lt;a class="link" href="http://www.codium.AI" target="_blank" rel="noopener"
>www.codium.ai&lt;/a>&lt;/p>
&lt;p>From the website&amp;rsquo;s introduction, it&amp;rsquo;s clear that TestGPT is an AI tool designed to assist developers in testing their code, providing automatically generated software test suite suggestions to accelerate coding and error scanning.&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_203935.png"
width="1833"
height="877"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_203935_hu_1cc7fb0cda2e11bc.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_203935_hu_ad7cccdf764a6dbf.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="209"
data-flex-basis="501px"
>&lt;/p>
&lt;h3 id="how-to-use-it">How to Use It?
&lt;/h3>&lt;p>Currently, TestGPT offers plugin support for VsCode and JetBrains
&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205338.png"
width="321"
height="307"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205338_hu_d13898428298dda8.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205338_hu_6f268981ab1066c7.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="250px"
>&lt;/p>
&lt;p>Taking VsCode as an example, you can install it by searching for CodiumAI in the VsCode extension marketplace&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205457.png"
width="1419"
height="1065"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205457_hu_59cf199073c22372.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_205457_hu_441554f848e20d9d.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="319px"
>&lt;/p>
&lt;p>After installation, you can log in directly with your Github account.&lt;/p>
&lt;p>Let&amp;rsquo;s see how it works with a problematic Python sorting algorithm code.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">insert_sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lists&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Insertion sort&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lists&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="c1">#range interval is incorrect, this is a bug, should be (1, count)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lists&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">lists&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lists&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lists&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lists&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">j&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">lists&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Switch to the CodiumAI plugin, and after connecting, you can see that the code section already has an entry point for generating tests&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210014.png"
width="1131"
height="662"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210014_hu_7a4640a8833e2414.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210014_hu_61ef1b5e0873bea8.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="410px"
>&lt;/p>
&lt;p>Try generating tests and see the effect. After a moment, you can see the AI&amp;rsquo;s results&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210406.png"
width="996"
height="92"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210406_hu_3f266d52b9bef103.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210406_hu_6d01cccac75f5045.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="1082"
data-flex-basis="2598px"
>&lt;/p>
&lt;p>The AI assistant interface has three parts:&lt;/p>
&lt;ul>
&lt;li>Test Suite&lt;/li>
&lt;li>Code Analysis&lt;/li>
&lt;li>Code Suggestions&lt;/li>
&lt;/ul>
&lt;p>In the test configuration section, you can make basic test configurations&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210858.png"
width="989"
height="355"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210858_hu_f2b70cfc047ec025.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_210858_hu_db5844884f8dfbcd.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="278"
data-flex-basis="668px"
>&lt;/p>
&lt;p>The Coverage section shows the coverage of the AI-generated cases&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211029.png"
width="977"
height="710"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211029_hu_65ce07c8cf85f424.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211029_hu_7901c33048174ebe.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="137"
data-flex-basis="330px"
>&lt;/p>
&lt;p>The Test section contains the specific test cases. In this example, 6 test cases were generated&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211130.png"
width="990"
height="451"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211130_hu_1ca838f05ea8a0ca.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211130_hu_a104bab2a8bdfb3c.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="219"
data-flex-basis="526px"
>&lt;/p>
&lt;p>After execution, you can see the test results, but all the generated test code executed successfully, seemingly not detecting the bug through the test code :(&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211250.png"
width="966"
height="872"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211250_hu_caf88c32a1bc4cdd.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211250_hu_9f31482a99433a94.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="110"
data-flex-basis="265px"
>&lt;/p>
&lt;p>Code Analysis provides an analytical explanation of the code&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211545.png"
width="788"
height="906"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211545_hu_d4e35646d0eded89.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211545_hu_85e2e6ba4767b99b.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="86"
data-flex-basis="208px"
>&lt;/p>
&lt;p>The Code Suggestions section provides modification suggestions, which accurately points out the problem in the code.&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211835.png"
width="770"
height="738"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211835_hu_bdf616c1b5339fc8.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_211835_hu_80ad6d5301e44d28.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="250px"
>&lt;/p>
&lt;p>Applying the suggestion directly, you can see that the code has been modified and comments have been added&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_212047.png"
width="1573"
height="407"
srcset="https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_212047_hu_146942125a516c39.png 480w, https://chengxiaqiucao.github.io/post/006-ai-testing-by-testgpt/20230626_212047_hu_f02eca26024ea82e.png 1024w"
loading="lazy"
alt="image"
class="gallery-image"
data-flex-grow="386"
data-flex-basis="927px"
>&lt;/p>
&lt;h3 id="conclusion">Conclusion
&lt;/h3>&lt;p>So we can see that TestGPT is indeed excellent, accurately analyzing the purpose of the code and identifying problematic areas. It also helps design test case coverage and related unit test scripts.
Making good use of this tool can undoubtedly provide great assistance to development engineers. However, from initial use, the self-generated test cases still have deficiencies in covering problematic code, and in the short term, it&amp;rsquo;s probably not sufficient to replace test design.&lt;/p></description></item></channel></rss>
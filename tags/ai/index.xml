<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on 秋 草 观 “测” 台</title><link>https://chengxiaqiucao.github.io/tags/ai/</link><description>Recent content in AI on 秋 草 观 “测” 台</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>|by 城下秋草（公众号： 秋草说测试）</copyright><lastBuildDate>Mon, 28 Jul 2025 16:50:34 +0800</lastBuildDate><atom:link href="https://chengxiaqiucao.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title> 快速理清开源项目源码的神器，这款AI工具不可不知！</title><link>https://chengxiaqiucao.github.io/post/115-zread_ai/</link><pubDate>Mon, 28 Jul 2025 16:50:34 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/115-zread_ai/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/title.png" alt="Featured image of post 快速理清开源项目源码的神器，这款AI工具不可不知！" />&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/title.png"
width="1272"
height="640"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/title_hu_790cb57295b3fcd9.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/title_hu_40b28683ea1b613d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="198"
data-flex-basis="477px"
>&lt;/p>
&lt;p>之前的文章，我们曾经分析过热门AI测试工具 &lt;code>Midscene.js&lt;/code> 的源码，重点了解了它驱动AI执行的主要提示词是如何设定的。文章参见 【】&lt;/p>
&lt;p>而近日，我又发现了一个AI神器，由&lt;code>智谱AI&lt;/code> 推出的源码解析服务，通过网址&lt;/p>
&lt;p>&lt;code>https://zread.ai/&lt;/code>&lt;/p>
&lt;p>即可访问。作为一个中国公司的产品，对中文有着良好的支持。&lt;/p>
&lt;h2 id="工具使用">工具使用
&lt;/h2>&lt;p>访问首页以后，就是一个典型的AI应用界面。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-2.png"
width="1910"
height="963"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-2_hu_39601e8efa70ed4f.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-2_hu_9a492bf5e5d16137.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="198"
data-flex-basis="476px"
>&lt;/p>
&lt;p>我们只需要将需要分析的源码项目Github地址输入检索框，如果项目已经被索引，那么回车后就会显示该项目的概要卡片。&lt;/p>
&lt;p>或者更直接的，我们可以直接将源码地址中的&lt;code>github.com&lt;/code> 替换为 &lt;code>zread.ai&lt;/code>，比如针对 &lt;code>Playwright&lt;/code>这个项目的分析，直接访问下面的地址就可以&lt;/p>
&lt;p>&lt;code>https://zread.ai/microsoft/playwright&lt;/code>&lt;/p>
&lt;p>而分析的信息页面，内容非常全面，包括安装部署、架构分析、核心模块等待。下图就是 &lt;code>Playwright&lt;/code> 的架构分析页面&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-4.png"
width="1887"
height="909"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-4_hu_1c35b2a0aa418215.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-4_hu_d3f04b9fee9f4875.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="207"
data-flex-basis="498px"
>&lt;/p>
&lt;p>通过索引生成的分析内容，我们可以快速了解这个开源项目的全貌和最核心的用法和关键所在。&lt;/p>
&lt;h2 id="通过ai的继续加持">通过AI的继续加持
&lt;/h2>&lt;p>出来工具本身针对源码的索引分析解结果，借助它内置的大模型集成，我们还可以继续针对性地对项目进行深入分析和了解具体内容。&lt;/p>
&lt;p>可以通过它 &lt;code>Ask AI&lt;/code>这个功能，和AI深度沟通&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-3.png"
width="1574"
height="916"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-3_hu_60d0d08afbd285fa.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-3_hu_1308e60802349952.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="412px"
>&lt;/p>
&lt;p>比如下面就是我请它整理出的 Playwright 最近4个版本中的重点更新和应用&lt;/p>
&lt;hr>
&lt;p>Playwright最新4个版本（1.53、1.52、1.51和1.50）的重要功能更新如下：&lt;/p>
&lt;h2 id="153版本">1.53版本
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Trace Viewer和HTML Reporter更新&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增了测试步骤显示功能，使测试执行过程更加清晰可见&lt;/li>
&lt;li>HTML报告工具新增自定义测试运行标题选项，方便区分不同的测试运行批次&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">reporter: [[&amp;#39;html&amp;#39;, { title: &amp;#39;Custom test run #1028&amp;#39; }]]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>新增Locator.describe方法&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>允许为定位器添加描述信息，在追踪查看器和报告中显示，提高测试可读性&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">button&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getByTestId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;btn-sub&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Subscribe button&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="n">await&lt;/span> &lt;span class="n">button&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>浏览器版本升级&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Chromium 138.0.7204.4&lt;/li>
&lt;li>Firefox 139.0&lt;/li>
&lt;li>WebKit 18.5&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="152版本">1.52版本
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>新增断言方法toContainClass&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>简化了对元素类名的断言操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">await expect(page.getByRole(&amp;#39;listitem&amp;#39;)).toContainClass(&amp;#39;done&amp;#39;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Aria快照增强&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增&lt;code>/children&lt;/code>属性用于严格匹配&lt;/li>
&lt;li>新增&lt;code>/url&lt;/code>属性用于链接验证&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>测试工程配置改进&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增&lt;code>workers&lt;/code>属性控制测试项目的并发工作进程数&lt;/li>
&lt;li>新增&lt;code>failOnFlakyTests&lt;/code>选项用于CI/CD环境中确保所有测试稳定运行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>重要变更&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Glob URL模式不再支持&lt;code>?&lt;/code>和&lt;code>[]&lt;/code>，推荐使用正则表达式&lt;/li>
&lt;li>&lt;code>Route.continue&lt;/code>不再允许覆盖&lt;code>Cookie&lt;/code>头，需要使用&lt;code>BrowserContext.addCookies&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="151版本">1.51版本
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>IndexedDB存储状态管理&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增对IndexedDB内容的保存和恢复支持，对使用Firebase Authentication等服务的应用很有用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">await page.context().storageState({ path: authFile, indexedDB: true });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>错误提示增强 - &amp;ldquo;Copy as prompt&amp;rdquo;&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>HTML报告、追踪查看器和UI模式中的错误新增&amp;quot;Copy prompt&amp;quot;按钮&lt;/li>
&lt;li>一键复制预填充的LLM提示，包含错误信息和有用的上下文&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>可见元素过滤&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Locator.filter&lt;/code>方法新增&lt;code>visible&lt;/code>选项，只匹配可见元素&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">todoItems&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getByTestId&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;todo-item&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="n">visible&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">true&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Git信息集成&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增&lt;code>captureGitInfo&lt;/code>配置，可在HTML报告中显示Git提交和差异信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="150版本">1.50版本
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>测试步骤改进&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增&lt;code>test.step&lt;/code>超时选项，允许单独设置步骤的最大运行时间&lt;/li>
&lt;li>新增&lt;code>test.step.skip&lt;/code>方法，可禁用特定测试步骤的执行&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">await test.step(&amp;#39;a step&amp;#39;, async () =&amp;gt; { // 这个步骤可以独立于测试超时}, { timeout: 1000 });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>无障碍测试增强&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>扩展了&lt;code>toMatchAriaSnapshot&lt;/code>方法，允许在单独的YAML文件中存储快照&lt;/li>
&lt;li>新增&lt;code>toHaveAccessibleErrorMessage&lt;/code>断言，用于验证元素的aria错误消息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>快照更新策略改进&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>新增&lt;code>updateSnapshots&lt;/code>的&lt;code>changed&lt;/code>选项，只更新已更改的快照&lt;/li>
&lt;li>新增&lt;code>updateSourceMethod&lt;/code>选项，定义源代码更新方式，增加了&lt;code>overwrite&lt;/code>和&lt;code>3-way&lt;/code>模式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>UI更新&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>改进HTML报告中的附件显示&lt;/li>
&lt;li>Codegen添加生成aria快照的元素选择按钮&lt;/li>
&lt;li>追踪显示中增加了操作API调用的详细信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这些更新共同提升了Playwright的测试能力、调试体验和报告功能，使自动化测试更加可靠和高效。&lt;/p>
&lt;h2 id="主动索引和私有仓库">主动索引和私有仓库
&lt;/h2>&lt;p>除了比较热门的开源项目，Zread 已经提前完成索引，一些新的项目或个人项目，如果没有完成所以，输入项目地址后也可以主动发起索引，稍待片刻也即完成分析&lt;/p>
&lt;p>比如下面就是我前段时间开源的测试练习项目，主动发起索引&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728.png"
width="1258"
height="801"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728_hu_dc67e436966a5806.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728_hu_904d38702bcc038f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="157"
data-flex-basis="376px"
>&lt;/p>
&lt;p>很快就得到了针对这个项目的完整介绍和核心代码分析&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-1.png"
width="1902"
height="970"
srcset="https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-1_hu_55e392192bd9dde3.png 480w, https://chengxiaqiucao.github.io/post/115-zread_ai/Pasted-20250728-1_hu_e3093dbd850e6b17.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="470px"
>&lt;/p>
&lt;p>对于一些非公开的私有仓库，也可以通过授权的方式，将代码读取权限开放给 &lt;code>Zread.ai&lt;/code>, 同样可以实现以上目的。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>总之，这个工具对于我们快速了解一个开源项目，绝对是一个强力的助手，强烈安利一下~~&lt;/p></description></item><item><title>当AI编写应用程序，是质量的福音还是挑战？</title><link>https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/</link><pubDate>Thu, 24 Jul 2025 16:49:36 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/AI_check.png" alt="Featured image of post 当AI编写应用程序，是质量的福音还是挑战？" />&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/AI_check.png"
width="1186"
height="680"
srcset="https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/AI_check_hu_4a2e784331721820.png 480w, https://chengxiaqiucao.github.io/post/114-test_ai_coded_app/AI_check_hu_4a859469b16058e0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;h1 id="当ai编写应用程序是质量的福音还是挑战">当AI编写应用程序，是质量的福音还是挑战？
&lt;/h1>&lt;p>随着 AI 模型的能力越来越强，以Copilot、Cursor、Claude Code、Gemini Cli等为代表的AI编程工具开始逐渐进入软件开发的日常使用，“vibe coding”越来越成为应用开发的趋势。&lt;/p>
&lt;p>那么当AI越来越多地参与进实际应用程序的开发，对于基于这种方式完成的应用程序质量来说，到底是好是坏呢？&lt;/p>
&lt;p>本篇就结合笔者近期使用多款氛围编程工具的体会，谈谈看法。&lt;/p>
&lt;h2 id="ai编程看上去很美好">AI编程，看上去很美好
&lt;/h2>&lt;p>从接触AI编程开始，很多人都会惊叹于它极速、高效的强大能力，而且通常结合良好的提示词工程，能在极短时间内完成原型设计，得到的成品也往往能超出预期地功能完备。&lt;/p>
&lt;p>只要我们对软件应用开发有所了解，结合提示词工程，从前端、后端到数据库，AI 都能帮我们完成从设计到代码的全部工作。工程师需要做的，似乎就是不断地和AI完成沟通，对输出的结果进行不断地优化和调整。&lt;/p>
&lt;p>可以说，AI编程工具的出现，让很多非程序员也能完成很多创意应用的开发，大大降低了软件开发的门槛。&lt;/p>
&lt;p>在各大软件开发企业中，开发工程师借助AI工具辅助完成越来越多的代码，也逐渐成为常态。&lt;/p>
&lt;p>AI编程的未来，这么近，那么美~&lt;/p>
&lt;p>但是，如果不是验证原型目的，要按一个生产级应用的标准来要求AI开发的应用程序，那么复杂、痛苦的调试过程却必然不会缺席。&lt;/p>
&lt;p>“开发十分钟，调试两整天” 其实更是结合AI编程的常态。&lt;/p>
&lt;h2 id="让人无语的-ai-脑补">让人无语的 AI 脑补
&lt;/h2>&lt;p>虽然“提示词工程”总结和强调了和AI合作的一些最佳方式，但实际工作中，很多时候，工程师还是会倾向用简洁的指令和AI交流。&lt;/p>
&lt;p>而在这种指令信息不充分和精确的时候，AI 自然会脑补出很多它认为必要、但实际却似是而非的代码。这时，工程师必然需要花费大量的时间去检查和调整AI的行为。&lt;/p>
&lt;p>通过AI来进行编码实现的同学，应该都有因为部分基本的逻辑或前端界面调整，结果耗费了大量时间的经验。&lt;/p>
&lt;p>比如笔者就遇到过，仅仅是希望在页面表单中增加一个字段，同时后端数据库也同步进行调整的改动，AI却总是会错义，不是没同步就是去改动不相干的其他表单，反复拉锯，耗费大量时间。&lt;/p>
&lt;p>本来就是两行代码的事，却因为自己不熟悉AI生成的代码结构，依赖AI反复修改，虽然最后也达到了效果，却又无谓插入了大量的“屎山”代码。&lt;/p>
&lt;h2 id="集成和解耦性上的不足">集成和解耦性上的不足
&lt;/h2>&lt;p>AI生成代码，一般会首先根据初始需求确定好项目代码结构，然后再根据具体的拆分任务完成代码的填充。&lt;/p>
&lt;p>但随着项目进行和需求的不断优化，通常会将主要逻辑集中在部分主文件之中，很容易导致一些主文件过于臃肿。而AI依赖大模型的能力，通常又存在上下文窗口的限制，臃肿的文件对于代码的生成效率和成果又有很大制约。&lt;/p>
&lt;p>所有随着需求的不断细化和调整，代码越来越臃肿，也越来越混乱。很少会像实际工程中那样进行适当的解耦和重构，AI本身对代码的理解往往变得越来越困难，很难再有初始时的惊艳感。&lt;/p>
&lt;p>这时，工程师的干预就必不可少，否则，AI编码更像是在“屎上雕花”。&lt;/p>
&lt;h2 id="所见未必所得">所见未必所得
&lt;/h2>&lt;p>AI生成的代码，为了及时呈现成果，有时还会“作弊”，对一些数据效果的呈现进行硬编码。&lt;/p>
&lt;p>也许初期为了展示成果，必要的模拟数据必不可少。但区分硬编码和正确处理逻辑却并不能完全相信AI。&lt;/p>
&lt;p>笔者曾在一个AI辅助编写的工具中，向它指出当我录入某条特定数据后，实际效果和预期不符。结果AI在假模假式分析半天以后，告诉我找到原因。但我实际检查代码，竟发现它在这部分的处理，居然是针对这条特定数据做了个if判断，强制特殊处理拉倒。&lt;/p>
&lt;h2 id="对质量的挑战">对质量的挑战
&lt;/h2>&lt;p>所以通过以上的说明（吐槽），虽然AI在辅助编码上成效惊人，而且不乏和工程师配合良好的案例。但很多基于AI辅助生成的应用，并不能消除质量堪忧的疑虑。&lt;/p>
&lt;p>或许AI本身还会帮你生成单元测试，但就像智能驾驶依然不能代替人类决策，在质量这个领域，人类测试工程师的作用，依然不可替代，甚至在AI应用越来越多的情况下，人工测试的重要性还越来越凸显。&lt;/p>
&lt;ul>
&lt;li>代码本身的质量&lt;/li>
&lt;li>复杂应用的整体规划和大范围上下文理解&lt;/li>
&lt;li>可扩展性、性能、安全性等方面的不足&lt;/li>
&lt;li>模拟数据、硬编码&lt;/li>
&lt;/ul>
&lt;h2 id="测试工程师如何应对">测试工程师如何应对
&lt;/h2>&lt;p>那么针对AI生成应用的质量挑战，测试工程师也应该针对性地进行对它的输出进行测试和验证&lt;/p>
&lt;p>可以从如下几方面重点考虑：&lt;/p>
&lt;h4 id="传统标准的系统验证">传统标准的系统验证
&lt;/h4>&lt;p>作为一个产品，测试首先自然还是应该从需求和产品目标、用户使用角度去测试AI应用的成品，确保符合产品需求和质量标准&lt;/p>
&lt;h4 id="产品集成度可扩展性性能安全">产品集成度、可扩展性、性能、安全
&lt;/h4>&lt;p>针对AI代码的薄弱环节，从产品集成度、可扩展性、性能、安全等场景重点考虑，针对性测试&lt;/p>
&lt;h4 id="从黑盒到白盒">从黑盒到白盒
&lt;/h4>&lt;p>AI错觉的存在，要求测试工程师，不仅从黑盒角度去验证应用，也应该关心AI生成应用的过程，特别是工程师开发过程中，相关的提示词、上下文以及AI的响应记录，都是了解潜在质量问题的来源。很多如硬编码问题，可能就隐藏在一些误导的交互中。&lt;/p>
&lt;h4 id="拥抱ai用魔法打败魔法">拥抱AI，用魔法打败魔法
&lt;/h4>&lt;p>AI虽然还存在很多问题，错误的使用可能得到糟糕质量的产品。但使用AI得当，却也能切实提供很好的帮助。&lt;/p>
&lt;p>利用AI，我们可以分析产品代码、梳理项目架构，帮助我们更好去理解项目的实现，包括基于AI去辅助完成包括自动化测试在内的很多测试工作。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>总而言之，良好质量的产品，离不开成熟的团队和规范的流程。对于测试人员来说，AI时代也在重新定义我们角色的机会。拥抱AI驱动开发的挑战，测试人员也会是不可或缺的参与者和合作者，拥抱AI，也拥抱未来！&lt;/p></description></item><item><title>用好AI的新风向，从提示词工程到上下文工程</title><link>https://chengxiaqiucao.github.io/post/112-context_engineering/</link><pubDate>Mon, 14 Jul 2025 15:58:57 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/112-context_engineering/</guid><description>&lt;h2 id="前言">前言
&lt;/h2>&lt;p>随着 AI 大模型的爆发，&lt;strong>提示词工程（prompt engineering ）&lt;/strong> 一度是用户应用 AI ，发挥 AI 能力最重要、也最应该掌握的技术。 但现在，在 “提示词工程”的基础上，一个更宽泛也更强力的演化概念被提出，也就是本文我们要介绍的 “&lt;strong>上下文工程（Context Engineering）&lt;/strong>”&lt;/p>
&lt;p>特别是今年以来，随着 AI Agent的爆发，在应用 AI 时，将哪些信息有效传递给 AI “有限的记忆空间”变得越来越重要。很多时候，调用 AI Agent 效果不佳，并不是大模型本身的能力不佳，更多是&lt;strong>上下文&lt;/strong>的质量有所欠缺。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250715-1.png"
width="872"
height="473"
srcset="https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250715-1_hu_5a0ca8bcb2a82d41.png 480w, https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250715-1_hu_133714436c997fc7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="184"
data-flex-basis="442px"
>&lt;/p>
&lt;h2 id="提示词工程的局限性">提示词工程的局限性
&lt;/h2>&lt;p>&lt;strong>提示词工程&lt;/strong> 通过优化输入给模型的文本，可以优化模型的输出质量。&lt;/p>
&lt;p>但随着越来越多Agent的加入，以及应用场景的复杂化，仅依靠提示词，已经很难让大模型有效完成
越来越复杂的任务。&lt;/p>
&lt;p>比如要完成一个AI智能测试用例系统，在利用大模型的过程中，还需要如下信息：&lt;/p>
&lt;ul>
&lt;li>原始的需求文档、接口文档信息&lt;/li>
&lt;li>系统的架构设计、数据库、系统框架&lt;/li>
&lt;li>各种应用接口的状态&lt;/li>
&lt;li>和用例管理、文档管理、自动化测试等外部工具的调用。&lt;/li>
&lt;/ul>
&lt;p>这些要求，仅仅通过向大模型和对应的Agent传递提示词，已经很难完成。&lt;/p>
&lt;p>这也就是提示词工程最大的局限性：&lt;strong>缺乏上下文理解与状态管理能力&lt;/strong>。&lt;/p>
&lt;h2 id="何为上下文工程">何为上下文工程？
&lt;/h2>&lt;p>要理解“上下文工程”，先要明确，何为&lt;strong>上下文&lt;/strong>？&lt;/p>
&lt;p>相比提示词（prompt），&lt;strong>上下文（context）&lt;/strong> 并不仅仅是我们传递给大模型的单一的提示词，可以认为是&lt;strong>大模型在返回结果前，它所看到的一切信息&lt;/strong>&lt;/p>
&lt;p>总结来说，&lt;strong>上下文&lt;/strong> 包含如下一些内容：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250714.png"
width="2160"
height="1790"
srcset="https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250714_hu_26f7244442591f29.png 480w, https://chengxiaqiucao.github.io/post/112-context_engineering/Pasted-20250714_hu_881199fd388ffe72.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="120"
data-flex-basis="289px"
>&lt;/p>
&lt;h3 id="背景介绍系统提示词instructions--system-prompt">背景介绍/系统提示词(**Instructions / System Prompt)
&lt;/h3>&lt;p>这是用户和大模型在整个会话期间的初始约定。包括约定背景、大模型充当的角色、它的期望行为等。可以通过一些示例和规则定义进行约束。&lt;/p>
&lt;p>比如我们之前介绍过的通过AI来编写测试用例生成工具，系统提示词可以约定&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">你是一个资深测试开发专家，负责根据用户提供的接口文档，调用本地配置的AI大模型，生成一组详细的测试用例。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你需要确保每个测试用例都具有明确的目标、输入参数、预期结果。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请按照指定格式输出JSON数组，每个条目包括：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- test_case_id: 测试用例编号
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- description: 测试描述
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- input_params: 输入参数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- expected_output: 预期输出
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- priority: 优先级（1-5）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="用户提示词user-prompt">用户提示词(User Prompt)
&lt;/h3>&lt;p>用户提示词，相对系统提示词是作用于整个会话来说，是用户当前告知AI大模型的指令或提出的问题。&lt;/p>
&lt;p>它其实就是之前说到提示词工程的主要应用，通过优化用户提示词的编写，可以和AI完成更有效的沟通。&lt;/p>
&lt;p>如上例，在AI辅助开发的过程中，我们向AI提交的具体开发任务。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">根据之前生成的项目代码结构，完成数据库创建部分的脚本，并注入部分调试数据。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="状态及对话历史短期记忆">状态及对话历史（短期记忆）
&lt;/h3>&lt;p>主要指在当前会话过程中，产生的对话历史和生成的中间结果。&lt;/p>
&lt;p>比如在脚本开发过程中，完成的代码文件，程序运行出现的错误等信息。&lt;/p>
&lt;h3 id="长期记忆">长期记忆
&lt;/h3>&lt;p>这里包含更持久的背景知识，包括之前多次的对话信息收集，如已学习到的用户偏好、过去项目的总结，或者由用户告知、以备将来使用的信息。&lt;/p>
&lt;p>如上述开发过程，包括项目的需求文档、架构设计、数据库结构、测试数据等信息。&lt;/p>
&lt;h3 id="rag检索增强生成retrieval-augmented-generation-">RAG(检索增强生成，Retrieval-augmented generation )
&lt;/h3>&lt;p>RAG是通过向量数据库、知识库检索等方式，为模型提供额外的相关信息。它让模型能够在回答问题时参考最新的、相关的上下文，而不是依赖于训练时的知识。&lt;/p>
&lt;h3 id="结构化输出">结构化输出
&lt;/h3>&lt;p>为了让模型输出更加可控和可解析，并便于 Agent 的处理，我们通常需要定义输出格式，例如 JSON Schema 或特定字段结构，提高结果一致性。&lt;/p>
&lt;p>例如之前的系统提示词，明确要求模型输出一个包含相关字段的 JSON 对象。&lt;/p>
&lt;h3 id="可用工具">可用工具
&lt;/h3>&lt;p>通过 Agent 或 MCP， 大模型可以调用工具能力，比如自动化测试工具（Playwright）、CI/CD持续集成系统等等&lt;/p>
&lt;h2 id="使用上下文工程的关键">使用上下文工程的关键
&lt;/h2>&lt;p>✅ 上下文不是一个字符串，而是一个系统&lt;/p>
&lt;p>上下文是运行在 LLM 调用之前的系统逻辑，它动态组装所有相关信息，而不是一个静态模板。&lt;/p>
&lt;p>✅ 上下文是动态的&lt;/p>
&lt;p>每次调用 LLM 之前，都要根据当前任务动态准备上下文，例如注入当前日期、用户偏好、项目配置等。&lt;/p>
&lt;p>✅ 上下文强调信息与工具的精准匹配&lt;/p>
&lt;p>不能简单堆砌信息，而是要在合适的时间提供最相关的知识和能力。例如，只在需要时注入数据库连接工具。&lt;/p>
&lt;p>✅ 格式决定输出质量&lt;/p>
&lt;p>如何呈现信息很重要。简洁的摘要比原始数据更好，清晰的工具 schema 比模糊的说明更有用。&lt;/p>
&lt;h2 id="结语">结语
&lt;/h2>&lt;p>科技行业，每隔一段时间就会产生新名词、新概念，大家已经见怪不怪。“&lt;strong>上下文工程&lt;/strong>” 虽然概念上和 ”&lt;strong>提示词工程&lt;/strong>“ 有所区别，但它们的出发点和目标其实是一致的，就是让用户和AI实现更有效的沟通。本质上跟我们前文 【】中的解释是一脉相承的。&lt;/p>
&lt;p>它其实并不是一个新兴的技术，我们把它理解成使用AI的技巧就好！&lt;/p></description></item><item><title>和AI的协作，重点依然是沟通，细说如何与AI更有效沟通</title><link>https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/</link><pubDate>Wed, 02 Jul 2025 21:46:47 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/logo.png" alt="Featured image of post 和AI的协作，重点依然是沟通，细说如何与AI更有效沟通" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>在我之前的文章 【】，我们探讨过团队协作中沟通的核心作用。现如今AI的应用越来越广泛，特别是生成式AI的强大能力，让很多工作我们其实都可以借助AI得以完成，从AI浏览器、编程助手、工作流引擎到各种MCP的接入，AI已经越来越多地参与到我们的日常工作。&lt;/p>
&lt;p>而借助AI完成工作，本质上也是一种团队协作，只是这里的协作对象变成了AI。所以在和AI协作中，核心也依然是沟通。&lt;/p>
&lt;p>所以从这个角度，本文我们来思考如何与AI更有效地完成沟通和协作&lt;/p>
&lt;h2 id="乔哈里沟通视窗">乔哈里沟通视窗
&lt;/h2>&lt;p>在团队协作中，有一个重要的模型工具，就是我们之前介绍过的&lt;strong>乔哈里沟通视窗&lt;/strong>&lt;/p>
&lt;p>在这个视窗中，我们按照沟通对象和自己对事物的认知水平，划分出四个象限。了解沟通时双方处于哪一个象限，才能更好地去完成沟通。&lt;/p>
&lt;p>而我们在和AI进行协作时，同样也可以划分出这样一个沟通视窗模型：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/Pasted-20250705.png"
width="1164"
height="656"
srcset="https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/Pasted-20250705_hu_19b090f5a2c489af.png 480w, https://chengxiaqiucao.github.io/post/107-%E5%92%8Cai%E6%B2%9F%E9%80%9A/Pasted-20250705_hu_e63b71b0ba98c753.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="425px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>开放区&lt;/strong>：这个区间对应的是我们和AI都已经具备和理解的信息，可以认为是双方的共识。比如我们和AI沟通时，往往要预设AI的角色身份，这类指令就属于开放区信息。 又或者我们已经完成的文章，请AI在文章基础上进行润色。都属于比较典型的在开放区沟通&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>盲点区&lt;/strong>：这里的信息是我们本身不具备，但AI通过丰富的知识储备，可以提供给我们并不掌握的知识。这里AI就像是一个老师，但是这个老师是被动的，要靠我们主动的提问来获取知识。提问能力是这个区间沟通的要点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>未知区&lt;/strong>：这个区间的信息是我们不清楚，同时AI也还没掌握的一些信息或知识。在这个区间的沟通，更像是和AI一起共创，通过和AI一起头脑风暴，探索出未知领域的信息。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>隐藏区&lt;/strong>：在这个区间，更多是我们私域的一些信息，AI本身无法触及，比如我们直接给AI下达指令 &lt;code>请帮我输出本周工作汇报&lt;/code>，那AI自然无从下手。因此在这个区域的沟通，其实就是我们要充分提供给AI需要的上下文信息，将私域信息投喂给AI。比如我们工作中的一些项目背景、内部流程、本地数据，只有AI学习掌握了这些信息，才能进一步完成后续的辅助工作。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="和不同象限ai的沟通技巧">和不同象限AI的沟通技巧
&lt;/h2>&lt;p>那么基于以上视窗模型划分出的四个不同区间，我们可以思考和AI协作时的沟通要点，也就是如何更好地应用提示词让AI给出更贴合我们需要的结果。&lt;/p>
&lt;h3 id="开放区的沟通">开放区的沟通
&lt;/h3>&lt;p>这个区间，因为双方都掌握了相关的信息，更多是让AI明确这个开放区间的边界，指定信息越明确、越具体，AI的结果便越能贴合我们的需求。所以在这个区间，我们更重要的是比较明确地 &lt;strong>下达任务&lt;/strong>。而且应避免画蛇添足，反而因为提示词指令不够明确而导致结果发散。&lt;/p>
&lt;p>比如：&lt;/p>
&lt;p>&lt;code>你是一名资深软件测试工程师，精通自动化测试，熟悉Python语言，熟悉各种测试工具。&lt;/code>&lt;/p>
&lt;p>&lt;code>精确翻译附件中的英文文档，并用Markdown格式返回翻译后的内容，不用包含任何非目标内容的信息&lt;/code> 就比 &lt;code>用诙谐、生动，贴合互联网热点的文风翻译附件英文文档&lt;/code> 更能保留原文的内容要点而不会额外添加很多并不一定合适的补充素材，且返回的内容可以直接生成为我们需要的格式。。&lt;/p>
&lt;h3 id="盲点区的沟通">盲点区的沟通
&lt;/h3>&lt;p>在盲点区，是借助AI能力，最容易让我们自己得到提升的区域。通过AI，补充我们的知识不足，消除我们的知识盲点。&lt;/p>
&lt;p>这个区域，和AI高效沟通的要点，其实是提问能力。对于比较复杂的信息，我们可以通过逐步推进，递进提问的方式，让AI逐步完整地构建出知识体系，识别出我们的盲点，并加以补强。对应提示词工程中，有一个专门的技术术语 &lt;strong>COT思维链（Chain-Of-Thought）&lt;/strong>，就是可以引导AI逐步思考递进来得到我们真正需要的知识。&lt;/p>
&lt;p>这一点，也可以参考我们之前介绍过的 &lt;strong>5Why提问法&lt;/strong>，逐步聚焦问题的根本原因。&lt;/p>
&lt;p>比如我们希望掌握自动化测试中的POM模型，并能过实际解决实施中的具体问题，就可以逐步提问聚焦解决实际问题&lt;/p>
&lt;ul>
&lt;li>&lt;code>什么是POM模型&lt;/code>&lt;/li>
&lt;li>&lt;code>POM模型更适合应用在哪些场景的自动化测试中？&lt;/code>&lt;/li>
&lt;li>&lt;code>针对一个web门户站点，比如www.saucedemo.com的登录场景，给出基于Python语言来实现POM的案例并说明其中的关键&lt;/code>&lt;/li>
&lt;li>&lt;code>在上述案例中，还有哪些通用的方案适合用来进行统一的封装，比如元素的识别，驱动的定义？&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="未知区的沟通">未知区的沟通
&lt;/h3>&lt;p>未知区是我们和AI都不掌握的内容，这个更多是一些创新的场景，通过和AI的不断磨合，头脑风暴，来逐步发现我们真正的需要。&lt;/p>
&lt;p>比如借助AI编程助手帮助我们开发一个应用，我们可能只构思了基本的功能，AI会根据提供的信息帮助我们生成应用界面，而我们基于它的界面还会有更进一步的改进想法，如此不断沟通和磨合，最终完成一个具备易用性的软件产品。&lt;/p>
&lt;p>所以这里的沟通，重点在&lt;strong>共同创新、不断磨合&lt;/strong>&lt;/p>
&lt;h3 id="隐藏区的沟通">隐藏区的沟通
&lt;/h3>&lt;p>隐藏区则是AI当前能力不能触及，很多时候是要基于内部信息、本地数据完成。这时要善用AI，就需要我们构建充分信息的上下文，把我们的本地信息、数据投喂给AI，让AI消化，弥补它不了解的那部分信息，让沟通从隐藏区走向公开区后，就可以明确下达任务来进行处理了。&lt;/p>
&lt;p>那这部分的沟通重点，其实是可以通过类似RAG、模型微调，或构建本地知识库、包括通过MCP暴露本地能力调用等方式，让AI具备触及知识盲区的能力。&lt;/p>
&lt;p>这个区域的沟通重点，就是向AI充分提供它尚未了解的背景和关联信息，在&lt;strong>投喂并消化信息&lt;/strong>后达到正常协作的的目的。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>当我们希望把AI当作一个切实能帮助到我们的协作对象时，那么我们就应该建立和协作对象良好的沟通，乔哈里窗提供了一个良好的沟通模型，可以为我们善用AI提供这方面的良好指引。&lt;/p>
&lt;hr></description></item><item><title>MCP必将失败？关于MCP的质疑声</title><link>https://chengxiaqiucao.github.io/post/106-mcp_must_fail/</link><pubDate>Sun, 29 Jun 2025 21:25:34 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/106-mcp_must_fail/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629.png" alt="Featured image of post MCP必将失败？关于MCP的质疑声" />&lt;blockquote>
&lt;p>&lt;strong>模型上下文协议（Model-Context Protocol, MCP&lt;/strong> 从推出以来，备受关注并得到了快速的应用。目前大量的AI工具均已集成了对MCP的支持。（关于MCP的具体介绍，可以参见我之前的文章【】） 但随着MCP的崛起，对于他的质疑声也逐渐开始出现，比如对于它在安全方面的局限性的担忧（参见我之前的文章【】），近期 Edgenesis 创始人 Yongli,Chen 也发文认为MCP必将失败。这里将他的主要观点梳理为本文（原文参见文后链接），大家可以做个参考和判断&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629.png"
width="1120"
height="630"
srcset="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629_hu_d5ae8560451876a0.png 480w, https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629_hu_21177ec8b7dbaade.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="导语">导语
&lt;/h2>&lt;p>&lt;strong>模型上下文协议（Model-Context Protocol, MCP）&lt;/strong> 从问世之初就备受瞩目，它被誉为一种通用标准，旨在实现人工智能（AI）模型与各类软件工具之间的无缝集成。从表面上看，该协议确实解决了一个真实的行业痛点：&lt;strong>用一套简单、标准的解决方案，取代当前由各种定制化应用程序接口（API）和专有插件构成的混乱局面&lt;/strong>。MCP的支持者们描绘了这样一幅未来图景：AI代理能够毫不费力地连接无数应用程序，无需再进行繁琐的定制化集成。&lt;/p>
&lt;p>然而，尽管MCP在技术上尽显优雅，早期也收获了极大的关注，但它注定会步履维艰。这并非源于技术上的缺陷，而是因为它从根本上误解了一个关键的经济现实：在数字商业版图中，最终用户的关注度才是商业取胜的关键。
各大公司都会不遗余力地守护用户的注意力，因为这才是他们最主要的变现来源。所以，工具供应商们实际上根本无法承受因全面采纳MCP而将自身降级为单纯后端功能的代价。&lt;/p>
&lt;h2 id="真正的战场注意力的所有权">真正的战场：注意力的所有权
&lt;/h2>&lt;p>要理解MCP为何会面临阻力，我们必须先思考一个基本事实：&lt;strong>谁控制了用户界面，谁就掌握了用户关系&lt;/strong>。拥有界面的企业，就意味着拥有了用户的参与度、数据以及由此产生的收入机会。反之，那些被降级到后端的服务，则会变成可以被随意替换的商品，不仅容易被取代，还会被剥夺与客户的直接联系。&lt;/p>
&lt;p>历史一再证明了这一定律。例如，Facebook正是通过将第三方应用程序转变为纯粹的内容提供者，才建立起自己的商业帝国。早期的社交游戏巨头Zynga就曾惨痛地吸取过这一教训。当年，Facebook更改平台规则、收紧限制，导致Zynga游戏的曝光度大减。Zynga的命运就此被注定，因为Facebook牢牢控制着用户的注意力，从而主宰了Zynga的收入和客户互动。&lt;/p>
&lt;p>同样，Twitter之所以封锁第三方客户端，也是因为这些客户端允许用户绕过Twitter的广告系统，这无异于“窃取”了平台的用户注意力。苹果公司对待网页应用的态度是另一个极具说服力的例子：多年来，苹果一直有意限制iOS系统上网页应用的功能，以此确保App Store中的原生应用占据主导地位，从而维护苹果与用户的直接关系及其收入流。&lt;/p>
&lt;h2 id="mcp的天真提议">MCP的天真提议
&lt;/h2>&lt;p>而MCP实际上是在要求软件供应商们自愿接受一种新的模式：将他们的&lt;strong>核心功能变为简单的后端服务，主要通过AI驱动的界面来被访问&lt;/strong>。&lt;/p>
&lt;p>想象一下，未来预订旅行完全通过一个AI助手完成，该助手在幕后通过MCP与航空公司、酒店和旅行社进行着无形的互动。在这种模式下，作为用户接触点和决策点的界面将完全属于AI助手，使得各大供应商无法直接触及用户的注意力。&lt;/p>
&lt;p>这实际上是将供应商们从拥有差异化品牌和客户忠诚度的“目的地”，降格为了标准化的“公用设施”。这种转变会严重威胁到供应商们捕获价值的核心能力。&lt;/p>
&lt;p>软件即服务（SaaS）和工具类供应商在很大程度上依赖于与用户的直接互动来实现其商业变现，例如向上销售增值功能、打造品牌体验以及收集宝贵的用户数据。&lt;/p>
&lt;p>一旦全面拥抱MCP，这些供应商就等于将用户界面拱手让给了外部的AI聚合平台，其结果将不可避免地导致客户关系和直接变现渠道的丧失。&lt;/p>
&lt;h2 id="来自当前ai生态的证据">来自当前AI生态的证据
&lt;/h2>&lt;p>现实中，各大软件公司在处理与 OpenAI 的 &lt;strong>ChatGPT&lt;/strong>、Anthropic 的 &lt;strong>Claude&lt;/strong> 等AI驱动平台的关系时，已经表现得十分谨慎。&lt;/p>
&lt;p>无论是Salesforce、微软还是谷歌，它们都在寻求将AI能力深度嵌入到自己的专有界面中，而不是允许自己的工具被外部AI代理完全调用。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1.png"
width="1216"
height="815"
srcset="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1_hu_136c3d71c4f80399.png 480w, https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1_hu_3c16a91a08a0a2da.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="358px"
>&lt;/p>
&lt;p>例如，Salesforce推出的Einstein GPT，就将AI直接集成到了其客户关系管理（CRM）系统中，从而将用户牢牢地锁定在自己的生态系统内。同样，微软也优先将Copilot AI深度嵌入到Office和Windows环境中。当工具供应商确实尝试进行外部AI集成时，它们通常也只提供有限的功能——这些功能足以吸引用户，但又不足以完全替代它们自己的界面。例如，一个旅游应用或许会允许AI助手浏览航班信息，但最终一定会将用户引导回自己的平台去完成预订，以此来保留关键的客户互动和向上销售的机会。&lt;/p>
&lt;h2 id="mcp必将面临困境">MCP必将面临困境
&lt;/h2>&lt;p>过往的经验清晰地揭示了 MCP 为何难以获得广泛采用，尤其是那些主导着市场注意力的大型软件供应商，必然不可能全面转向 MCP。&lt;/p>
&lt;p>如果这些供应商真的认为，放弃用户注意力来实现开放集成是有价值的，那么他们早就免费提供功能全面的公共API了。然而事实恰恰相反，他们通常会构建受到严格控制的生态系统，通过选择性的集成来吸引新用户，绝不会主动放弃对用户体验或营收的控制权。&lt;/p>
&lt;p>这种小心翼翼的平衡之举，恰恰凸显了 MCP 的根本性缺陷：无论一项协议在技术上多么优雅或优越，软件供应商们其实没有任何动机会将自己宝贵的客户关系和变现能力拱手让给外部的聚合者。&lt;/p>
&lt;h2 id="平台经济学才是技术的基础">平台经济学才是技术的基础
&lt;/h2>&lt;p>归根结底，决定MCP命运的，并非其技术上的优劣，而是商业激励机制和平台经济的动态。平台的所有者必然会想方设法保护他们的核心资产——即与用户的直接联系。MCP所提出的方法从根本上颠覆了这一动态，使其与根深蒂固的经济激励背道而驰。&lt;/p>
&lt;p>在实践中，MCP或许能在一些小型供应商或那些开放本身就具有内在价值的小众社区中获得有限的采用。然而，在主导当今数字经济的主流 SaaS 供应商和大型平台中，MCP的采用充其量更多是扩展自身而非外放能力的。&lt;/p>
&lt;p>本质上，虽然MCP试图成为通用标准，但正面临一个残酷的经济现实：没有哪家公司愿意自甘沦为一个隐形的背景板。各大公司必然会拼尽全力捍卫自己对用户界面（即&lt;strong>用户关系的控制权&lt;/strong>)，并限制任何可能威胁其战略地位的集成。&lt;/p>
&lt;h3 id="结论">结论
&lt;/h3>&lt;p>MCP所描绘的无缝、通用AI集成的愿景固然引人入胜，但在商业世界，单凭引人注目的技术很少能决定成败。
关于标准的争夺，最终是关于经济话语权的争夺。而MCP的设计，恰恰挑战了数十年来驱动数字经济发展的基本激励结构。也正因如此，MCP在走向广泛应用的道路上面临着巨大的障碍。&lt;/p>
&lt;p>在它能够更好地契合平台经济学和供应商的内在动力之前，MCP想要成为AI与工具集成的通用标准，恐怕也只能是一个遥远的梦想。&lt;/p>
&lt;p>原文链接：
&lt;a class="link" href="https://www.forbes.com/councils/forbestechcouncil/2025/06/12/mcp-will-fail-and-heres-why/" target="_blank" rel="noopener"
>https://www.forbes.com/councils/forbestechcouncil/2025/06/12/mcp-will-fail-and-heres-why/&lt;/a>&lt;/p></description></item><item><title>Cursor天塌了，Google开源Gemini-cli，编程助手卷王来了</title><link>https://chengxiaqiucao.github.io/post/103-gemini-cli/</link><pubDate>Thu, 26 Jun 2025 13:21:59 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/103-gemini-cli/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626.png" alt="Featured image of post Cursor天塌了，Google开源Gemini-cli，编程助手卷王来了" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>昨天（2025-6-25），Google重磅开源了一个基于命令行的AI编程Agent &lt;code>Gemini-Cli&lt;/code>，让AI辅助编程深度集成到开发人员最熟悉的Terminal命令行界面，而且直接集成了Google最新的&lt;code>Gemini 2.5 Pro&lt;/code>能力，开发者免费使用（有上限，但额度大方）。短短1天，Github上已冲到20K star，可见开发者对这款工具的热情之高！！&lt;/p>
&lt;p>开源项目地址： &lt;a class="link" href="https://github.com/google-gemini/gemini-cli" target="_blank" rel="noopener"
>https://github.com/google-gemini/gemini-cli&lt;/a>&lt;/p>
&lt;p>star记录，恐怖的垂直上升 😂😂&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4.png"
width="1190"
height="720"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4_hu_c46e188a206bac81.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4_hu_d69e3ee6e9cbb9a4.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="396px"
>&lt;/p>
&lt;p>下面我们带来开箱试用体验！&lt;/p>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>&lt;code>Gemini-Cli&lt;/code>的安装，非常便捷，它依赖 &lt;code>node.js&lt;/code>, 确保本机安装 node.js 18以上版本，然后直接运行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx https://github.com/google-gemini/gemini-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者用npm安装后，执行 &lt;code>gemini&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @google/gemini-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gemini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就会进入命令行启动界面：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626.png"
width="1684"
height="935"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626_hu_e8a739450c02a658.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626_hu_22047bd4f424ee3a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;p>选择一个自己喜欢的编程主题，然后会提示你鉴权，通常可以选择用google账号登录即可，授权显示如下信息即可继续使用。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1.png"
width="1753"
height="778"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1_hu_f78089d2e5e4bbf8.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1_hu_5930a9073c13303b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="225"
data-flex-basis="540px"
>&lt;/p>
&lt;p>授权以后，默认就拥有了Gemini 25 pro 等多个AI大模型的能力，并且非常 “壕” 地提供了 &lt;strong>每分钟60次，每天1000次&lt;/strong> 的AI调用，相比很多其他大模型还在以token数量进行限制，确实大气！ 对比 &lt;code>Cursor&lt;/code> 收费版每月500次的数量限制，估计Cursor要在厕所哭晕了~~&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2.png"
width="878"
height="457"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2_hu_fa329f28c6ed6678.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2_hu_11cf7b2217936cc7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;h2 id="试用效果">试用效果
&lt;/h2>&lt;p>废话不多说，作为一个测试业者，先请它帮忙做一个基于AI的用例生成工具。&lt;/p>
&lt;p>给出指令如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">编写一个web程序，支持上传需求文档并调用ai能力转换为测试用例，用例以表格形式显示在页面上，包含用例ID、用例名称、描述、测试步骤、优
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 先级、通过标准、关联需求ID（可选）等字段
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>很快，经过短暂的分析，就给出了实现方案。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5.png"
width="1499"
height="887"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5_hu_5cf3f3142724e89e.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5_hu_6847e6b58b410179.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="405px"
>&lt;/p>
&lt;p>开始具体操作过程中，会自动创建相关代码文件，并指引你逐步配合它完成从数据模拟到真正的AI能力集成等步骤。&lt;/p>
&lt;p>经过半个多小时的配合工作（主要是出现报错后把报错信息贴给它），最终我们成功实现了一个基本的AI用例生成工具。&lt;/p>
&lt;p>比如将我之前开源的测试练习站点的需求 &lt;code>req-sprint0.md&lt;/code> 上传：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 个人图书管理系统 - 迭代1 需求文档  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**版本**&lt;/span>：v1.0  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**目标**&lt;/span>：实现个人图书的基础增删改查功能  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事1：添加图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 添加新图书到我的书库  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以记录拥有的书籍  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准 (Given-When-Then):**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**成功添加**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在“添加图书”页面  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 填写必填字段（图书名称、作者）并点击提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统保存图书，显示“添加成功”提示，并跳转至图书列表页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**添加失败（校验缺失）**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户未填写“图书名称”或“作者”  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击提交按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统在对应字段下方显示红色错误提示  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事2：查看图书列表**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 查看所有图书列表  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以快速浏览藏书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**基础列表展示**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 存在至少一本图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 用户访问首页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 以表格形式展示所有图书（至少包含名称、作者、阅读状态）  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**空状态处理**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 无任何图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 用户访问首页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 显示“暂无图书，点击添加”的提示和跳转链接  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事3：编辑图书信息**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 修改图书信息  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以更新书籍状态或备注  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**成功编辑**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户从列表页进入某图书的“编辑”页面  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 修改字段（如更新阅读状态为“已读”）并提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统保存修改，返回列表页并显示更新后的数据  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**非法数据拦截**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在价格字段输入字母  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统阻止提交并提示“请输入有效数字”  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事4：删除图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 删除不再需要的图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 保持书库整洁  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**删除操作**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在图书列表页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击某图书的“删除”按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统移除该图书，列表实时刷新  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事5：搜索图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 通过名称或作者搜索图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 快速定位目标书籍  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**基础搜索**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在列表页顶部的搜索框输入关键词  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击“搜索”按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统展示名称或作者匹配的图书（不区分大小写）  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 字段定义（图书属性）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 字段         | 类型     | 必填 | 说明                          | 示例                 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|--------------|----------|------|-------------------------------|----------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 图书名称     | 文本     | ✓    | 书名（长度≤100字符）          | 《三体》             |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 作者         | 文本     | ✓    | 作者名（长度≤50字符）         | 刘慈欣               |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 简介         | 长文本   | ✗    | 图书描述（长度≤500字符）      | 科幻巨著...          |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 发行时间     | 日期     | ✗    | YYYY-MM-DD格式                | 2008-01-01          |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 发行价格     | 小数     | ✗    | 正数（≥0）                    | 68.5                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用户购买价格 | 小数     | ✗    | 正数（≥0）                    | 52.0                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用户备注     | 长文本   | ✗    | 读后感（长度≤1000字符）       | 震撼的宇宙观...      |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 阅读状态     | 枚举     | ✗    | 待读/已读/正在读（默认待读）  | 待读                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 在库状态     | 枚举     | ✗    | 在库/借入/借出/归档（默认在库）| 借出               |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 自评星级     | 整数     | ✗    | 1-5星（默认3星）              | 5                   |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 技术栈说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 模块   | 技术选择              |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|--------|-----------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 后端   | Python + FastAPI      |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 数据库 | SQLite                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 前端   | HTML/CSS + Bootstrap  |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| API交互| AJAX (Fetch API)      |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>开发的程序会调用本地的Ollama部署的deepseek，然后生成测试用例！ 界面如下：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3.png"
width="1582"
height="955"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3_hu_ca077b932780ddfa.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3_hu_e6d4c7356b9a612d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="397px"
>&lt;/p>
&lt;p>确实太香了！小伙伴们快安利起来~~&lt;/p>
&lt;hr>
&lt;p>回复 &lt;code>进群&lt;/code> 加入秋草的技术交流群，和小伙伴们分享技术，互换资讯~~
回复 &lt;code>大纲&lt;/code> 可查看秋草测试技术高级体系化课程详细目录 😉😉😉&lt;/p></description></item><item><title>AI自动化工具Midscene.js源码解析</title><link>https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-5.png" alt="Featured image of post AI自动化工具Midscene.js源码解析" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>在之前的文章 【】我们了解了字节跳动推出的AI测试工具 &lt;code>Midscene.js&lt;/code>， 不管是智能解析项目，测试执行还是最后的报告生成都颇为亮眼，而且除了基于浏览器的web应用，还支持了Android应用的自动化。&lt;/p>
&lt;p>那么这个项目具体是如何利用 AI 智能完成测试执行任务的呢？ 本文我们就结合 Midscene.js 的开源项目源码，对该项目的实现，以及对大模型的应用进行深入分析。&lt;/p>
&lt;h2 id="项目整体架构">项目整体架构
&lt;/h2>&lt;p>通过项目源码的分析，该项目的总体架构可以用下图概括：
&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/midscene_arch.png"
width="1742"
height="794"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/midscene_arch_hu_9172cfb8f9e87682.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/midscene_arch_hu_414f7b1d2f727692.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="219"
data-flex-basis="526px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>用户&lt;/strong>: 用户是Midscene的起点，通过自然语言描述、JavaScript SDK 或 YAML 脚本来定义自动化任务和目标。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>MCP 客户端 (MCP Clients)&lt;/strong>: Midscene还支持其他MCP客户端直接使用其能力，这表明它可能有一个API或集成点供其他系统调用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Midscene Core&lt;/strong>: 这是Midscene的核心逻辑层。它负责解析用户的指令，与AI模型交互，并协调自动化代理来执行操作。它也管理报告生成和缓存。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AI 模型&lt;/strong>: Midscene支持多种AI模型，包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>多模态 LLM (Multimodal LLM)&lt;/strong>：如 GPT-4o, Gemini-2.5-Pro，用于理解更复杂的指令和上下文。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>视觉语言模型 (Visual-Language Models)&lt;/strong>：如 Qwen2.5-VL, Doubao-1.5-thinking-vision-pro, UI-TARS，特别推荐用于UI自动化，因为它们能更好地理解视觉信息。 AI模型接收来自Midscene Core的请求，并返回执行动作或获取信息的指令。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自动化代理&lt;/strong>: 这是一个关键的执行层，负责根据Midscene Core的指令，实际操作目标应用程序或UI。它能获取UI状态和截图，并将其反馈给Midscene Core。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>目标应用程序/UI&lt;/strong>: 这是自动化操作的实际对象，可以是：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>浏览器 (Browser)&lt;/strong>：通过Playwright或Puppeteer等工具进行Web自动化。&lt;/li>
&lt;li>&lt;strong>Android 应用 (Android App)&lt;/strong>：进行Android自动化。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>可视化报告 (Visual Reports)&lt;/strong>: Midscene提供可视化报告，方便用户理解、回放和调试整个自动化过程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Playground&lt;/strong>: 内置的Playground环境，允许用户通过自然语言指令进行调试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缓存机制 (Caching Mechanism)&lt;/strong>: Midscene利用缓存机制来提高效率，允许脚本更快地重放以获得结果。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="主要的内置系统提示词">主要的内置系统提示词
&lt;/h2>&lt;p>&lt;code>MidScene&lt;/code> 的智能解析能力主要依托 LLM 大模型来实现，因此在调用 LLM 的时候，其设定的系统提示词就尤为关键。通过分析源码，可以看到 MidScene 针对不同类型的任务，设定了不同的系统提示词。总结如下：&lt;/p>
&lt;h3 id="1-任务规划类-system-prompts">1. 任务规划类 System Prompts
&lt;/h3>&lt;p>该项目包含三种不同的任务规划提示词：&lt;/p>
&lt;p>&lt;strong>传统LLM模型的任务规划提示词&lt;/strong> - 用于指导传统语言模型将用户指令分解为一系列可执行的UI操作动作。&lt;/p>
&lt;p>&lt;code>packages/core/src/ai-model/prompt/llm-planning.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">llmLocateParam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`locate: {{&amp;#34;id&amp;#34;: string, &amp;#34;prompt&amp;#34;: string}} | null`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">systemTemplateOfLLM&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">pageType&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">pageType&lt;/span>: &lt;span class="kt">PageType&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## Role
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">You are a versatile professional in software UI automation. Your outstanding contributions will impact the user experience of billions of users.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## Objective
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- Decompose the instruction user asked into a series of actions
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- Locate the target element if possible
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- If the instruction cannot be accomplished, give a further plan.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## Workflow
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">1. Receive the screenshot, element description of screenshot(if any), user&amp;#39;s instruction and previous logs.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">2. Decompose the user&amp;#39;s task into a sequence of actions, and place it in the \`actions\` field. There are different types of actions (Tap / Hover / Input / KeyboardPress / Scroll / FalsyConditionStatement / Sleep &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">pageType&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;android&amp;#39;&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;/ AndroidBackButton / AndroidHomeButton / AndroidRecentAppsButton&amp;#39;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">). The &amp;#34;About the action&amp;#34; section below will give you more details.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">3. Precisely locate the target element if it&amp;#39;s already shown in the screenshot, put the location info in the \`locate\` field of the action.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">4. If some target elements is not shown in the screenshot, consider the user&amp;#39;s instruction is not feasible on this page. Follow the next steps.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">5. Consider whether the user&amp;#39;s instruction will be accomplished after all the actions
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - If yes, set \`taskWillBeAccomplished\` to true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - If no, don&amp;#39;t plan more actions by closing the array. Get ready to reevaluate the task. Some talent people like you will handle this. Give him a clear description of what have been done and what to do next. Put your new plan in the \`furtherPlan\` field. The &amp;#34;How to compose the \`taskWillBeAccomplished\` and \`furtherPlan\` fields&amp;#34; section will give you more details.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## Constraints
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- All the actions you composed MUST be based on the page context information you get.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- Trust the &amp;#34;What have been done&amp;#34; field about the task (if any), don&amp;#39;t repeat actions in it.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- Respond only with valid JSON. Do not write an introduction or summary or markdown prefix like \`\`\`json\`\`\`.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- If the screenshot and the instruction are totally irrelevant, set reason in the \`error\` field.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## About the \`actions\` field
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">The \`locate\` param is commonly used in the \`param\` field of the action, means to locate the target element to perform the action, it conforms to the following scheme:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">type LocateParam = {{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;#34;id&amp;#34;: string, // the id of the element found. It should either be the id marked with a rectangle in the screenshot or the id described in the description.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;#34;prompt&amp;#34;?: string // the description of the element to find. It can only be omitted when locate is null.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">}} | null // If it&amp;#39;s not on the page, the LocateParam should be null
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">## Supported actions
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Each action has a \`type\` and corresponding \`param\`. To be detailed:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;Tap&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">llmLocateParam&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;RightClick&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">llmLocateParam&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;Hover&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">llmLocateParam&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;Input&amp;#39;, replace the value in the input field
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">llmLocateParam&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">, param: {{ value: string }} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * \`value\` is the final value that should be filled in the input field. No matter what modifications are required, just provide the final value user should see after the action is done.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;KeyboardPress&amp;#39;, press a key
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{ value: string }} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;Scroll&amp;#39;, scroll up or down.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">llmLocateParam&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> param: {{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> direction: &amp;#39;down&amp;#39;(default) | &amp;#39;up&amp;#39; | &amp;#39;right&amp;#39; | &amp;#39;left&amp;#39;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> scrollType: &amp;#39;once&amp;#39; (default) | &amp;#39;untilBottom&amp;#39; | &amp;#39;untilTop&amp;#39; | &amp;#39;untilRight&amp;#39; | &amp;#39;untilLeft&amp;#39;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> distance: null | number
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * To scroll some specific element, put the element at the center of the region in the \`locate\` field. If it&amp;#39;s a page scroll, put \`null\` in the \`locate\` field.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * \`param\` is required in this action. If some fields are not specified, use direction \`down\`, \`once\` scroll type, and \`null\` distance.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{ button: &amp;#39;Back&amp;#39; | &amp;#39;Home&amp;#39; | &amp;#39;RecentApp&amp;#39; }} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;ExpectedFalsyCondition&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{ reason: string }} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * use this action when the conditional statement talked about in the instruction is falsy.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;Sleep&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{ timeMs: number }} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&lt;/span>&lt;span class="si">${&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pageType&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;android&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">?&lt;/span> &lt;span class="sb">`- type: &amp;#39;AndroidBackButton&amp;#39;, trigger the system &amp;#34;back&amp;#34; operation on Android devices
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{}} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;AndroidHomeButton&amp;#39;, trigger the system &amp;#34;home&amp;#34; operation on Android devices
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{}} }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- type: &amp;#39;AndroidRecentAppsButton&amp;#39;, trigger the system &amp;#34;recent apps&amp;#34; operation on Android devices
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> * {{ param: {{}} }}`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>视觉-语言模型的任务规划提示词&lt;/strong> - 专门针对具有视觉能力的AI模型（如Qwen-VL、Gemini）设计，能够直接处理截图并规划下一步动作。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621.png"
width="1862"
height="840"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621_hu_1f245f4a7381fc92.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621_hu_cbe0546441c0937e.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="221"
data-flex-basis="532px"
>&lt;/p>
&lt;p>&lt;strong>UI-Tars模型的任务规划提示词&lt;/strong> - 为UI-Tars专门设计的GUI智能体提示词，采用思考-行动的格式。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-1.png"
width="1920"
height="869"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-1_hu_193a279710b18da0.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-1_hu_6ecc8617144abc71.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="530px"
>&lt;/p>
&lt;h3 id="2-元素定位类-system-prompts">2. 元素定位类 System Prompts
&lt;/h3>&lt;p>&lt;strong>元素定位提示词&lt;/strong> - 用于在页面截图和元素描述中精确定位目标元素，支持传统LLM和视觉-语言模型两种模式。
&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-2.png"
width="1920"
height="925"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-2_hu_e01f34217f929004.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-2_hu_7241f9c8a4fe6b33.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="207"
data-flex-basis="498px"
>&lt;/p>
&lt;p>&lt;strong>区域定位提示词&lt;/strong> - 用于定位包含目标元素的页面区域，通常不超过300x300像素的区域。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-3.png"
width="1920"
height="869"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-3_hu_2d4e24d478a96e80.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-3_hu_48ab05ecdf3dc135.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="530px"
>&lt;/p>
&lt;h3 id="3-数据提取类-system-prompts">3. 数据提取类 System Prompts
&lt;/h3>&lt;p>&lt;strong>数据提取提示词&lt;/strong> - 指导AI从UI界面中提取结构化数据，支持多种数据类型和格式要求。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-4.png"
width="1920"
height="869"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-4_hu_daa210e733e616c6.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-4_hu_944203a030fafb3f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="530px"
>&lt;/p>
&lt;h3 id="4-断言验证类-system-prompts">4. 断言验证类 System Prompts
&lt;/h3>&lt;p>&lt;strong>断言验证提示词&lt;/strong> - 用于验证页面状态是否符合预期的断言条件，支持UI-Tars和普通模型两种格式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">defaultAssertionPrompt&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;You are a senior testing engineer. User will give an assertion and a screenshot of a page. By carefully viewing the screenshot, please tell whether the assertion is truthy.&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">defaultAssertionResponseJsonFormat&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`Return in the following JSON format:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> pass: boolean, // whether the assertion is truthy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> thought: string | null, // string, if the result is falsy, give the reason why it is falsy. Otherwise, put null.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">}`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-元素描述类-system-prompts">5. 元素描述类 System Prompts
&lt;/h3>&lt;p>&lt;strong>元素描述提示词&lt;/strong> - 用于生成精确的元素描述，帮助识别页面中的特定UI元素（给定元素）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">elementDescriberInstruction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sb">`Describe the element in the red rectangle for precise identification. Use &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">getPreferredLanguage&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Rules:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">1. Start with element type (button, input, link, etc.)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">2. Include key identifiers:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - Text content: &amp;#34;with text &amp;#39;Submit&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - Visual features: &amp;#34;blue background&amp;#34;, &amp;#34;icon only&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - Position: &amp;#34;top-right&amp;#34;, &amp;#34;below search bar&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">3. Keep description under 20 words
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">4. Don&amp;#39;t mention the red rectangle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Return JSON:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;#34;description&amp;#34;: &amp;#34;brief element type with key identifiers&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;#34;error&amp;#34;?: &amp;#34;error message if any&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">}`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6-代码生成类-system-prompts">6. 代码生成类 System Prompts
&lt;/h3>&lt;p>&lt;strong>Playwright测试代码生成提示词&lt;/strong> - 基于录制的浏览器会话事件生成可执行的Playwright测试代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create system prompt
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">systemPrompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`You are an expert test automation engineer specializing in Playwright and Midscene.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Your task is to generate a complete, executable Playwright test using @midscene/web/playwright that reproduces a recorded browser session.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>通过对这些 system prompts 采用模块化设计，根据不同的AI模型类型（传统LLM vs 视觉-语言模型）和页面类型（web vs Android）来动态调整。项目还包含了完整的JSON schema定义来确保AI输出的结构化和一致性，并且支持多语言环境 &lt;code>${getPreferredLanguage()}&lt;/code>&lt;/p>&lt;/blockquote>
&lt;h2 id="对用户提示词的补充和约束">对用户提示词的补充和约束
&lt;/h2>&lt;p>除了通过这些系统提示词的设定，让LLM可以更好理解当前任务。对于用户的输入指令，即&lt;code>用户提示词&lt;/code>，在实际处理时，必然还需要进行一定的扩展和约束补充。&lt;/p>
&lt;p>这里我们再分析关于用户提示词的处理：&lt;/p>
&lt;h3 id="1-背景上下文的智能生成">&lt;strong>1. 背景上下文的智能生成&lt;/strong>
&lt;/h3>&lt;p>项目通过&lt;code>generateTaskBackgroundContext&lt;/code>函数为用户指令添加结构化的背景上下文，包括高优先级知识和历史执行日志，防止重复执行相同的操作。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">generateTaskBackgroundContext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">userInstruction&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log?&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">userActionContext?&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Here is the user&amp;#39;s instruction:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;instruction&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;high_priority_knowledge&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">userActionContext&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;/high_priority_knowledge&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">userInstruction&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;/instruction&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">These are the logs from previous executions, which indicate what was done in the previous actions.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Do NOT repeat these actions.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;previous_logs&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;/previous_logs&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">Here is the user&amp;#39;s instruction:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;instruction&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;high_priority_knowledge&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">userActionContext&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;/high_priority_knowledge&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">userInstruction&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">&amp;lt;/instruction&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-多模态适配的用户提示">&lt;strong>2. 多模态适配的用户提示&lt;/strong>
&lt;/h3>&lt;p>根据AI模型的能力，用户提示会采用不同的格式。对于视觉语言模型，直接传递任务背景；对于传统LLM，则结合页面描述信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">automationUserPrompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">vlMode&lt;/span>: &lt;span class="kt">ReturnType&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">typeof&lt;/span> &lt;span class="na">vlLocateMode&lt;/span>&lt;span class="p">&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">vlMode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">PromptTemplate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;{taskBackgroundContext}&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inputVariables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;taskBackgroundContext&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">PromptTemplate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">pageDescription:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">=====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">{pageDescription}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">=====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">{taskBackgroundContext}`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inputVariables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;pageDescription&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;taskBackgroundContext&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-结构化json-schema验证">&lt;strong>3. 结构化JSON Schema验证&lt;/strong>
&lt;/h3>&lt;p>项目使用OpenAI的结构化输出schema来严格约束AI的响应格式，确保返回的数据符合预定义的结构，包括actions、log、error等必要字段。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">planSchema&lt;/span>: &lt;span class="kt">ResponseFormatJSONSchema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;json_schema&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">json_schema&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;action_items&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">strict&lt;/span>: &lt;span class="kt">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">schema&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">strict&lt;/span>: &lt;span class="kt">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">actions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// TODO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;array&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">items&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">strict&lt;/span>: &lt;span class="kt">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">thought&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Reasons for generating this task, and why this task is feasible on this page&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Type of action, one of &amp;#34;Tap&amp;#34;, &amp;#34;RightClick&amp;#34;, &amp;#34;Hover&amp;#34; , &amp;#34;Input&amp;#34;, &amp;#34;KeyboardPress&amp;#34;, &amp;#34;Scroll&amp;#34;, &amp;#34;ExpectedFalsyCondition&amp;#34;, &amp;#34;Sleep&amp;#34;, &amp;#34;AndroidBackButton&amp;#34;, &amp;#34;AndroidHomeButton&amp;#34;, &amp;#34;AndroidRecentAppsButton&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">param&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">anyOf&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;number&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;value&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">timeMs&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;number&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;timeMs&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">direction&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">scrollType&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">distance&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;number&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;direction&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;scrollType&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;distance&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">reason&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;reason&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">button&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;button&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Parameter of the action, can be null ONLY when the type field is Tap or Hover&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">locate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">prompt&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;prompt&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Location information for the target element&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;thought&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;param&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;locate&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;List of actions to be performed&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">more_actions_needed_by_instruction&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;boolean&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;If all the actions described in the instruction have been covered by this action and logs, set this field to false.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Log what these planned actions do. Do not include further actions that have not been planned.&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Error messages about unexpected situations&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;actions&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;more_actions_needed_by_instruction&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">additionalProperties&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>通过这些多层次的增强和约束机制，确保了AI模型能够准确理解用户意图，同时严格控制AI的行为边界。从提示词的定义来看，项目很注重防止AI产生幻觉或执行超出用户指令范围的操作，这对于UI自动化这种需要高精度操作的场景至关重要。&lt;/p>&lt;/blockquote>
&lt;h2 id="大模型上下文窗口限制">大模型上下文窗口限制
&lt;/h2>&lt;p>在利用各种AI大模型完成智能任务时，一个非常重要的约束，就是大模型通常是有着&lt;code>上下文窗口大小限制&lt;/code>的，超过这个限制的历史信息会被丢弃，以节约大模型的资源，提升性能。&lt;/p>
&lt;p>而对于一个自动化测试任务来说，分解拆分后的运行链路往往较长，通常都会超出LLM的上下文限制。&lt;/p>
&lt;p>所以这里我们再分析一下这个项目对于上下文窗口限制的处理是如何实现的&lt;/p>
&lt;h3 id="1-token数量限制控制">1. Token数量限制控制
&lt;/h3>&lt;p>项目通过&lt;code>OPENAI_MAX_TOKENS&lt;/code>环境变量来设置响应的最大token数量&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-6.png"
width="1126"
height="454"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-6_hu_39857d17a17763b5.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-6_hu_d4381f5b29a9ca89.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="248"
data-flex-basis="595px"
>&lt;/p>
&lt;h3 id="2-图像尺寸限制和自动调整">2. 图像尺寸限制和自动调整
&lt;/h3>&lt;p>项目针对不同模型实施图像尺寸限制，特别是对GPT-4o模型实施严格的尺寸控制。当检测到图像尺寸超过GPT-4o的最大输入限制（2000x768或768x2000像素）时，系统会发出警告 。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">warned&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">warnGPT4oSizeLimit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">size&lt;/span>: &lt;span class="kt">Size&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">warned&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">getModelName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">includes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;gpt-4o&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">warningMsg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`GPT-4o has a maximum image input size of 2000x768 or 768x2000, but got &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">x&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">. Please set your page to a smaller resolution. Otherwise, the result may be inaccurate.`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">2000&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">768&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">warningMsg&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">warned&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1800&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">1800&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`The image size seems too large (&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">width&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">x&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">height&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">). It may lead to more token usage, slower response, and inaccurate result.`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">warned&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-图像压缩和优化">3. 图像压缩和优化
&lt;/h3>&lt;p>系统通过图像压缩来减少数据传输量(&lt;code>packages/shared/src/img/transform.ts&lt;/code>) ，包括：&lt;/p>
&lt;ul>
&lt;li>设置图像质量为90%来平衡质量和文件大小&lt;/li>
&lt;li>提供图像调整大小功能&lt;/li>
&lt;li>支持base64格式的图像处理和转换&lt;/li>
&lt;/ul>
&lt;h3 id="4-选择合适的模型架构">4. 选择合适的模型架构
&lt;/h3>&lt;p>项目支持两种不同类型的AI模型来优化token使用：&lt;/p>
&lt;p>&lt;strong>通用多模态LLM（如GPT-4o）&lt;/strong>：需要同时发送截图和DOM树，导致token消耗较高 。&lt;/p>
&lt;p>&lt;strong>视觉定位VL模型（如Qwen-2.5-VL）&lt;/strong>：支持视觉定位功能，不需要发送DOM树，可以节省30%到50%的token数量。&lt;/p>
&lt;p>参见 &lt;code>apps/site/docs/zh/choose-a-model.mdx&lt;/code> 文档中的说明&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-7.png"
width="1817"
height="548"
srcset="https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-7_hu_e6f13b553c1f4e4d.png 480w, https://chengxiaqiucao.github.io/post/081-midscene%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/snap_20250621-7_hu_319f3ac552d20a26.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="331"
data-flex-basis="795px"
>&lt;/p>
&lt;h3 id="5-token使用情况监控">5. Token使用情况监控
&lt;/h3>&lt;p>项目还提供了详细的token使用情况跟踪和调试功能，记录prompt tokens、completion tokens和总token数量 。&lt;/p>
&lt;p>总结来说，该项目的上下文窗口限制处理策略主要集中在三个方面：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>控制输入数据量&lt;/strong>（通过图像压缩和尺寸限制）&lt;/li>
&lt;li>&lt;strong>选择合适的模型架构&lt;/strong>（VL模型vs通用LLM）&lt;/li>
&lt;li>&lt;strong>监控和优化token使用&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>这种多层次的处理方式有效地减少了对大型上下文窗口的需求，同时也保持了功能的完整性。&lt;/p>
&lt;h2 id="长链路任务的记忆管理">长链路任务的记忆管理
&lt;/h2>&lt;p>对于大模型来说，已完成步骤和历史任务的记忆对于保证结果的准确，避免无谓重复和节约成本意义重大，像我们之前文章介绍的如 &lt;code>Browser-Use&lt;/code>这样的工具，会引入 &lt;code>mem0&lt;/code> 这样的记忆框架来实现 AI 的记忆能力，那么Midscene在这方面是如何处理的呢？&lt;/p>
&lt;p>基于对 Midscene 代码的分析，长链路任务的记忆管理主要通过以下几个核心机制实现：&lt;/p>
&lt;h3 id="任务缓存机制">任务缓存机制
&lt;/h3>&lt;p>Midscene 实现了一个智能的任务缓存系统来管理 AI 操作的记忆。该系统缓存规划结果和元素定位信息，避免重复的 AI 调用，从而减少内存消耗和提高执行效率。&lt;/p>
&lt;p>&lt;code>packages/web-integration/src/common/task-cache.ts&lt;/code>&lt;/p>
&lt;p>缓存系统支持两种类型的缓存：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>规划缓存 (PlanningCache)&lt;/strong> 用于存储 AI 规划的 YAML 工作流&lt;/li>
&lt;li>&lt;strong>定位缓存 (LocateCache)&lt;/strong> 用于存储元素的 XPath 信息。&lt;/li>
&lt;/ul>
&lt;h3 id="对话历史管理">对话历史管理
&lt;/h3>&lt;p>为了防止长链路任务中对话历史无限增长导致内存溢出，Midscene 实现了智能的对话历史管理策略。系统限制用户图像消息最多保留 4 条，采用先进先出 (FIFO) 策略自动清理旧的对话记录。&lt;/p>
&lt;p>&lt;code>packages/web-integration/src/common/tasks.ts&lt;/code>&lt;/p>
&lt;h3 id="重规划限制机制">重规划限制机制
&lt;/h3>&lt;p>为了防止 AI 在长链路任务中陷入无限重规划的死循环，系统设置了重规划次数限制。当重规划次数超过限制时，任务会主动终止并返回错误信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">planningTask&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">replanCount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nx">replanningCountLimit&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">errorMsg&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Replanning too many times, please split the task into multiple steps&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">appendErrorPlan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">taskExecutor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errorMsg&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="资源清理机制">资源清理机制
&lt;/h3>&lt;p>Midscene 使用 FreeFn 模式确保长链路任务完成后能够正确清理所有资源，包括网络连接、临时文件、定时器等。即使在异常情况下，资源清理机制也能保证系统资源得到释放。&lt;/p>
&lt;p>&lt;code>packages/web-integration/src/yaml/player.ts&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">freeFn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...(&lt;/span>&lt;span class="nx">newFreeFn&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">[]),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;restore-agent-onTaskStartTip&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fn&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">agent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">agent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onTaskStartTip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">originalOnTaskStartTip&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">....&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// free the resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">fn&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">freeFn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// console.log(&amp;#39;freeing&amp;#39;, fn.name);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="nx">fn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// console.log(&amp;#39;freed&amp;#39;, fn.name);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// console.error(&amp;#39;error freeing&amp;#39;, fn.name, e);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="上下文优化">上下文优化
&lt;/h3>&lt;p>为了减少内存占用，Midscene 还实现了多项上下文优化策略：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>可见元素过滤&lt;/strong>：只提取页面中可见的元素，减少 DOM 树的大小&lt;/li>
&lt;li>&lt;strong>图像压缩&lt;/strong>：对截图进行智能压缩，减少内存和传输开销&lt;/li>
&lt;li>&lt;strong>视口裁剪&lt;/strong>：根据视口范围裁剪上下文数据&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>可以看到，虽然Mdscene没有引入专门的记忆框架来处理历史记忆，但还是建立了记忆管理机制来协同处理，使 Midscene 能够在处理复杂的长链路任务时保持高效的内存使用，通过对话历史管理控制记忆增长，重规划限制防止无限循环，通过资源清理确保系统稳定性，最终实现了一个可靠的长链路任务执行系统。&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    A[用户] --&amp;gt;|提供自然语言描述/JS SDK/YAML脚本| B(Midscene Core)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt;|调用| C{AI 模型}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    C --&amp;gt;|返回动作/信息| B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt;|控制| D[自动化代理]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    D --&amp;gt;|操作| E[目标应用程序/UI]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    E --&amp;gt;|返回UI状态/截图| D
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    D --&amp;gt;|发送| B
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt;|生成| F[可视化报告]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt;|提供| G[Playground&amp;lt;调试&amp;gt; ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt;|利用| H[缓存机制]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    subgraph 目标平台
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        E -- Web --&amp;gt; E1[浏览器&amp;lt;Playwright/Puppeteer&amp;gt;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        E -- Android --&amp;gt; E2[Android 应用]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    subgraph AI 模型类型
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        C -- 多模态 LLM --&amp;gt; C1[GPT-4o, Gemini-2.5-Pro]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        C -- 视觉语言模型 --&amp;gt; C2[Qwen2.5-VL, Doubao-1.5-thinking-vision-pro, UI-TARS]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    subgraph 辅助工具
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        F --&amp;gt; F1[报告文件]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        G --&amp;gt; G1[内置调试环境]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        H --&amp;gt; H1[提高效率/重放]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    I[MCP 客户端] --&amp;gt;|直接使用能力| B
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>AI自动化工具Mid scene.js评测</title><link>https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521.png" alt="Featured image of post AI自动化工具Mid scene.js评测" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>AI已经越来越深入地走入我们的实际工作，在软件测试领域，和AI相关的新测试工具、方法也层出不穷。在之前我们介绍过结合 mcp server 实现 AI 驱动测试的案例，本文我们将介绍一个近期崭露头角的国产AI测试工具 &lt;code>Midscene.js&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521.png"
width="508"
height="482"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521_hu_8c2283c0ca764a99.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521_hu_c98e8bf2be242eda.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="105"
data-flex-basis="252px"
>&lt;/p>
&lt;h2 id="midscenejs简介">Midscene.js简介
&lt;/h2>&lt;p>&lt;code>MidScene.js&lt;/code> 是由字节跳动 web-infra 团队推出的一个开源 ai 自动化测试工具，基于多模态大模型，通过针对页面的智能视觉解析来理解我们的自然语言指令，并进一步完成自动化操作。可以显著降低编写自动化测试脚本的复杂性，并更好适应页面结构和元素的变化，使自动化测试脚本的稳定性也有较大提升。&lt;/p>
&lt;p>官网地址： &lt;a class="link" href="https://midscenejs.com/" target="_blank" rel="noopener"
>https://midscenejs.com/&lt;/a>&lt;/p>
&lt;h2 id="midscene工作原理">Midscene工作原理
&lt;/h2>&lt;p>和之前我们介绍 mcp server 时，利用通用大模型来理解页面并调用本地工具能力进行扩展不同，Midscene使用多模态大模型如 &lt;code>ChatGPT-4o&lt;/code>，&lt;code>qwen-vl&lt;/code>, 字节的 &lt;code>UI-TARS&lt;/code>等，也就是能支持视觉输入的大模型来理解页面，更接近我们进行实际功能测试的场景。&lt;/p>
&lt;p>MidScene会首先获取页面当前截图和具体的页面结构信息，再和用户指令一起提交给大模型，由大模型判断出需要操作的页面控件位置，并进行下一步动作。&lt;/p>
&lt;p>以在待办页面任务框中输入 “今天学习Playwright”为例：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-3.png"
width="1920"
height="673"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-3_hu_19ae45ca69a8c700.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-3_hu_e22ffafc27de64a6.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="285"
data-flex-basis="684px"
>&lt;/p>
&lt;p>MidScene的内部操作大致如下：&lt;/p>
&lt;ol>
&lt;li>获取用户指令 “在任务框输入 学习Playwright，按回车键”&lt;/li>
&lt;li>MidScene截图，获取页面整体元素结构&lt;/li>
&lt;li>提交大模型完成页面特征提取&lt;/li>
&lt;li>获取大模型分析结果，确定下一步操作类型(Tap)和控件的具体位置(坐标)&lt;/li>
&lt;li>规划下一步操作&lt;/li>
&lt;li>完成执行&lt;/li>
&lt;/ol>
&lt;h2 id="大模型的选择">大模型的选择
&lt;/h2>&lt;p>从以上Midscene的原理分析，MidScene 主要依赖多模态大模型的如下能力&lt;/p>
&lt;ol>
&lt;li>理解截图和 &lt;em>规划&lt;/em> 操作步骤的能力。&lt;/li>
&lt;li>给出指定元素的坐标信息（Visual Grounding）的能力。&lt;/li>
&lt;/ol>
&lt;p>支持以上能力的大模型，目前官网提供的支持包括如下几种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>OPENAI GPT-4o&lt;/strong>&lt;/li>
&lt;li>&lt;strong>阿里 Qwen-2.5-VL&lt;/strong>&lt;/li>
&lt;li>&lt;strong>字节 UI-TARS&lt;/strong>&lt;/li>
&lt;li>&lt;strong>字节火山引擎 Doubao-1.5-thinking-vision-pro&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Google Gemini-2.5-Pro&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>从工作原理上，需要提供给大模型包括截图和页面结构等信息，对大模型的Token消耗还是比较可观。从官方的评估，每个操作通常都要至少数千Token的消耗。而其中性价比较好的大模型，官方推荐的QWen-VL。&lt;/p>
&lt;h2 id="chrome插件方式使用">Chrome插件方式使用
&lt;/h2>&lt;p>零代码的Chrome插件方式，可以帮助我们快速理解MidScene的应用。&lt;/p>
&lt;p>通过Chrome的插件商店可以直接安装 &lt;a class="link" href="https://chromewebstore.google.com/detail/midscenejs/gbldofcpkknbggpkmbdaefngejllnief" target="_blank" rel="noopener"
>Midscene插件&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-2.png"
width="1755"
height="547"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-2_hu_42f4fce6b95b35ab.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250521-2_hu_b3474ce1983fd3ed.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="320"
data-flex-basis="770px"
>&lt;/p>
&lt;h3 id="配置大模型">配置大模型
&lt;/h3>&lt;p>启用插件后，需要配置使用的大模型。这里我们使用对token消耗比较少的阿里千问多模态模型&lt;code>qwen-vl-max-latest&lt;/code>, 通过阿里云百炼平台申请对应的API Key即可，现在申请还赠送100W Token额度。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-2.png"
width="1199"
height="217"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-2_hu_89f4c27c45807341.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-2_hu_d9e504c150c9fb67.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="552"
data-flex-basis="1326px"
>&lt;/p>
&lt;p>完成申请后，在插件的模型配置界面中配置对应的大模型参数，qwen模型需要配置以下四个参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">OPENAI_BASE_URL=&amp;#34;https://dashscope.aliyuncs.com/compatible-mode/v1&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">OPENAI_API_KEY=&amp;#34;sk- your API KEY&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MIDSCENE_MODEL_NAME=&amp;#34;qwen-vl-max-latest&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MIDSCENE_USE_QWEN_VL=1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="操作浏览器">操作浏览器
&lt;/h3>&lt;p>接下来就可以在插件界面中体验Midscene对浏览器的操控了，这里主要支持四种行为：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Action&lt;/strong>：对应AI自动规划操作，Midscene会自动规划操作步骤并执行。更智能，但速度较慢，效果依赖大模型的质量。&lt;/li>
&lt;li>&lt;strong>Query&lt;/strong>：直接从 UI 提取数据，并借助多模态 AI 的推理能力，实现智能提取&lt;/li>
&lt;li>&lt;strong>Assert&lt;/strong>：通过自然语言描述一个断言条件，让 AI 判断该条件是否为真&lt;/li>
&lt;li>&lt;strong>Tap&lt;/strong>：对应页面点击的即时操作，Midscene会直接执行，大模型只负责底层如元素定位等任务。效率更高，适合已确定要执行的操作时使用&lt;/li>
&lt;/ul>
&lt;p>我们可以用接近自然语言的AI提示词输入提示词指令，针对不同的行为模式，插件会驱动浏览器完成不同的操作，并反馈操作结果。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520.png"
width="1910"
height="899"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520_hu_82f5a3b5c2a2fe48.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520_hu_b94695f1053d5140.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="212"
data-flex-basis="509px"
>&lt;/p>
&lt;p>具体执行过程也可参见下方视频演示。&lt;/p>
&lt;h2 id="脚本集成">脚本集成
&lt;/h2>&lt;p>除了通过浏览器插件调用Midscene，更推荐的方法是通过测试框架的脚本集成Midscene能力。&lt;/p>
&lt;p>通过脚本集成，同样需要配置相关模型调用参数，和插件中配置的相关变量值一样，只是需要将相关变量配置为&lt;strong>系统环境变量&lt;/strong>&lt;/p>
&lt;p>因为 Midscene 是基于JS的工具，这里的和测试框架集成，也是需要支持JS。这里以 Playwright 为例&lt;/p>
&lt;h3 id="安装">安装
&lt;/h3>&lt;p>首先自然需要具备 Playwright 框架，进入项目目录，初始化并安装Playwright，然后安装Midscene&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">init&lt;/span> &lt;span class="n">playwright&lt;/span>&lt;span class="nv">@latest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="nv">@midscene&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">web&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-save-dev&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="playwright框架配置">playwright框架配置
&lt;/h3>&lt;p>在 &lt;code>playwright.config.ts&lt;/code> 文件中配置框架本身的测试发现目录和测试脚本，加载环境变量以及浏览器类型，执行策略等基础配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">defineConfig&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">devices&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s2">&amp;#34;@playwright/test&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">dotenv&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s2">&amp;#34;dotenv&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* 通过dotenv从.env文件中加载环境变量 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">dotenv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">defineConfig&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">testDir&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;./e2e&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">testMatch&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;**/*.spec.ts&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">timeout&lt;/span>: &lt;span class="kt">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Run tests in files in parallel */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">fullyParallel&lt;/span>: &lt;span class="kt">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Fail the build on CI if you accidentally left test.only in the source code. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">forbidOnly&lt;/span>: &lt;span class="kt">Boolean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CI&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Retry on CI only */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">retries&lt;/span>: &lt;span class="kt">process.env.CI&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">2&lt;/span> : &lt;span class="kt">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Opt out of parallel tests on CI. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">workers&lt;/span>: &lt;span class="kt">process.env.CI&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">1&lt;/span> : &lt;span class="kt">undefined&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Reporter to use. See https://playwright.dev/docs/test-reporters */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">reporter&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="s2">&amp;#34;line&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;@midscene/web/playwright-report&amp;#34;&lt;/span>&lt;span class="p">]],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">use&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="cm">/* Base URL to use in actions like `await page.goto(&amp;#39;/&amp;#39;)`. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="c1">// baseURL: &amp;#39;http://127.0.0.1:3000&amp;#39;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="cm">/* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="nx">trace&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;on-first-retry&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="cm">/* Configure projects for major browsers */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">projects&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">      &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;chromium&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">      &lt;span class="nx">use&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">devices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Desktop Chrome&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="测试脚本">测试脚本
&lt;/h3>&lt;p>通过单独的fixture脚本引入Midscene库&lt;/p>
&lt;p>fixture.ts&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">test&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">base&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@playwright/test&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="kr">type&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">PlayWrightAiFixtureType&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@midscene/web/playwright&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">PlaywrightAiFixture&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@midscene/web/playwright&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">test&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">base&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">extend&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">PlayWrightAiFixtureType&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="nx">PlaywrightAiFixture&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">waitForNetworkIdleTimeout&lt;/span>: &lt;span class="kt">10000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// 可选, 交互过程中等待网络空闲的超时时间, 默认值为 2000ms, 设置为 0 则禁用超时
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编写脚本测试 &lt;code>https://todomvc.com/&lt;/code> 待办清单示例项目，通过 &lt;code>.ai&lt;/code>、&lt;code>.aiTap&lt;/code>、 &lt;code>.aiQuery&lt;/code>、&lt;code>.aiAssert&lt;/code>等API方法，对应前面说到的四种典型操作。&lt;/p>
&lt;p>todo_spec.ts&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">expect&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s2">&amp;#34;@playwright/test&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">test&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s2">&amp;#34;./fixture&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">test&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">beforeEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">page&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">page&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://todomvc.com/examples/react/dist/&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ai todo - Chinese Prompt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">ai&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">aiQuery&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">aiAssert&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">aiTap&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="c1">// .ai - 通用 AI 操作方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">ai&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;在任务框 input 输入 今天学习 Playwright，按回车键&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">ai&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;在任务框 input 输入 明天学习 js脚本，按回车键&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">ai&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;在任务框 input 输入 后天学习 AI测试，按回车键&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">ai&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;将鼠标移动到任务列表中的第二项&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">aiTap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;第二项任务右边的删除按钮&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="c1">// .aiTap - 指定操作类型
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">aiTap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;第二条任务左边的勾选按钮&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">aiTap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;任务列表下面的 completed 状态按钮&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// .aiQuery - 页面信息提取操作
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>  &lt;span class="kr">const&lt;/span> &lt;span class="nx">list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="nx">aiQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;string[], 完整的任务列表&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// .aiAssert - 断言操作
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">  &lt;span class="k">await&lt;/span> &lt;span class="nx">aiAssert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;列表下方有一个区域显示有 &amp;#34;1 item left&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行脚本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npx&lt;/span> &lt;span class="n">playwright&lt;/span> &lt;span class="n">test&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-headed&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行过程可以参见我录制的视频&lt;/p>
&lt;p>【】&lt;/p>
&lt;h3 id="可视化结果报告">可视化结果报告
&lt;/h3>&lt;p>报告是Midscene的一大亮点，通过这个报告可以回看整个执行过程，并详细显示AI的空间判断过程和具体操作细节，便于调试和优化脚本。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-1.png"
width="1920"
height="899"
srcset="https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-1_hu_8c25d4e74876b37c.png 480w, https://chengxiaqiucao.github.io/post/099-midscene.js%E7%9A%84%E4%BD%BF%E7%94%A8/snap_20250520-1_hu_f9ca92c1327f521.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="512px"
>&lt;/p>
&lt;h2 id="yaml文件驱动">YAML文件驱动
&lt;/h2>&lt;p>除了通过测试框架脚本的集成方法，Midscene也支持直接通过YAML文件编写测试脚本，实现无代码的脚本驱动，类似于传统自动化的关键字驱动方式。&lt;/p>
&lt;p>这种方式，本质上其实还是将对应关键转化为 Midscene 支持的相关API来进行驱动。&lt;/p>
&lt;p>类似如下的格式， 操作天气网站：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-YAML" data-lang="YAML">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">web&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://www.bing.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">搜索天气&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">flow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">ai&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">搜索 &amp;#34;今日天气&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">sleep&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3000&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">检查结果&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">flow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">aiAssert&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">结果中展示了天气信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行yaml格式脚本，需要安装Midscene的命令行支持&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="cl">&lt;span class="n">npm&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="nv">@midscene&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="nb">cli &lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">-save-dev&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 执行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">npx&lt;/span> &lt;span class="n">midscene&lt;/span> &lt;span class="p">./&lt;/span>&lt;span class="n">weather&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="mcp方式">MCP方式
&lt;/h2>&lt;p>除了上述方式之外，Midscene也提供了作为本地MCP server方式。这种方式，其实是将MidScene的Chrome插件作为本地能力封装到MCP中，再通过大模型结合mcp server的方式完成浏览器驱动。&lt;/p>
&lt;p>关于 mcp server的介绍和使用，可以参考我之前的相关文章 【】&lt;/p>
&lt;p>mcp server 配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcpServers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcp-midscene&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;-y&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;@midscene/mcp&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;env&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;MIDSCENE_MODEL_NAME&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REPLACE_WITH_YOUR_MODEL_NAME&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;OPENAI_API_KEY&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REPLACE_WITH_YOUR_OPENAI_API_KEY&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;MCP_SERVER_REQUEST_TIMEOUT&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;800000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="当前版本的局限">当前版本的局限
&lt;/h2>&lt;p>虽然Midsence工具已经展现出不俗的潜力，目前也还在持续更新和迭代中，但在实用上还是具有不少缺陷，主要表现在：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>交互类型有限&lt;/strong>：目前仅支持点击、拖拽(只在 UI-TARS 模型中支持)、输入、键盘和滚动操作。&lt;/li>
&lt;li>&lt;strong>稳定性风险&lt;/strong>：AI 模型的返回值不能保证 100% 准确。对提示词的编写要求较高&lt;/li>
&lt;li>&lt;strong>元素识别能力&lt;/strong>：部分大模型在元素识别上的能力不太好，比如iframe、canvas等元素的交互。而且对于Chrome的原生控件如弹出提示、右键菜单等还不能支持。&lt;/li>
&lt;li>&lt;strong>成本较高&lt;/strong>：基于视觉识别方式，对Token的消耗比较可观，如果使用付费大模型，成本比较高昂。&lt;/li>
&lt;/ul>
&lt;p>但瑕不掩瑜，Midscene在UI自动化测试借助AI能力的提升上，已经迈出了坚实的一步！后续我们还会持续关注其进一步发展！&lt;/p>
&lt;hr>
&lt;h3 id="参考阅读">参考阅读：
&lt;/h3>&lt;p>【】
【】&lt;/p>
&lt;p>进群，大纲&lt;/p></description></item><item><title>微软重磅发布Magentic UI，交互式AI Agent助手实测！</title><link>https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/</link><pubDate>Fri, 30 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/magentic_logo.png" alt="Featured image of post 微软重磅发布Magentic UI，交互式AI Agent助手实测！" />&lt;h2 id="何为magentic-ui">何为Magentic UI？
&lt;/h2>&lt;p>&lt;code>Magentic UI&lt;/code> 是微软于5.19重磅发布的开源Agent助手，并于24日刚更新了第二个版本0.04版&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526.png"
width="437"
height="121"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526_hu_998ab8bc0c64b884.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526_hu_7362028b6e24293.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="361"
data-flex-basis="866px"
>&lt;/p>
&lt;p>从官方的介绍来看，目标是打造一款 &lt;strong>以人为中心&lt;/strong> 的智能助手，其底层由多个不同的智能体系统驱动，能够实现网页浏览与操作、代码生成与执行、文件生成与分析等功能。&lt;/p>
&lt;p>它区别于其他一些AI浏览器工具的主要区别在于其 &lt;strong>透明可控的交互界面&lt;/strong>，支持高效的人机协同参与。该系统基于微软的Agent构建框架 AutoGen 构建，目前还处在原型研究阶段。&lt;/p>
&lt;p>核心功能包括：&lt;/p>
&lt;p>🧑‍🤝‍🧑 &lt;strong>协同规划&lt;/strong>：用户和AI通过聊天和计划编辑器协作创建并修订分步执行计划。&lt;br>
🤝 &lt;strong>协同任务&lt;/strong>：用户可直接通过网页浏览器或聊天界面实时介入并指导任务执行。Magentic-UI 能在需要时主动确认或要求协助。&lt;br>
🛡️ &lt;strong>操作防护&lt;/strong>：敏感操作需经用户明确批准后方可执行。&lt;br>
🧠 &lt;strong>计划学习与检索&lt;/strong>：从过往任务中学习经验以优化未来自动化流程，并将优秀方案保存至计划库。在后续任务中可自动或手动调用已存储的计划。&lt;br>
🔀 &lt;strong>并行任务执行&lt;/strong>：支持多任务并行运行，会话状态指示器会实时提示 Magentic-UI 何时需要您的输入或任务已完成。&lt;/p>
&lt;h2 id="设计架构">设计架构
&lt;/h2>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-1.png"
width="1723"
height="1307"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-1_hu_427424952f587218.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-1_hu_5cfb5d6930358133.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="131"
data-flex-basis="316px"
>&lt;/p>
&lt;p>&lt;strong>Magentic-UI&lt;/strong> 的底层系统是由一组从 AutoGen 的 &lt;strong>Magentic-One&lt;/strong> 系统（如上图所示）改造而来的专业化 Agent 组构成，各Agent通过模块化协作实现不同功能：&lt;/p>
&lt;h3 id="agent功能说明">Agent功能说明
&lt;/h3>&lt;h4 id="总控代理orchestrator">&lt;strong>总控代理（Orchestrator）&lt;/strong>
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>功能定位&lt;/strong>：基于大语言模型（LLM）的主控智能体，负责与用户协同制定计划、决策何时请求用户反馈，并向其他智能体分配子任务。&lt;/li>
&lt;li>&lt;strong>协作流程&lt;/strong>：
&lt;ol>
&lt;li>与用户共同制定分步执行计划；&lt;/li>
&lt;li>动态判断需用户介入的节点；&lt;/li>
&lt;li>将子任务分派至其他智能体执行。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4 id="网页浏览代理websurfer">&lt;strong>网页浏览代理（WebSurfer）&lt;/strong>
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>功能定位&lt;/strong>：配备网页浏览器的 LLM 智能体，支持多轮次网页交互操作。&lt;/li>
&lt;li>&lt;strong>核心能力&lt;/strong>：
&lt;ul>
&lt;li>根据总控代理的指令，执行点击、输入、滚动、页面跳转等操作；&lt;/li>
&lt;li>&lt;strong>超越 AutoGen 多模态网页浏览器&lt;/strong>：新增标签管理、选项选择、文件上传及多模态查询支持。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="代码执行代理coder">&lt;strong>代码执行代理（Coder）&lt;/strong>
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>功能定位&lt;/strong>：配备 Docker 代码执行容器的 LLM 智能体。&lt;/li>
&lt;li>&lt;strong>核心能力&lt;/strong>：
&lt;ul>
&lt;li>编写并执行 Python 和 Shell 命令；&lt;/li>
&lt;li>将执行结果反馈至总控代理。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="文件处理代理filesurfer">**文件处理代理（FileSurfer）
&lt;/h4>&lt;p>**&lt;/p>
&lt;ul>
&lt;li>&lt;strong>功能定位&lt;/strong>：集成 Docker 容器与 MarkItDown 包文件转换工具的 LLM 智能体。&lt;/li>
&lt;li>&lt;strong>核心能力&lt;/strong>：
&lt;ul>
&lt;li>定位 Magentic-UI 控制目录下的文件；&lt;/li>
&lt;li>将文件转换为 Markdown 格式并支持内容问答。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="用户代理userproxy">&lt;strong>用户代理（UserProxy）&lt;/strong>
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>功能定位&lt;/strong>：代表用户与系统交互的代理角色。&lt;/li>
&lt;li>&lt;strong>协作模式&lt;/strong>：总控代理可将任务直接委派给用户（而非其他智能体）完成。&lt;/li>
&lt;/ul>
&lt;h3 id="用户交互流程">用户交互流程
&lt;/h3>&lt;p>用户利用 Magentic UI 的交互流程可以用下图表示：
&lt;a class="link" href="https://mermaid.live/edit#pako:eNplVFtPGlEQ_ivkPKOyiCKYtGm9VFut9zbpwgPKqiSVNSsk2g2JNl5AUaCo0YgXLF7SVNCmliqif4Zzdvdf9OyZZcW6Tztzvm_mmzkzR0Zjol9AbjQh-aYnLcPtnqCFfq94ZfOcRIs4kVKvi2qhSK6-ei11dS8sr3n1Po2XTsj2Csn8bNB2F_HqEd67V2Ir3lYgv2bANrnXNyEEQ4GxupFui7J5SKJJHF0mFydqPouj3yIGuo2ijWMdsXrI2O2GAPVhjyYDhnK3rd6nlK24tn_sfc7GuSv19wnk5niSSCq5WwiirayT7UvQbRI5KIea4GiHSDoeEkFShuqQwUXS65Vypqq8Q2eQYok2oAFHj7TdXEPlIU82b2iN2o8c1FGLVbJ5NZ_D-ThVy047eTJfIhtnldJ3JbmML3bw13NI6zV1dTLkGx4nC3jVOCWxMzUbx3dbJL1RLegNw3XJJB7Tsrf4NgEg0BIxw3UxWLeMy2kcW4dT5aqED9ZeVuuaCY_CNOClYqWcBgxEA4D--QOSMBYKiEFLz-Cjt1sv86MwOhSWxgWJpXrLA1Upp7TsNXSwqtmktNEhBPg73rjNmz_A03tztPCM0Rn4LNRk6eFxbpH2kI5lpfTnGXpkRpD6JXF2joF7n0wHia3Rxj4VJgT91Ya9ZZT3stGGnQJOnsKgwkWabXsHQMPqeWL1mhbY79no7BSYu08msXmSiUEGvL-Ci7_-i83wNDHD9_Nq_hKXt7TNXbVQwBuHeO_ocV76GWZABqVaZl49XTAW4GyRzo4Zc6BWwyAPS25sXf4vThRqWdXGDIKQOFlMwKbV-snaN6W0z_xDvFKKkotjcr2gnK95a1NWyxgyJffVKhk2BoBk5mkIpZQmB-a19NXyu0z-MLNH6IqkjGcrFVU2Lp9yRxjoA6979w-9rchK37yAH7lDUliwoilBmvLpJpJ1vAeFJoUpwYPc9HdclISZkAd5ghHKmvYFP4niVJUoieGJSeQe932eoVZ42u8LCe0BH92gRwgdJ0FqE8PBEHJzLhYCuWU0i9yNLU31dpvLaWtq4Zycw95kRXPI7eDqHZzdaXM4XdTlbOQiVvSF5bTVu2wue6O92c412m0tDluzFQn-QEiUeuEdZ8955B-N54jD" target="_blank" rel="noopener"
>&lt;img src="https://mermaid.ink/img/pako:eNplVFtPGlEQ_ivkPKOyiCKYtGm9VFut9zbpwgPKqiSVNSsk2g2JNl5AUaCo0YgXLF7SVNCmliqif4Zzdvdf9OyZZcW6Tztzvm_mmzkzR0Zjol9AbjQh-aYnLcPtnqCFfq94ZfOcRIs4kVKvi2qhSK6-ei11dS8sr3n1Po2XTsj2Csn8bNB2F_HqEd67V2Ir3lYgv2bANrnXNyEEQ4GxupFui7J5SKJJHF0mFydqPouj3yIGuo2ijWMdsXrI2O2GAPVhjyYDhnK3rd6nlK24tn_sfc7GuSv19wnk5niSSCq5WwiirayT7UvQbRI5KIea4GiHSDoeEkFShuqQwUXS65Vypqq8Q2eQYok2oAFHj7TdXEPlIU82b2iN2o8c1FGLVbJ5NZ_D-ThVy047eTJfIhtnldJ3JbmML3bw13NI6zV1dTLkGx4nC3jVOCWxMzUbx3dbJL1RLegNw3XJJB7Tsrf4NgEg0BIxw3UxWLeMy2kcW4dT5aqED9ZeVuuaCY_CNOClYqWcBgxEA4D--QOSMBYKiEFLz-Cjt1sv86MwOhSWxgWJpXrLA1Upp7TsNXSwqtmktNEhBPg73rjNmz_A03tztPCM0Rn4LNRk6eFxbpH2kI5lpfTnGXpkRpD6JXF2joF7n0wHia3Rxj4VJgT91Ya9ZZT3stGGnQJOnsKgwkWabXsHQMPqeWL1mhbY79no7BSYu08msXmSiUEGvL-Ci7_-i83wNDHD9_Nq_hKXt7TNXbVQwBuHeO_ocV76GWZABqVaZl49XTAW4GyRzo4Zc6BWwyAPS25sXf4vThRqWdXGDIKQOFlMwKbV-snaN6W0z_xDvFKKkotjcr2gnK95a1NWyxgyJffVKhk2BoBk5mkIpZQmB-a19NXyu0z-MLNH6IqkjGcrFVU2Lp9yRxjoA6979w-9rchK37yAH7lDUliwoilBmvLpJpJ1vAeFJoUpwYPc9HdclISZkAd5ghHKmvYFP4niVJUoieGJSeQe932eoVZ42u8LCe0BH92gRwgdJ0FqE8PBEHJzLhYCuWU0i9yNLU31dpvLaWtq4Zycw95kRXPI7eDqHZzdaXM4XdTlbOQiVvSF5bTVu2wue6O92c412m0tDluzFQn-QEiUeuEdZ8955B-N54jD?type=png"
loading="lazy"
>&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    A[用户发起请求] --&amp;gt; B[输入文本/附加图片];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    B --&amp;gt; C{Magentic-UI 生成分步计划};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    C -- 生成成功 --&amp;gt; D[用户进入计划编辑界面];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    C -- 生成失败 --&amp;gt; C1[提示用户重新输入];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    C1 --&amp;gt; B;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    D -- 用户编辑计划 --&amp;gt; E{编辑操作};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    E -- 添加/删除/修改步骤 --&amp;gt; D;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    E -- 确认完成 --&amp;gt; F[总控代理存储计划];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    F --&amp;gt; G[启动计划执行引擎];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    G --&amp;gt; H{按顺序执行步骤};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    H --&amp;gt; I{当前步骤类型?};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    subgraph 具体步骤执行
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        direction LR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        I -- WebSurfer --&amp;gt; J[执行网页操作];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        I -- Coder --&amp;gt; K[生成并执行代码];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        I -- FileSurfer --&amp;gt; L[处理文件];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">        I -- UserProxy --&amp;gt; M[提示用户手动操作];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    J --&amp;gt; N{步骤是否成功完成?};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    K --&amp;gt; N;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    L --&amp;gt; N;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    M --&amp;gt; N;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    N -- 是 --&amp;gt; O{所有步骤均已完成?};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    N -- 否 --&amp;gt; P[记录错误原因];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    P --&amp;gt; Q{是否需要重新规划?};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    Q -- 是 --&amp;gt; R[请求用户许可重新规划];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    R -- 同意 --&amp;gt; C;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    R -- 拒绝 --&amp;gt; S[终止流程];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    Q -- 否 --&amp;gt; S;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    O -- 是 --&amp;gt; T[生成最终结果];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    O -- 否 --&amp;gt; H;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    T --&amp;gt; U[向用户呈现结果];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    U --&amp;gt; V[结束];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>输入与计划生成&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用户通过文本/图片触发流程，系统生成初始计划。若失败则提示用户重新输入。&lt;/li>
&lt;li>用户通过编辑界面迭代优化计划，确认后进入执行阶段。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>计划执行逻辑&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>总控代理按步骤分配任务至对应智能体（WebSurfer/Coder/FileSurfer）或用户。&lt;/li>
&lt;li>每个步骤完成后验证状态，若失败则判断是否需要重新规划（需用户授权）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>动态控制与终止&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用户可随时干预：暂停执行、修改计划或终止流程。&lt;/li>
&lt;li>所有步骤完成后交付最终结果，异常情况下提供透明错误反馈。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="工具部署">工具部署
&lt;/h2>&lt;p>&lt;strong>Magentic AI&lt;/strong> 主要基于Python 开发，Web部分基于FastAPI。而它的AI控制主要通过 Playwright 控制 &lt;strong>Docker&lt;/strong> 容器中的一个虚拟浏览器，且可以实时显示给用户。而背后的大模型则主要基于各个开放大模型的API接入方式使用。&lt;/p>
&lt;p>所以要部署Magentic UI，需要先确认相关前置条件：&lt;/p>
&lt;ul>
&lt;li>Docker已安装，如果是Window系统，安装Docker Desktop，且和WSL集成&lt;/li>
&lt;li>提供大模型的接入&lt;strong>API KEY&lt;/strong>，默认使用的是 &lt;strong>OPENAI&lt;/strong> 的API KEY&lt;/li>
&lt;li>Python运行环境且 &lt;strong>&amp;gt;3.10&lt;/strong> 版本&lt;/li>
&lt;/ul>
&lt;p>是在WSL中部署的这个工具， 首先创建python虚拟环境，然后安装Magentic AI及相关依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">python3 -m venv .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> .venv/bin/activate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip3 install magentic-ui
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>确保Docker已启动, 运行Magentic UI前应该没有相关容器在运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>大模型这里可以使用微软Azure AI上的OPENAI, ， 完成配置后，将对应api key设置为环境变量 &lt;code>OPENAI_API_KEY&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENAI_API_KEY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;YOUR_API_KEY&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>另外Magentic UI本身需要对大模型进行配置，Azure AI的配置模板如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-YAML" data-lang="YAML">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">model_config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">  &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">AzureOpenAIChatCompletionClient&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">  &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">model&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gpt-4o&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">azure_endpoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;YOUR ENDPOINT&amp;gt;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">azure_deployment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;YOUR DEPLOYMENT&amp;gt;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">api_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;2024-10-21&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">azure_ad_token_provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">      &lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">autogen_ext.auth.azure.AzureTokenProvider&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">      &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">        &lt;/span>&lt;span class="nt">provider_kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DefaultAzureCredential&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">        &lt;/span>&lt;span class="nt">scopes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">          &lt;/span>- &lt;span class="l">https://cognitiveservices.azure.com/.default&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">    &lt;/span>&lt;span class="nt">max_retries&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">orchestrator_client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">coder_client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">web_surfer_client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">file_surfer_client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">action_guard_client&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*client&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="运行">运行
&lt;/h2>&lt;p>然后运行Magentic ui, 默认使用8081端口，首次运行会下载多个不同docker镜像及相关依赖，时间较长，等待安装完成&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">magentic ui --port &lt;span class="m">8081&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>等运行log中出现如下信息，则启动成功&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">| INFO | magentic_ui.backend.web.app:lifespan:59 - Application startup complete. Navigate to http://127.0.0.1:8081
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>浏览器访问 &lt;code>http://localhost:8081&lt;/code>&lt;/p>
&lt;p>会看到如下界面
&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-3.png"
width="1799"
height="762"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-3_hu_fe26cb204b45df8c.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-3_hu_d4b7548936aad01a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="236"
data-flex-basis="566px"
>&lt;/p>
&lt;p>启动一个会话后，比如让AI协助我们完成一个测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">请测试saucedemo.com网站的不同用户登录功能是否正常，并汇总问题为markdown格式
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如安装正确，大模型调用正常，那么Magentic UI 就会规划相关任务计划，并让用户确认&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-5.png"
width="1830"
height="825"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-5_hu_e4f7b711cc461b62.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-5_hu_5dc9845a629c1a17.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="221"
data-flex-basis="532px"
>&lt;/p>
&lt;p>用户也可以根据相关反馈，对计划进行调整，在计划执行过程中，也可以和AI交互，变更它的执行路径。具体的执行演示，可参看下方视频。&lt;/p>
&lt;p>这时查看WSL中的docker 运行信息，可以看到运行了3个容器，其中两个是mangenti UI的&lt;code>coder&lt;/code> 和 &lt;code>file surfer&lt;/code> 智能体，另一个是可远程查看的 &lt;code>vnc_browser&lt;/code> 容器&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-2.png"
width="795"
height="189"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-2_hu_4b1b4977de39e810.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-2_hu_bf1e193fd2bb5b12.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="420"
data-flex-basis="1009px"
>&lt;/p>
&lt;p>一系列步骤执行完成，Magentic UI根据最开始的指令，得到了如下markdown格式结果汇总。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">以下是对saucedemo.com网站不同用户登录功能测试的结果汇总：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**标准用户**&lt;/span> (&lt;span class="sb">`standard_user`&lt;/span>):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 登录成功。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 无问题，用户可以正常访问库存页面并浏览产品。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**被锁定用户**&lt;/span> (&lt;span class="sb">`locked_out_user`&lt;/span>):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 登录失败。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 显示错误消息 &amp;#34;Epic sadface: Sorry, this user has been locked out.&amp;#34; 账户已被锁定，无法访问。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">3.&lt;/span> &lt;span class="gs">**问题用户**&lt;/span> (&lt;span class="sb">`problem_user`&lt;/span>):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 登录成功。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 产品图像存在不匹配的问题，图像错误是已知问题。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">4.&lt;/span> &lt;span class="gs">**性能故障用户**&lt;/span> (&lt;span class="sb">`performance_glitch_user`&lt;/span>):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 登录成功。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">-&lt;/span> 无明显系统减慢或异常，用户可以正常导航。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些结果表明网站能够正确处理不同账户类型的登录场景。如果您想亲自测试，可以访问 [&lt;span class="nt">saucedemo.com&lt;/span>](&lt;span class="na">https://www.saucedemo.com/&lt;/span>)。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用体会">使用体会
&lt;/h2>&lt;p>总体应用下来，把AI重新定位为辅助者角色，显然更贴合当前AI应用的实际，而且通过容器实时显示AI的操作过程，使AI执行任务不再像个黑盒，确实友好了很多。&lt;/p>
&lt;p>不过应用中感觉还是实用性不是太好，虽然官方已声明现阶段还是研究性质，但尚有较大改进空间。&lt;/p>
&lt;ol>
&lt;li>安装和配置比较复杂，各种依赖包众多，耗时较久&lt;/li>
&lt;li>大模型本身能力对执行过程，包括是否能正常完成交互都有较大影响。调用失败和异常较多。&lt;/li>
&lt;li>大模型的token消耗比较可观，完成一个任务，其实会分解多数十个不同请求，而每个请求的token消耗也是数千计，实用付费模型的话，成本高昂&lt;/li>
&lt;/ol>
&lt;p>下图是Azure后台查看的我试验期间的token消耗，比较可观。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-4.png"
width="1524"
height="388"
srcset="https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-4_hu_e0d7e868c2da13d7.png 480w, https://chengxiaqiucao.github.io/post/097-magenticui%E8%AF%84%E6%B5%8B/snap_20250526-4_hu_5ac4275b5ccc0967.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="392"
data-flex-basis="942px"
>&lt;/p>
&lt;p>总之，Magentic UI 的发展方向值得期待，但当下还需要多等待它的进一步完善。&lt;/p>
&lt;hr></description></item><item><title>mem0，让AI拥有记忆，打造个性化助手的基石</title><link>https://chengxiaqiucao.github.io/post/098-mem0/</link><pubDate>Tue, 27 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/098-mem0/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/098-mem0/Pasted-20250722.png" alt="Featured image of post mem0，让AI拥有记忆，打造个性化助手的基石" />&lt;p>在AI大模型飞速发展的今天，各类智能应用层出不穷。然而，当前许多大型语言模型（LLMs）仍面临一个核心挑战：&lt;strong>记忆的缺失&lt;/strong>。也就是它们往往是“无状态”的，很多AI工具从性能考虑，有较严格的上下文窗口限定，超过这个窗口的历史交互信息就会被遗弃。导致AI无法在不同会话甚至同一会话的复杂交互中持续记住上下文，对话缺乏连贯性，并经常出现信息重复，无法处理长期任务。&lt;/p>
&lt;p>对于一个个性化的AI助手，如果每次交流它都“失忆”，不能指导你的偏好和习惯，这种体验无疑是令人沮丧的。正是为了解决这一痛点，一个名为 &lt;code>Mem0&lt;/code> 的开源项目应运而生。它旨在为AI应用提供可扩展、持久且可插拔的记忆能力，让你的AI真正拥有“大脑”。&lt;/p>
&lt;p>其实在我们之前的文章中介绍过的Browser-Use这个开源项目，就使用了 &lt;code>Mem0&lt;/code> 来实现任务记忆。&lt;/p>
&lt;p>本篇我们就来详细介绍下 &lt;code>Mem0&lt;/code> 的核心理念、技术特点。&lt;/p>
&lt;h2 id="为什么ai需要记忆">为什么AI需要“记忆”？
&lt;/h2>&lt;p>当前LLMs的强大主要体现在其对单次输入的高效处理能力上。它们能够生成流畅的文本、回答复杂的问题，但这些能力往往局限于当前的“提示”（prompt）窗口内。一旦对话结束或上下文超出窗口限制，之前的交互信息就会被遗忘。&lt;/p>
&lt;p>这种“无状态”的特性，导致了以下几个问题：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>上下文丢失&lt;/strong>：长时间对话中，AI无法记住早期内容，导致重复提问或理解偏差。&lt;/li>
&lt;li>&lt;strong>个性化缺失&lt;/strong>：AI无法基于用户的历史行为和偏好提供定制化服务。&lt;/li>
&lt;li>&lt;strong>长期任务受限&lt;/strong>：对于需要多轮交互、信息累积才能完成的任务（如项目管理、复杂规划），无记忆的AI难以胜任。&lt;/li>
&lt;li>&lt;strong>效率低下&lt;/strong>：用户不得不反复提供背景信息，降低了交互效率。&lt;/li>
&lt;/ul>
&lt;p>Mem0 的出现，则弥补了这一“记忆鸿沟”，让AI能够积累经验、学习成长。&lt;/p>
&lt;h2 id="mem0-是什么">Mem0 是什么？
&lt;/h2>&lt;p>&lt;strong>Mem0&lt;/strong> 是一个开源的、模块化的框架，专为赋予LLMs&lt;strong>可扩展、持久且可插拔&lt;/strong>的记忆能力而设计。 它将AI的记忆抽象为不同的层级，并提供了一套统一的API，使得开发者能够轻松地为任何LLM应用添加记忆功能。&lt;/p>
&lt;p>简单来说，Mem0 就是AI应用的一个外置“记忆库”。它能够捕获、存储和检索AI与用户交互过程中产生的所有相关信息，并在需要时将其注入到LLMs的上下文中，从而实现更连贯、更智能的对话和任务执行。&lt;/p>
&lt;h2 id="mem0-的核心特性说明">Mem0 的核心特性说明
&lt;/h2>&lt;p>Mem0 的强大之处在于其精心设计的架构和丰富的功能集：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>分层记忆架构&lt;/strong>：Mem0 将记忆分为不同类型，以适应不同的需求：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>短暂记忆 (Ephemeral Memory)&lt;/strong>：存储短期的、会话内的上下文信息，类似于人类的短期记忆。&lt;/li>
&lt;li>&lt;strong>长期记忆 (Long-Term Memory)&lt;/strong>：存储重要的、需要长期保留的知识和经验，通过语义嵌入实现高效检索。&lt;/li>
&lt;li>&lt;strong>归档记忆 (Archival Memory)&lt;/strong>：用于备份和审计，确保所有交互都有迹可循。&lt;/li>
&lt;li>&lt;strong>知识记忆 (Knowledge Memory)&lt;/strong>：专为存储外部知识库设计，例如文档、网页等。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>高度可插拔（Pluggable）&lt;/strong>：Mem0 提供了灵活的集成能力，支持与多种主流LLM服务（如OpenAI、Anthropic、Groq等）和向量数据库（如Qdrant、Pinecone、ChromaDB等）无缝协作。 这意味着开发者可以根据自己的需求和偏好，自由选择后端服务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>多租户支持&lt;/strong>：Mem0 支持多租户架构，允许为不同的用户或应用实例创建独立的记忆空间，确保数据隔离和安全性，这对于构建SaaS产品尤为重要。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>开发者友好&lt;/strong>：提供简洁易用的Python SDK，并计划支持JavaScript/TypeScript，大大降低了开发者集成记忆功能的门槛。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>与主流框架集成&lt;/strong>：原生支持 LangChain、LlamaIndex 等流行的LLM应用开发框架，加速了开发流程。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="browser-use-对-mem0-的应用分析">Browser-Use 对 Mem0 的应用分析
&lt;/h2>&lt;p>&lt;strong>Browser-Use&lt;/strong> 旨在让AI agent能够像人类一样，在浏览器中执行复杂的任务。它利用了Mem0 来赋予AI agent “记忆”能力，在执行任务时，可以根据设定，记录多达100甚至更多的操作步骤详细信息，作为后续步骤的参考。&lt;/p>
&lt;p>通过集成 Mem0，Browser-Use 项目中的AI agent获得了以下关键能力：&lt;/p>
&lt;h3 id="浏览历史记忆与导航优化">&lt;strong>浏览历史记忆与导航优化&lt;/strong>
&lt;/h3>&lt;p>AI agent访问过的每一个URL、每一个交互（点击、输入），都可以通过Mem0存储为&lt;strong>短暂记忆&lt;/strong>或转化为&lt;strong>长期记忆&lt;/strong>。&lt;/p>
&lt;p>当用户要求agent “&lt;code>回到之前搜索的结果页面&lt;/code>” 时，agent不再需要从头开始搜索，而是可以直接从Mem0中检索历史URL并导航过去，大大提升了效率和用户体验。&lt;/p>
&lt;h3 id="复杂任务的上下文保持">&lt;strong>复杂任务的上下文保持&lt;/strong>
&lt;/h3>&lt;p>比如一个AI agent需要完成一个跨多个页面的在线购物流程：搜索商品 -&amp;gt; 添加购物车 -&amp;gt; 填写地址 -&amp;gt; 支付。&lt;/p>
&lt;p>Mem0 可以在每一步都存储当前的页面状态、用户输入、商品详情等&lt;strong>短暂记忆&lt;/strong>。即使流程中断，agent也能从Mem0中加载之前的上下文，准确地从中断处继续，而不是“失忆”重来。&lt;/p>
&lt;p>例如，agent可以记住在某个商品页面上用户选择的颜色和尺码，即使跳转到购物车页面后又返回，这些信息依然存在。&lt;/p>
&lt;h3 id="用户操作模式与偏好学习">&lt;strong>用户操作模式与偏好学习&lt;/strong>：
&lt;/h3>&lt;p>如果用户经常让AI agent在特定网站上执行相似的任务（如每天早上查看某个新闻网站的头条），Mem0 可以将这些高频行为模式转化为&lt;strong>长期记忆&lt;/strong>。&lt;/p>
&lt;p>未来，AI agent可以更智能地预测用户需求，甚至主动推荐或预加载相关内容，实现真正的个性化浏览器操作体验。&lt;/p>
&lt;h3 id="多会话任务的持久性">&lt;strong>多会话任务的持久性&lt;/strong>：
&lt;/h3>&lt;p>对于需要几天才能完成的复杂研究任务（如收集某个主题的资料），AI agent可以将每个浏览会话中的关键发现、已访问的资源和任务进度存储在Mem0的&lt;strong>长期记忆&lt;/strong>中。&lt;/p>
&lt;p>即使关闭浏览器，下一次启动时，agent也能加载这些记忆，继续之前的研究，确保任务的连续性和完整性。&lt;/p>
&lt;blockquote>
&lt;p>通过上述剖析，我们可以清晰地看到 Mem0 如何帮助 Browser-Use 项目中的AI agent从一个“即用即弃”的工具，转变为一个能够理解浏览器环境、记住历史操作、并持续执行复杂任务的智能助手。
它让AI agent不再仅仅是机械地执行指令，而是能够积累经验、适应环境、并提供更流畅、更人性化的自动化浏览体验。&lt;/p>&lt;/blockquote>
&lt;h3 id="总结">总结
&lt;/h3>&lt;p>在构建真正智能、能够进行复杂交互的AI应用时，记忆能力是不可或缺的一环。&lt;strong>Mem0&lt;/strong> 作为一款专注于为LLMs提供可扩展、持久且可插拔记忆的开源框架，无疑为开发者们提供了强大的工具。它通过分层记忆、灵活的集成能力和开发者友好的设计，极大地简化了AI记忆功能的实现。&lt;/p>
&lt;p>无论是赋能像 Browser-Use 这样的AI浏览器agent，使其在复杂的网页交互中拥有持久记忆，还是构建更聪明的个人助手、客服机器人，Mem0 都能提供坚实的基础。&lt;/p>
&lt;p>对于希望打造个性化助手或让自己的AI Agent更贴合实际应用场景，Mem0是一个不可不了解的AI生态工具。&lt;/p></description></item><item><title>打造个人知识库，wsl+ollama部署deepseek与vscode集成</title><link>https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</link><pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3.png" alt="Featured image of post 打造个人知识库，wsl+ollama部署deepseek与vscode集成" />&lt;p>目前大模型应用如火如荼，各大LLM如&lt;code>Deepseek&lt;/code>也都提供了在线的助手服务，结合&lt;code>mcp-server&lt;/code>还可以进一步拓展到本地的工具能力。&lt;/p>
&lt;p>但对于一些和本地业务和数据强相关的资料，在线的大模型训练数据集一般并不能涵盖，特别还有一些敏感或对安全要求很高的数据，使用在线大模型并不现实。所以我们个人应用和实际工作中，本地部署大模型并加入本地知识库也是一个刚性需求。&lt;/p>
&lt;p>本文就记录下在WSL中通过Ollama和CherryStudio搭建本地大模型，并将本地模型集成到VsCode的AI助手的过程分享。&lt;/p>
&lt;h2 id="ollama简介">Ollama简介
&lt;/h2>&lt;p>Ollama 是一个基于Go 语言开发的简单易用的本地大语言模型运行框架，专为在本地机器上便捷部署和运行大型语言模型（LLM）而设计。Ollama 是 &lt;strong>Omni-Layer Learning Language Acquisition Model（全方位学习语言接受模型）&lt;/strong> 的简写。&lt;/p>
&lt;h2 id="deepseek本地模型及运行配置">Deepseek本地模型及运行配置
&lt;/h2>&lt;p>Deepseek目前根据本地部署包含的参数集大小，又包含 &lt;strong>1.5B&lt;/strong> 到 &lt;strong>671B&lt;/strong> 等多个版本，参数集越大则AI越智能，但相应地对硬件要求则越高。&lt;/p>
&lt;p>一般对应不同deepseek模型版本，推荐的硬件配置如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>模型型号&lt;/th>
&lt;th>CPU&lt;/th>
&lt;th>内存&lt;/th>
&lt;th>硬盘&lt;/th>
&lt;th>显存&lt;/th>
&lt;th>适用场景&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>DeepSeek-R1-1.5B&lt;/td>
&lt;td>4 核&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>3 GB+&lt;/td>
&lt;td>非必需（若需 CPU 加速可选 GTX 1650）&lt;/td>
&lt;td>个人使用，如笔记本电脑、台式电脑等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-7B&lt;/td>
&lt;td>8 核&lt;/td>
&lt;td>16 GB+&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>8 GB+显存（如 RTX 3070/4060）&lt;/td>
&lt;td>中小型企业本地开发&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-8B&lt;/td>
&lt;td>8 核&lt;/td>
&lt;td>16 GB+&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>8 GB+显存&lt;/td>
&lt;td>中小型企业本地开发（提升精度的轻量级任务）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-14B&lt;/td>
&lt;td>12 核&lt;/td>
&lt;td>32 GB+&lt;/td>
&lt;td>15 GB+&lt;/td>
&lt;td>16 GB+显存（如RTX 4090 或 A5000）&lt;/td>
&lt;td>中小型企业本地开发（中量级任务）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-32B&lt;/td>
&lt;td>16 核&lt;/td>
&lt;td>64 GB+&lt;/td>
&lt;td>30 GB+&lt;/td>
&lt;td>24 GB+显存（如 A100 40 GB 或 RTX 3090）&lt;/td>
&lt;td>专业领域任务，如医疗、科研、法律&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-70B&lt;/td>
&lt;td>32 核&lt;/td>
&lt;td>128 GB+&lt;/td>
&lt;td>70 GB+&lt;/td>
&lt;td>多卡并行（如 2x A100 80GB 或 4x RTX 4090）&lt;/td>
&lt;td>大型企业或科研机构，专业领域任务处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-671B（满血版）&lt;/td>
&lt;td>64 核&lt;/td>
&lt;td>512 GB+&lt;/td>
&lt;td>300 GB+&lt;/td>
&lt;td>多卡并行（如 8x A100/H100）&lt;/td>
&lt;td>国家级科研任务处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>对我们个人用户来说，根据自己的电脑配置情况，通常选择1.5B到14B。 当然如果不是高频使用本地模型，个人建议可以将配置和推荐模型降一档匹配。&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="利用ollama在wsl中部署本地deepseek">利用Ollama在WSL中部署本地Deepseek
&lt;/h2>&lt;p>因为笔者当前主要是希望将一些本地数据接入Deepseek，也没有高频使用本地LLM的需求。所有这里我选择部署 &lt;strong>DeepSeek-R1-14B&lt;/strong>， 另外为了避免每次启动电脑都因为LLM运行占用大量资源，所以这里我希望在Windows电脑的WSL下运行LLM&lt;/p>
&lt;h3 id="wsl配置">WSL配置
&lt;/h3>&lt;p>如果当前系统还没有启用WSL，可以先启用（过程不再详述， Win11中运行WSL install [对应Linux发行版] 即可安装）&lt;/p>
&lt;p>通过命令行查看&lt;strong>WSL&lt;/strong>状态:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="line">&lt;span class="cl">C&lt;span class="p">:&lt;/span>&lt;span class="nl">\qiucao&lt;/span>&lt;span class="c1">&amp;gt;wsl --status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">默认分发: Ubuntu-24.04
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">默认版本: 2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>WSL默认的网络模式是NAT，这里可以通过&lt;code>WSL Setting&lt;/code>程序，修改下当前配置，改为&lt;code>Mirrored&lt;/code>镜像模式，共用宿主机网络。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1.png"
width="1607"
height="969"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1_hu_251e83a643f91563.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1_hu_d3b3405b54f8e912.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="398px"
>&lt;/p>
&lt;h3 id="安装ollama">安装Ollama
&lt;/h3>&lt;p>进入Ollama官网(&lt;a class="link" href="https://ollama.com/" target="_blank" rel="noopener"
>https://ollama.com/&lt;/a>)下载界面, 因为我们是在WSL中部署，所以选择Linux安装。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419.png"
width="1885"
height="936"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419_hu_99722e55ae18c4a1.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419_hu_89a14deb9f0b4320.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="201"
data-flex-basis="483px"
>&lt;/p>
&lt;p>执行如下命令，等待下载并自动安装完成。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -fsSL https://ollama.com/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装完成查看版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~$ ollama --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ollama version is 0.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="部署deepseek">部署deepseek
&lt;/h3>&lt;p>完成ollama安装后，就可以根据Ollama提供的大模型清单，选择对应大模型进行安装。目前支持的大模型清单，可以从官网如下地址查询：https://ollama.com/library&lt;/p>
&lt;p>执行如下命令下载并运行deepseek&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ollama run deepseek-r1:14b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek.png"
width="1193"
height="243"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek_hu_1026ff78b8603fed.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek_hu_9d7ff43704722fde.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="490"
data-flex-basis="1178px"
>&lt;/p>
&lt;p>安装成功后可以提问测试一下deepseek是否已正常提供服务&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2.png"
width="1404"
height="158"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2_hu_ed2f4389c23dba39.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2_hu_82a3907315705e92.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="888"
data-flex-basis="2132px"
>&lt;/p>
&lt;h3 id="添加知识库分析模型">添加知识库分析模型
&lt;/h3>&lt;p>至此，Deepseek其实已在本地部署。但如果要通过Deepseek使用本地数据和文档，我们还需要部署一个&lt;strong>语义向量模型&lt;/strong>（Embedding Model），用来将本地数据转化为大模型可分析的知识库数据。这里我们选择 &lt;strong>bge-m3&lt;/strong> 模型，这是一个通用向量模型，可以支持多语言、长文本和多种检索方式。&lt;/p>
&lt;p>执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ollama pull bge-m3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge.png"
width="1141"
height="198"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge_hu_63310f4bc6d28a9e.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge_hu_9a9373e160733582.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="576"
data-flex-basis="1383px"
>&lt;/p>
&lt;h2 id="用cherry-studio管理知识库并提供本地交互界面">用Cherry Studio管理知识库并提供本地交互界面
&lt;/h2>&lt;p>安装完Deepseek后，虽然我们可以在命令界面下和deepseek进行交互，但还是不够友好，包括对本地知识库的管理也不够方便。所以这里我们还可以安装一个开源的本地AI助手和知识库客户端Cherry Studio。从官网（https://cherry-ai.com）下载windows版本安装即可。
&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3.png"
width="1869"
height="861"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3_hu_162bef18952f99b6.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3_hu_de42598554b32e8a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="520px"
>&lt;/p>
&lt;p>打开Cherry Studio，按如下步骤添加我们刚刚通过ollama部署的Deepseek&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry.png"
width="1337"
height="821"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_hu_650d185a5428fb5.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_hu_2420da097208e561.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;p>会看到已经安装好的模型，添加进来
&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model.png"
width="972"
height="659"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model_hu_1427909c6f167c6d.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model_hu_50b783a5da211168.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="353px"
>
然后就可以利用Cherry Studio的知识库管理，将我们需要加入的本地文档纳入大模型的数据集中。这里包括直接添加文件、直接指定目录、从网站采集等多种方式，非常方便。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge.png"
width="1347"
height="828"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge_hu_a4e9beef670ffd2f.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge_hu_1187620292c81a03.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;h2 id="集成本地deepseek到vscode">集成本地Deepseek到vscode
&lt;/h2>&lt;p>而有了本地的LLM后，如果我们希望在vscode中使用，可以利用vscode 的 &lt;code>AI Toolkit&lt;/code> 插件，按如下方式添加本地LLM&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1.png"
width="1914"
height="959"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1_hu_833830a04db48530.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1_hu_f4c99c1236cd540c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="199"
data-flex-basis="478px"
>&lt;/p>
&lt;p>vscode中测试下本地库的能力&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2.png"
width="1433"
height="1009"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2_hu_7715fc702df564d2.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2_hu_c5b07401fbe6ecb3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="340px"
>&lt;/p>
&lt;p>以上就是我们部署本地Deepseek的实践分享&lt;/p></description></item><item><title>测试开发如何善用Cursor？</title><link>https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor.png" alt="Featured image of post 测试开发如何善用Cursor？" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>很多刚接触 AI 辅助编程的小伙伴应该都听说过 &lt;code>Cursor&lt;/code> 的强大，对初学者而言，免费版Cursor的免费额度也足够让大家体验它的强悍能力。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor.png"
width="1412"
height="640"
srcset="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_hu_cadbb1d864670952.png 480w, https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_hu_916744822785806f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="529px"
>&lt;/p>
&lt;p>可是在实际应用过程中，从我的实际经验，如果只是把它当作一个沟通对象，像和人沟通那样来完成开发任务，却会浪费大量时间在纠正它的理解偏差，而且极大概率在某一次对话后，把原来的成果改得面目全非，大量努力付诸东流。&lt;/p>
&lt;h2 id="cursor的12条军规">Cursor的12条军规
&lt;/h2>&lt;p>其实 Cursor 是否能更有效地发挥作用，跟它的使用方式有很大关系。Cursor的首席设计师 &lt;strong>Ryo Lu&lt;/strong> 早前曾在 X 上给出善用 Cursor 的12条军规：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules.png"
width="737"
height="1465"
srcset="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules_hu_3a464fc067e74c07.png 480w, https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules_hu_ef78950da28db6be.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="50"
data-flex-basis="120px"
>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>明确项目规则：&lt;/strong> 在项目开始前，设置5-10条清晰的项目规则，让Cursor了解你的代码结构和约束。对于现有代码库，可以尝试使用&lt;code>/generate rules&lt;/code>命令来生成规则。&lt;/li>
&lt;li>&lt;strong>具体化提示：&lt;/strong> 在提示中要非常具体，详细说明技术栈、期望行为和限制，就像编写一个迷你规范。&lt;/li>
&lt;li>&lt;strong>按文件操作：&lt;/strong> 每次处理一小部分，生成、测试并审查，保持专注。&lt;/li>
&lt;li>&lt;strong>测试先行：&lt;/strong> 优先编写测试，锁定测试用例，然后生成代码直到所有测试通过。&lt;/li>
&lt;li>&lt;strong>严格审查与修正：&lt;/strong> 始终审查AI的输出，并手动修复任何错误，然后将这些修正作为示例告知Cursor。&lt;/li>
&lt;li>&lt;strong>限定作用域：&lt;/strong> 使用&lt;code>@ file&lt;/code>, &lt;code>@ folders&lt;/code>, &lt;code>@ git&lt;/code>等命令来将Cursor的注意力限制在代码库的特定部分。&lt;/li>
&lt;li>&lt;strong>提供完整上下文：&lt;/strong> 将设计文档和清单保存在&lt;code>.cursor/&lt;/code>目录下，以便Cursor代理能够充分理解下一步需要做什么。&lt;/li>
&lt;li>&lt;strong>直接修改错误代码：&lt;/strong> 如果生成的代码有误，直接手动修改。Cursor从编辑中学习的速度比从解释中学习更快。&lt;/li>
&lt;li>&lt;strong>利用聊天历史：&lt;/strong> 使用聊天历史来迭代旧的提示，而无需从头开始。&lt;/li>
&lt;li>&lt;strong>明智选择模型：&lt;/strong> 根据需求有目的地选择模型。例如，Gemini适用于追求精确性，而Claude适用于需要更广泛知识的场景。&lt;/li>
&lt;li>&lt;strong>处理新栈或不熟悉栈：&lt;/strong> 在处理新或不熟悉的技术栈时，粘贴相关文档链接。让Cursor逐行解释所有错误和修复方法。&lt;/li>
&lt;li>&lt;strong>优化大型项目性能：&lt;/strong> 对于大型项目，让其在夜间进行索引，并限制上下文范围以保持性能的流畅性。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Using Cursor well = fast, clean code.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using it wrong = AI spaghetti you’ll be cleaning up all week.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Here’s how to actually use it right:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. Set 5-10 clear project rules upfront so Cursor knows your structure and constraints. Try /generate rules for existing codebases.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Be specific in prompts. Spell out tech stack, behavior, and constraints like a mini spec.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Work file by file; generate, test, and review in small, focused chunks.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. Write tests first, lock them, and generate code until all tests pass.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. Always review AI output and hard‑fix anything that breaks, then tell Cursor to use them as examples.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. Use @ file, @ folders, @ git to scope Cursor’s attention to the right parts of your codebase.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. Keep design docs and checklists in .cursor/ so the agent has full context on what to do next.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8. If code is wrong, just write it yourself. Cursor learns faster from edits than explanations.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9. Use chat history to iterate on old prompts without starting over.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10. Choose models intentionally. Gemini for precision, Claude for breadth.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11. In new or unfamiliar stacks, paste in link to documentation. Make Cursor explain all errors and fixes line by line.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12.Let big projects index overnight and limit context scope to keep performance snappy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Structure and control wins (for now)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Treat Cursor agent like a powerful junior — it can go far, fast, if you show it the way.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="测试开发如何善用cursor">测试开发如何善用Cursor?
&lt;/h2>&lt;p>而作为一个测试开发或自动化测试工程师，我们在编写相关测试脚本或工具时，如何善用 Cursor 更好帮助我们提升效率和产出呢？本文我们参照以上 12 条规则，总结相关的实践指南。&lt;/p>
&lt;h3 id="初始化与上下文构建将cursor训练成测试领域专家">初始化与上下文构建——将Cursor训练成“测试领域专家”
&lt;/h3>&lt;p>在项目启动或介入初期，首要任务是让Cursor充分理解当前测试环境的规范与约束。高质量的上下文输入，是高质量代码输出的前提。&lt;/p>
&lt;h4 id="明确项目测试规则与约定-规则1">明确项目测试规则与约定 (规则1)
&lt;/h4>&lt;p>在自动化测试项目中，代码规范、框架选型和设计模式的统一至关重要。基于&lt;code>规则1：明确项目规则&lt;/code> ，我们可以利用&lt;code>.cursor/rules.md&lt;/code>文件，将这些隐性的团队知识显性化，为Cursor提供一份清晰的行动纲领 。而对于存量项目，还可先使用&lt;code>/generate rules&lt;/code>命令初步提炼规则，再进行人工增补。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：在一个基于Python Flask的Web项目中，测试技术栈为Pytest与Selenium。可以在&lt;code>.cursor/rules.md&lt;/code>中定义如下规则：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .cursor/rules.md
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">所有单元测试文件命名为&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UI测试文件命名为&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">ui_test_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">测试函数必须以&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test_&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">开头&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">使用&lt;/span>&lt;span class="n">Pytest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fixture进行测试环境的设置与销毁&lt;/span>&lt;span class="err">（&lt;/span>&lt;span class="n">setup&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">teardown&lt;/span>&lt;span class="err">）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">UI测试遵循Page&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object模式&lt;/span>&lt;span class="err">，页面对象进行封装&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">避免使用硬编码等待，优先采用&lt;/span>&lt;span class="n">WebDriver的显式等待机制&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">测试报告统一使用&lt;/span>&lt;span class="n">Allure框架生成&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="提供详尽的指令以模拟测试场景-规则2">提供详尽的指令以模拟“测试场景” (规则2)
&lt;/h4>&lt;p>与AI的交互质量直接决定输出代码的质量。自动化测试的指令尤其需要精确性，因为它必须完整描述被测功能、输入数据、预期行为乃至异常路径。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：为用户登录功能编写集成测试。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>效果不佳的指令&lt;/strong>：&lt;code>写一个登录测试。&lt;/code>&lt;/li>
&lt;li>&lt;strong>结构清晰的指令&lt;/strong>：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">请使用Pytest框架，为Flask应用的用户登录功能（端点为POST /api/login，接收username和password）编写集成测试。需要覆盖以下三个场景：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 成功登录 (使用admin/password123)；
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 密码错误 (使用admin/wrongpass)；
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 用户不存在 (使用nonexistent/anypass)。对于成功场景，断言HTTP状态码为200且响应中包含非空的token。对于失败场景，断言状态码为401。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="迭代式开发与修正实现测试代码的持续集成">迭代式开发与修正——实现“测试代码的持续集成”
&lt;/h3>&lt;p>将复杂的测试任务分解，通过“生成-验证-修正”的敏捷循环进行开发，是确保代码质量和项目进度的有效策略。&lt;/p>
&lt;h4 id="小步快跑增量验证-规则3">小步快跑，增量验证 (规则3)
&lt;/h4>&lt;p>应规避一次性生成整个复杂模块所有测试的诱惑。&lt;/p>
&lt;p>正确的做法是将任务分解为最小可验证单元，逐个击破。&lt;/p>
&lt;p>例如，在为一组RESTful API编写测试时，应按“创建用户 -&amp;gt; 获取用户 -&amp;gt; 更新用户 -&amp;gt; 删除用户”的逻辑顺序，逐一生成和验证测试代码&lt;/p>
&lt;p>这种方式有助于快速定位问题，避免错误的累积。&lt;/p>
&lt;h4 id="测试驱动开发tdd的应用-规则4">测试驱动开发（TDD）的应用 (规则4)
&lt;/h4>&lt;p>测试驱动开发是保障代码质量的经典模式，Cursor可以成为该模式的强大加速器。工程师先定义函数的预期行为（即编写测试用例），再让AI生成满足这些测试的实现代码。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：实现一个折扣计算函数&lt;code>calculate_discount(price, discount_rate)&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>&lt;strong>定义测试&lt;/strong>: 首先要求Cursor：&lt;code>生成一个Pytest测试用例，用于测试calculate_discount函数。当price=100, discount_rate=0.1时，预期返回值为90；当discount_rate为负数时，应抛出ValueError异常。&lt;/code>&lt;/li>
&lt;li>&lt;strong>生成实现&lt;/strong>: 在测试代码&lt;code>test_calculate_discount.py&lt;/code>生成后，运行它（此时会失败），然后对Cursor发出新指令：&lt;code>请根据刚才生成的测试用例，实现calculate_discount函数的功能。&lt;/code>&lt;/li>
&lt;li>&lt;strong>验证闭环&lt;/strong>: Cursor生成函数实现后，再次运行测试，直至全部通过。&lt;/li>
&lt;/ol>
&lt;h4 id="主动纠正教学相长-规则5">主动纠正，教学相长 (规则5)
&lt;/h4>&lt;p>需要注意的是，AI生成的代码并非永远正确，而工程师的审查和修正是最后一道防线。直接在代码中修正错误，是训练Cursor最有效的方式，远胜于用自然语言向其解释。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
比如Cursor在生成的UI测试中，使用了一个不稳定且错误的XPath定位器&lt;code>//button[@id='submit']&lt;/code>。在测试运行失败后，我们可以直接手动将其修改为正确的定位器，例如 &lt;code>//input[@value='Login']&lt;/code>。修正后，可以在聊天中备注一句以强化其学习：&lt;code>“我已修正登录按钮的定位器，新的定位器更准确。请在后续任务中参考此模式。”&lt;/code> 。&lt;/p>
&lt;h3 id="精细化管理实现测试资源的智能调度">精细化管理——实现“测试资源的智能调度”
&lt;/h3>&lt;p>在大型项目中，如何让Cursor聚焦于正确的信息，是决定其效率和相关性的关键。&lt;/p>
&lt;h4 id="精准限定上下文范围-规则6">精准限定上下文范围 (规则6)
&lt;/h4>&lt;p>在庞大的代码库中，测试任务往往只与特定模块或服务相关。通过使用&lt;code>@folders&lt;/code>或&lt;code>@file&lt;/code>命令，可以显著缩小Cursor的分析范围，让其专注于必要的上下文。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
当为&lt;code>user_service&lt;/code>微服务编写API测试时，所有相关代码位于&lt;code>services/user_service/&lt;/code>目录。此时，应在提问前先输入&lt;code>@folders services/user_service/&lt;/code>，然后再描述具体的测试需求。&lt;/p>
&lt;h4 id="沉淀项目知识以辅助决策-规则7">沉淀项目知识以辅助决策 (规则7)
&lt;/h4>&lt;p>可以将测试策略、UI定位器优先级、数据模拟规范等关键信息沉淀为文档，并存放于&lt;code>.cursor/&lt;/code>目录中。这相当于为Cursor提供了一套“项目级知识库”。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
创建&lt;code>.cursor/ui_locators_priority.md&lt;/code>文件，内容为：“UI元素定位优先顺序：ID &amp;gt; Name &amp;gt; CSS Selector &amp;gt; XPath”。在提问时便可引用：&lt;code>请参考.cursor/ui_locators_priority.md中的策略，为注册页面的‘提交’按钮生成Selenium定位代码。&lt;/code>。&lt;/p>
&lt;h3 id="问题解决与效率优化化身测试效率加速器">问题解决与效率优化——化身“测试效率加速器”
&lt;/h3>&lt;p>掌握高级用法，能进一步将Cursor从日常助手，转变为解决复杂问题和加速学习的利器。&lt;/p>
&lt;h4 id="智能选择ai模型-规则10">智能选择AI模型 (规则10)
&lt;/h4>&lt;p>不同的AI模型具有不同的能力侧重。根据测试任务的特性选择合适的模型，可以事半功倍。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Gemini (精度优先)&lt;/strong>：适用于生成语法要求严格的单元测试、算法校验、或使用特定框架（如React Testing Library）的精细化测试代码。&lt;/li>
&lt;li>&lt;strong>Claude (广度优先)&lt;/strong>：更适合需要理解大量上下文的场景，如根据API文档生成全面的集成测试、设计端到端（E2E）测试场景，或在不熟悉的代码库中探索和建议测试点。&lt;/li>
&lt;/ul>
&lt;h4 id="利用文档快速掌握新技术-规则11">利用文档快速掌握新技术 (规则11)
&lt;/h4>&lt;p>当团队引入新的测试框架（如Playwright）时，工程师可以利用Cursor快速跨越学习曲线。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
直接向Cursor提供Playwright官方文档链接，并要求其生成示例代码。当生成的代码运行出错时，可以粘贴错误信息并提问：“这是运行Playwright脚本时出现的错误，请根据官方文档逐行解释错误原因，并提供修复建议。”。&lt;/p>
&lt;h4 id="限制上下文范围-规则12">限制上下文范围 (规则12)
&lt;/h4>&lt;p>当项目代码量比较大时，通过过夜索引，并限制上下文范围。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：&lt;/p>
&lt;p>在处理大型测试项目时，允许Cursor在后台处理索引，到第二天再进行具体的代码生成，从而保持性能流畅。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 优先索引核心模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@folder tests/unit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 延迟加载集成测试&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@defer tests/integration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结
&lt;/h2>&lt;p>对于我们实际工作而言，成功运用Cursor的本质，是一个从“指令下达者”转变为“智能协作者”和“知识引导者”的过程。着眼点在于突出其 &lt;strong>智能协作、知识沉淀和效率提升&lt;/strong> 的系统性作用。&lt;/p></description></item><item><title>Cursor收费？没事，咱们还有codebuddy！</title><link>https://chengxiaqiucao.github.io/post/092-codebuddy/</link><pubDate>Fri, 09 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/092-codebuddy/</guid><description>&lt;p>之前我们介绍通过AI生成自动化测试代码，以及通过 mcp server 控制浏览器，使用的是AI编程IDE &lt;strong>Cursor&lt;/strong>, Cursor以其强大的智能分析和辅助编程能力，在我们用自然语言给出一个编程需求时，即可自动帮我们完成代码的实现，高效且效果很好。但 Cursor 并不是一个免费软件，试用期结束后，作为日常工具的话，费用还是比较高昂。&lt;/p>
&lt;p>但现在，腾讯也出手推出了一个代码助手，正是本文主角，CodeBuddy。编程能力比Cursor不遑多让，更是对小程序这样腾讯生态下的应用有光环加成，更重要的是：完全免费！&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601.png"
width="1864"
height="748"
srcset="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601_hu_a6a7c5383c51629a.png 480w, https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601_hu_6bca803f41c61e5a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="249"
data-flex-basis="598px"
>&lt;/p>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>CodeBuddy本身并没有提供单独的IDE，但是对于各种主流IDE，都提供了插件支持&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-2.png"
width="1347"
height="343"
srcset="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-2_hu_14512690b13ddb8a.png 480w, https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-2_hu_8d6b89237956795d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="392"
data-flex-basis="942px"
>&lt;/p>
&lt;p>在各款开发工具的插件市场中搜索”腾讯云代码助手“，均能找到对应插件，相应进行安装即可&lt;/p>
&lt;p>以vs code为例，插件安装后，打开插件界面，即可类似Copilot或Cursor的助手页面那样进行编程辅助， 在CodeBuddy中，称为 &lt;strong>Craft&lt;/strong> 模式&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-3.png"
width="1920"
height="1080"
srcset="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-3_hu_cc0331be89deb021.png 480w, https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-3_hu_34205d90cfba55c2.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>除了辅助生成代码这个模式，还包括Chat模式，可以类似生成式AI那样进行对话交流。&lt;/p>
&lt;p>此外Code Review模式可以帮助完成已有代码的评审，Unit Test则会针对当前代码自动编写单元测试脚本。&lt;/p>
&lt;h2 id="小程序开发实测">小程序开发实测
&lt;/h2>&lt;p>而CodeBuddy本身基于腾讯生态，对于像小程序开发这样的工作，可以说是有着先天的右手。&lt;/p>
&lt;p>这里笔者在微信开发者工具中，安装CodeBuddy插件之后，仅仅通过几次交互问答，就帮助我完成了一个小程序的实现。&lt;/p>
&lt;p>如下，就是我通过它完成的获取Github最近一个月最热门仓库的实现，总用时大概10多分钟，实测可用且界面友好。&lt;/p>
&lt;p>以后可能真的人人都是开发者，即便对编程不甚了解，只要有想法，也能轻松转化为现实！&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-1.png"
width="1848"
height="937"
srcset="https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-1_hu_a9b662602227106e.png 480w, https://chengxiaqiucao.github.io/post/092-codebuddy/snap_20250601-1_hu_4d774c2fbd25080f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="197"
data-flex-basis="473px"
>&lt;/p>
&lt;p>附上完成这个应用的完整交互过程&lt;/p>
&lt;blockquote>
&lt;p>请帮我开发一个简单的小程序，获取github上当日最热门的5个repo的介绍，界面重点突出，保证视觉效果&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CodeBuddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">用户需要一个小程序来展示GitHub上当日最热门的5个仓库，并且要求界面视觉效果突出。我需要进一步了解用户的需求，并收集一些信息来制定合适的计划。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">首先，我需要明确以下几点：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 小程序的平台 - 是Web应用、移动应用还是桌面应用？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 技术栈偏好 - 用户是否有特定的编程语言或框架偏好？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. &amp;#34;当日最热门&amp;#34;的定义 - 是基于星标数、fork数还是其他指标？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 视觉效果的具体要求 - 用户对UI/UX有什么特定的期望？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 功能需求 - 除了展示仓库介绍外，是否需要其他功能，如点击跳转到仓库页面等？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我先看看项目目录结构，了解当前的环境：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">根目录0个文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已完成
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">明白了，这是一个全新的项目。让我与用户进行需求澄清，以便更好地规划这个项目。我需要询问一些关键问题来确保我们能够开发出符合用户期望的应用。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">为了更好地帮助您开发这个展示GitHub热门仓库的应用，我需要确认一些关键细节：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **平台选择**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 您期望这个应用是网页应用（Web App）还是桌面应用（Desktop App）？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **技术栈偏好**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 您是否有特定的编程语言或框架偏好？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 比如：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Web应用：React、Vue、Angular等
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 桌面应用：Electron、Python+Qt等
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **UI/视觉需求**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 您对视觉效果有什么具体期望？比如：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 现代简约风格
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 深色/浅色主题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 卡片式布局
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 动画效果等
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **功能细节**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 除了显示仓库名称和介绍外，您是否需要显示：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 仓库星标数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 作者信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 编程语言
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 直接跳转链接
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 是否需要自动刷新功能？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请告诉我您的偏好，这样我可以制定一个更符合您需求的具体实现方案。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>平台：微信小程序；技术偏好：vue；视觉效果：现代简约；功能：包含当前建议功能&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CodeBuddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">感谢用户的回复，现在我有了更明确的需求信息：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 平台：微信小程序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 技术偏好：Vue (在微信小程序中，我们可以使用类似Vue的MVVM框架，即微信小程序原生开发方式)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 视觉效果：现代简约风格
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 功能：包含我建议的功能，即：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 显示仓库名称和介绍
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 显示仓库星标数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 显示作者信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 显示编程语言
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 提供直接跳转链接
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我可以制定一个更具体的实施计划。微信小程序开发需要使用微信开发者工具，并且需要调用GitHub API来获取热门仓库信息。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">感谢您的回复！基于您提供的信息，我们将开发一个**微信小程序**，使用**类Vue的开发方式**，采用**现代简约**的视觉风格，展示GitHub当日最热门的5个仓库。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">还有几个技术细节需要确认：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **GitHub API 访问方式**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 微信小程序对跨域请求有限制，我们需要考虑如何调用GitHub API
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 选项1：使用云函数作为中间层（推荐，更安全且避免跨域问题）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 选项2：直接在小程序中调用API（可能面临跨域限制）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **热门仓库的定义**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- GitHub API提供多种排序方式，您希望基于哪种指标来定义&amp;#34;热门&amp;#34;？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 当日新增星标数最多
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 总星标数最多
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 当日新建且受关注度高的
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **刷新机制**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 是否需要下拉刷新功能？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 是否需要定时自动刷新（如每小时更新一次）？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些信息将帮助我设计一个更符合您期望的小程序方案。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>github API使用云函数，热门指标：当日新增星标最多；启动App时进行刷新即可&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;span class="lnt">281
&lt;/span>&lt;span class="lnt">282
&lt;/span>&lt;span class="lnt">283
&lt;/span>&lt;span class="lnt">284
&lt;/span>&lt;span class="lnt">285
&lt;/span>&lt;span class="lnt">286
&lt;/span>&lt;span class="lnt">287
&lt;/span>&lt;span class="lnt">288
&lt;/span>&lt;span class="lnt">289
&lt;/span>&lt;span class="lnt">290
&lt;/span>&lt;span class="lnt">291
&lt;/span>&lt;span class="lnt">292
&lt;/span>&lt;span class="lnt">293
&lt;/span>&lt;span class="lnt">294
&lt;/span>&lt;span class="lnt">295
&lt;/span>&lt;span class="lnt">296
&lt;/span>&lt;span class="lnt">297
&lt;/span>&lt;span class="lnt">298
&lt;/span>&lt;span class="lnt">299
&lt;/span>&lt;span class="lnt">300
&lt;/span>&lt;span class="lnt">301
&lt;/span>&lt;span class="lnt">302
&lt;/span>&lt;span class="lnt">303
&lt;/span>&lt;span class="lnt">304
&lt;/span>&lt;span class="lnt">305
&lt;/span>&lt;span class="lnt">306
&lt;/span>&lt;span class="lnt">307
&lt;/span>&lt;span class="lnt">308
&lt;/span>&lt;span class="lnt">309
&lt;/span>&lt;span class="lnt">310
&lt;/span>&lt;span class="lnt">311
&lt;/span>&lt;span class="lnt">312
&lt;/span>&lt;span class="lnt">313
&lt;/span>&lt;span class="lnt">314
&lt;/span>&lt;span class="lnt">315
&lt;/span>&lt;span class="lnt">316
&lt;/span>&lt;span class="lnt">317
&lt;/span>&lt;span class="lnt">318
&lt;/span>&lt;span class="lnt">319
&lt;/span>&lt;span class="lnt">320
&lt;/span>&lt;span class="lnt">321
&lt;/span>&lt;span class="lnt">322
&lt;/span>&lt;span class="lnt">323
&lt;/span>&lt;span class="lnt">324
&lt;/span>&lt;span class="lnt">325
&lt;/span>&lt;span class="lnt">326
&lt;/span>&lt;span class="lnt">327
&lt;/span>&lt;span class="lnt">328
&lt;/span>&lt;span class="lnt">329
&lt;/span>&lt;span class="lnt">330
&lt;/span>&lt;span class="lnt">331
&lt;/span>&lt;span class="lnt">332
&lt;/span>&lt;span class="lnt">333
&lt;/span>&lt;span class="lnt">334
&lt;/span>&lt;span class="lnt">335
&lt;/span>&lt;span class="lnt">336
&lt;/span>&lt;span class="lnt">337
&lt;/span>&lt;span class="lnt">338
&lt;/span>&lt;span class="lnt">339
&lt;/span>&lt;span class="lnt">340
&lt;/span>&lt;span class="lnt">341
&lt;/span>&lt;span class="lnt">342
&lt;/span>&lt;span class="lnt">343
&lt;/span>&lt;span class="lnt">344
&lt;/span>&lt;span class="lnt">345
&lt;/span>&lt;span class="lnt">346
&lt;/span>&lt;span class="lnt">347
&lt;/span>&lt;span class="lnt">348
&lt;/span>&lt;span class="lnt">349
&lt;/span>&lt;span class="lnt">350
&lt;/span>&lt;span class="lnt">351
&lt;/span>&lt;span class="lnt">352
&lt;/span>&lt;span class="lnt">353
&lt;/span>&lt;span class="lnt">354
&lt;/span>&lt;span class="lnt">355
&lt;/span>&lt;span class="lnt">356
&lt;/span>&lt;span class="lnt">357
&lt;/span>&lt;span class="lnt">358
&lt;/span>&lt;span class="lnt">359
&lt;/span>&lt;span class="lnt">360
&lt;/span>&lt;span class="lnt">361
&lt;/span>&lt;span class="lnt">362
&lt;/span>&lt;span class="lnt">363
&lt;/span>&lt;span class="lnt">364
&lt;/span>&lt;span class="lnt">365
&lt;/span>&lt;span class="lnt">366
&lt;/span>&lt;span class="lnt">367
&lt;/span>&lt;span class="lnt">368
&lt;/span>&lt;span class="lnt">369
&lt;/span>&lt;span class="lnt">370
&lt;/span>&lt;span class="lnt">371
&lt;/span>&lt;span class="lnt">372
&lt;/span>&lt;span class="lnt">373
&lt;/span>&lt;span class="lnt">374
&lt;/span>&lt;span class="lnt">375
&lt;/span>&lt;span class="lnt">376
&lt;/span>&lt;span class="lnt">377
&lt;/span>&lt;span class="lnt">378
&lt;/span>&lt;span class="lnt">379
&lt;/span>&lt;span class="lnt">380
&lt;/span>&lt;span class="lnt">381
&lt;/span>&lt;span class="lnt">382
&lt;/span>&lt;span class="lnt">383
&lt;/span>&lt;span class="lnt">384
&lt;/span>&lt;span class="lnt">385
&lt;/span>&lt;span class="lnt">386
&lt;/span>&lt;span class="lnt">387
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CodeBuddy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">非常感谢用户的进一步澄清。现在我有了完整的需求信息：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 平台：微信小程序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 技术偏好：Vue风格的微信小程序开发
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 视觉效果：现代简约风格
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. GitHub API访问方式：使用云函数作为中间层
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 热门仓库定义：当日新增星标数最多
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. 刷新机制：启动App时进行刷新
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">基于这些信息，我可以制定一个详细的实施计划，包括项目结构、主要功能模块、UI设计思路以及开发步骤。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># GitHub热门仓库微信小程序开发计划
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**项目概述**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">开发一个微信小程序，展示GitHub当日新增星标数最多的5个仓库，采用现代简约的UI设计，使用云函数调用GitHub API。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**技术栈**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 前端：微信小程序原生开发（WXML, WXSS, JS）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 后端：微信云开发（云函数）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- API：GitHub REST API
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**项目结构**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">`├── miniprogram/ # 小程序前端代码 │ ├── pages/ # 页面文件 │ │ ├── index/ # 主页面 │ │ └── detail/ # 详情页面（可选） │ ├── components/ # 自定义组件 │ │ └── repo-card/ # 仓库卡片组件 │ ├── images/ # 图标和图片资源 │ ├── styles/ # 公共样式 │ └── utils/ # 工具函数 └── cloudfunctions/ # 云函数 └── getHotRepos/ # 获取热门仓库的云函数`
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**功能模块**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**1. 云函数模块**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建`getHotRepos`云函数，负责：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 调用GitHub API获取当日新增星标最多的仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 数据处理和过滤，返回前5个仓库的详细信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 处理API请求限制和错误情况
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**2. 前端展示模块**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 主页面（index）：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 顶部标题栏，展示应用名称和刷新状态
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 仓库列表区域，使用卡片式布局展示5个热门仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 加载状态和错误提示
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 仓库卡片组件（repo-card）：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 仓库名称和描述
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 作者信息和头像
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 星标数（总数和今日新增）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 编程语言（带颜色标识）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 跳转按钮（可打开web-view或复制链接）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**3. 数据交互模块**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 应用启动时自动调用云函数获取数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现下拉刷新功能（可选）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 数据缓存机制，减少不必要的API调用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**UI设计思路**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配色方案：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 主色调：GitHub深蓝色 (#0366d6)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 背景色：浅灰色或白色 (#f6f8fa)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 强调色：GitHub绿色 (#2ea44f)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 卡片设计：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 圆角矩形卡片
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 适当的阴影效果
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 信息层次分明
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 动效：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 加载动画
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 卡片点击反馈
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 平滑的列表滚动效果
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**开发步骤**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **项目初始化**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建微信小程序项目
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配置云开发环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **云函数开发**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 编写获取GitHub热门仓库的云函数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 测试API调用和数据处理
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **前端页面开发**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 设计并实现主页面布局
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 开发仓库卡片组件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现数据加载和展示逻辑
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **样式优化**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 应用现代简约风格
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 优化视觉效果和交互体验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. **功能测试与优化**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 测试数据加载和展示
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 优化性能和用户体验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. **发布与部署**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配置小程序基本信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 提交审核并发布
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**注意事项**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- GitHub API有请求频率限制，需要合理设计缓存策略
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 微信小程序对网络请求和页面大小有限制，需注意性能优化
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 确保UI在不同尺寸的设备上都有良好的展示效果
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">根据用户提供的开发计划，我需要开发一个微信小程序，展示GitHub当日新增星标数最多的5个仓库。这个项目需要使用微信小程序原生开发和云开发。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">首先，我需要创建项目的基本结构，包括：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 创建小程序前端代码结构
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 创建云函数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 实现主要功能模块
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我先检查当前目录是否为空，然后开始创建项目结构。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">根目录0个文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已完成
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">目录为空，我们需要从头开始创建项目结构。首先创建基本的项目目录结构，包括小程序前端代码和云函数目录。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">我们先创建以下关键文件：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. project.config.json - 小程序项目配置文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. app.json - 小程序全局配置文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. app.js - 小程序入口文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. app.wxss - 小程序全局样式文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们先创建项目配置文件。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">project.config.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+78 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们已经创建了项目配置文件，接下来需要创建小程序的基本结构。首先创建miniprogram目录，然后在其中创建app.js、app.json和app.wxss文件。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 创建miniprogram目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 创建app.js - 小程序入口文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 创建app.json - 小程序全局配置文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 创建app.wxss - 小程序全局样式文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们先创建miniprogram目录，然后创建这些基本文件。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p miniprogram
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">目录创建成功，现在让我们创建小程序的基本文件。首先创建app.json，配置小程序的全局设置，包括页面路径、窗口样式等。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/app.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+16 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在创建app.js文件，这是小程序的入口文件，用于初始化小程序。我们将在这里初始化云开发环境。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/app.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+22 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">接下来创建app.wxss文件，定义全局样式。我们将使用GitHub的配色方案，并定义一些通用样式。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/app.wxss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+80 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们需要创建主页面（index）的相关文件。我们需要在miniprogram/pages/index/目录下创建以下文件：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. index.js - 页面逻辑
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. index.wxml - 页面结构
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. index.wxss - 页面样式
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. index.json - 页面配置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">首先创建index目录，然后创建这些文件。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p miniprogram/pages/index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">目录创建成功，现在让我们创建index页面的文件。首先创建index.wxml，设计页面的基本结构，包括加载状态、仓库列表等。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/pages/index/index.wxml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+58 -2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在创建index.wxss文件，为主页面添加样式。我们将使用现代简约的设计风格，包括卡片式布局、适当的阴影效果等。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/pages/index/index.wxss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+144 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">接下来创建index.js文件，实现页面的业务逻辑，包括：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 页面加载时获取热门仓库数据
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 处理刷新操作
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 实现复制链接和打开仓库等功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/pages/index/index.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+78 -40
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在创建index.json文件，配置页面的基本设置，包括启用下拉刷新等功能。然后我们需要创建云函数getHotRepos来获取GitHub热门仓库数据。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/pages/index/index.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+7 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们需要创建一些必要的图片资源。我们需要在miniprogram目录下创建images文件夹，并准备一些基本图标，如加载图标、星标图标等。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">首先创建images目录：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p miniprogram/images
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们需要创建云函数getHotRepos。首先创建cloudfunctions目录和getHotRepos云函数目录，然后创建云函数的相关文件。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 创建cloudfunctions/getHotRepos目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 创建package.json和index.js文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p cloudfunctions/getHotRepos
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在创建云函数的package.json文件，添加必要的依赖，包括用于发起HTTP请求的axios。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cloudfunctions/getHotRepos/package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+17 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在创建云函数的主文件index.js，实现获取GitHub热门仓库的逻辑。我们将：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 使用GitHub API搜索仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 按照当日新增星标数排序
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 获取前5个仓库的详细信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 处理错误情况和API限制
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cloudfunctions/getHotRepos/index.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+144 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们需要创建一些基本的图标文件。由于我们无法直接创建二进制图片文件，我们可以创建一个sitemap.json文件，这是微信小程序必需的文件，用于配置小程序的索引规则。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">然后，我们可以创建一个README.md文件，提供项目的说明和使用指南。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">miniprogram/sitemap.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+8 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在让我们创建一个README.md文件，提供项目的详细说明、安装步骤和使用指南。这将帮助其他开发者理解和使用这个项目。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+88 -0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">已接受
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我们已经完成了项目的基本结构和核心功能的开发。让我们总结一下已完成的工作和下一步需要用户进行的操作：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 已完成的工作：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建了完整的项目结构
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了主页面的UI和逻辑
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了云函数获取GitHub热门仓库
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建了项目文档
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 用户需要进行的操作：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配置微信开发者工具和AppID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 开通云开发环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配置GitHub Token
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 上传和部署云函数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 在images目录中添加必要的图标文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我使用attempt_completion工具来总结项目的完成状态和后续步骤。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># GitHub热门仓库小程序开发完成
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**已完成的开发工作**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **项目结构搭建**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建了完整的微信小程序项目结构
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 配置了必要的项目文件（project.config.json, app.json等）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建了云函数目录结构
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **前端开发**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了主页面（index）的完整功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 设计了现代简约风格的UI界面
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了下拉刷新等交互功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **后端开发**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了getHotRepos云函数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 集成了GitHub API的调用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 实现了数据处理和错误处理
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **文档编写**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 创建了详细的README.md文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 提供了完整的安装和使用说明
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**后续步骤**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">要运行这个项目，您需要：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **环境配置**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 使用微信开发者工具打开项目
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 在project.config.json中配置您的AppID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 开通云开发并创建云环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 在app.js中配置云环境ID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **资源准备**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 在miniprogram/images/目录下添加必要的图标：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- loading.gif（加载动画）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- star.png（星标图标）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **云函数部署**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 进入cloudfunctions/getHotRepos目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 安装依赖：npm install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 在云开发控制台中配置GitHub Token（可选）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 上传并部署云函数
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **运行测试**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 编译运行项目
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 测试数据加载功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 测试下拉刷新功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 测试仓库链接复制功能
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">**注意事项**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 请确保正确配置了所有必要的环境变量和配置项
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 建议配置GitHub Token以避免API限制
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 首次运行时需要等待云函数部署完成
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 如遇到问题，请查看README.md中的详细说明
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">项目源码已经准备就绪，您可以按照上述步骤开始使用和测试了。如果有任何问题，欢迎参考README.md文件或提出问题。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>提示词工程权威指南：赋能软件测试的艺术与科学</title><link>https://chengxiaqiucao.github.io/post/080-%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B/</link><pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/080-%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B/</guid><description>&lt;p>在人工智能（AI）和大型语言模型（LLM）浪潮席卷全球的今天，软件测试领域正迎来一场深刻的变革。传统的测试方法正在与前沿的AI技术相融合，而**提示词工程（Prompt Engineering）**正是驾驭这场变革的核心技能。本指南将深入探讨提示词工程的理论、实践与高级技巧，并提供一系列面向软件测试岗位的具体案例，旨在帮助测试工程师和团队有效利用AI提升测试效率、覆盖率和深度。&lt;/p>
&lt;hr>
&lt;h3 id="第一章初识提示词工程与ai高效对话的艺术">第一章：初识提示词工程——与AI高效对话的艺术
&lt;/h3>&lt;h4 id="11-什么是提示词工程">1.1 什么是提示词工程？
&lt;/h4>&lt;p>&lt;strong>提示词工程&lt;/strong>是一门旨在设计、构建和优化输入文本（即“提示词”）的学科，其目的是引导大型语言模型（LLM）如GPT-4、Claude等，生成我们期望的、高质量且相关的输出。如果说LLM是一个强大的、拥有海量知识的引擎，那么提示词就是控制这个引擎方向盘和油门。&lt;/p>
&lt;p>对于软件测试而言，提示词工程不仅仅是“向AI提问”，它是一种&lt;strong>战略性的沟通方式&lt;/strong>。通过精心设计的提示词，测试人员可以驱使AI完成一系列复杂的测试任务，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>生成测试用例&lt;/strong>：基于需求文档、用户故事或代码片段，自动创建功能、边界、异常等各类测试用例。&lt;/li>
&lt;li>&lt;strong>创建测试数据&lt;/strong>：生成多样化、符合特定格式和业务规则的测试数据。&lt;/li>
&lt;li>&lt;strong>编写自动化脚本&lt;/strong>：辅助编写或直接生成Selenium、Cypress、Playwright等框架的自动化测试脚本。&lt;/li>
&lt;li>&lt;strong>分析测试结果&lt;/strong>：对大量的测试日志和报告进行摘要、分类和根本原因分析。&lt;/li>
&lt;li>&lt;strong>模拟用户行为&lt;/strong>：创建符合特定用户画像的交互场景，用于用户验收测试（UAT）或探索性测试。&lt;/li>
&lt;/ul>
&lt;p>掌握提示词工程，意味着测试工程师可以将繁琐、重复性的工作交由AI处理，从而将更多精力投入到更具创造性和战略性的测试活动中。&lt;/p>
&lt;h4 id="12-核心理念清晰具体有上下文">1.2 核心理念：清晰、具体、有上下文
&lt;/h4>&lt;p>成功的提示词工程遵循一个核心原则：&lt;strong>Garbage In, Garbage Out (GIGO)&lt;/strong>。你提供给AI的信息质量直接决定了其输出的质量。因此，一个优秀的提示词通常具备以下特点：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>清晰明确 (Clear &amp;amp; Specific)&lt;/strong>：避免使用模糊、笼统的语言。直接告诉AI你想要什么。&lt;/li>
&lt;li>&lt;strong>提供上下文 (Contextual)&lt;/strong>：为AI提供充足的背景信息，如被测功能描述、相关代码、用户画像、业务规则等。&lt;/li>
&lt;li>&lt;strong>指定角色 (Role Assignment)&lt;/strong>：让AI扮演一个特定的角色，例如“你是一位资深的软件测试专家”，这有助于模型以更专业的视角和口吻进行回应。&lt;/li>
&lt;li>&lt;strong>明确输出格式 (Format Specification)&lt;/strong>：清晰地定义你希望得到的输出格式，如JSON、CSV、Markdown表格、项目列表等。&lt;/li>
&lt;li>&lt;strong>迭代优化 (Iterative Refinement)&lt;/strong>：很少有提示词能一次就达到完美。准备好根据AI的反馈进行多次尝试和调整。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="第二章提示词工程术语宝典">第二章：提示词工程术语宝典
&lt;/h3>&lt;p>为了更好地理解和应用提示词工程，熟悉以下关键术语至关重要。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>术语 (Term)&lt;/strong>&lt;/td>
&lt;td>&lt;strong>中文解释&lt;/strong>&lt;/td>
&lt;td>&lt;strong>说明&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Prompt&lt;/strong>&lt;/td>
&lt;td>提示词&lt;/td>
&lt;td>用户提供给LLM的输入文本，用于引导其生成回应。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Zero-shot Prompting&lt;/strong>&lt;/td>
&lt;td>零样本提示&lt;/td>
&lt;td>在不提供任何示例的情况下，直接要求LLM完成任务。适用于模型已经熟练掌握的任务。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Few-shot Prompting&lt;/strong>&lt;/td>
&lt;td>少样本提示&lt;/td>
&lt;td>在提示词中提供少量（通常是1-5个）示例，向LLM展示期望的输入输出格式和风格。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Chain-of-Thought (CoT) Prompting&lt;/strong>&lt;/td>
&lt;td>思维链提示&lt;/td>
&lt;td>指导LLM在给出最终答案前，先进行一步一步的逻辑推理。通过加入“让我们一步一步地思考”等短语来触发。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Role Prompting / Persona&lt;/strong>&lt;/td>
&lt;td>角色提示/人设&lt;/td>
&lt;td>为LLM设定一个特定的角色或身份（如“资深安全测试工程师”），以影响其回应的风格、口吻和专业深度。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Context Window&lt;/strong>&lt;/td>
&lt;td>上下文窗口&lt;/td>
&lt;td>LLM在一次对话中能够记住和处理的信息量（以token计算）。超出此窗口的信息将被遗忘。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Token&lt;/strong>&lt;/td>
&lt;td>令牌&lt;/td>
&lt;td>LLM处理文本的基本单位，可以是一个单词、一个字符或一个词根。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Hallucination&lt;/strong>&lt;/td>
&lt;td>幻觉&lt;/td>
&lt;td>LLM生成看似合理但实际上是虚假或与事实不符的信息的现象。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Temperature&lt;/strong>&lt;/td>
&lt;td>温度参数&lt;/td>
&lt;td>一个控制输出随机性的参数（通常在0到1之间）。较低的温度使输出更具确定性和一致性，较高的温度则更具创造性和多样性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Self-Consistency&lt;/strong>&lt;/td>
&lt;td>自我一致性&lt;/td>
&lt;td>一种高级技术，通过多次生成（使用较高的温度）并对结果进行“投票”，选出最一致的答案，以提高复杂推理任务的准确性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ReAct (Reasoning and Acting)&lt;/strong>&lt;/td>
&lt;td>推理与行动&lt;/td>
&lt;td>一种高级框架，让LLM不仅能进行推理，还能执行某些“行动”（如调用外部API、执行代码），并将行动结果融入下一步的推理中。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Delimiter&lt;/strong>&lt;/td>
&lt;td>分隔符&lt;/td>
&lt;td>使用特殊字符或标签（如```, ###, &amp;lt;tag&amp;gt;）来清晰地分隔提示词的不同部分（如指令、上下文、示例）。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="第三章软件测试中的提示词工程实践">第三章：软件测试中的提示词工程实践
&lt;/h3>&lt;p>本章将通过具体的案例，展示如何在软件测试的各个阶段应用提示词工程。&lt;/p>
&lt;h4 id="31-案例一基于用户故事生成测试用例-功能测试">3.1 案例一：基于用户故事生成测试用例 (功能测试)
&lt;/h4>&lt;p>假设我们有一个电商平台的&lt;strong>用户故事&lt;/strong>：“作为一个已登录用户，我希望能够将商品添加到购物车中，以便稍后一次性结算。”&lt;/p>
&lt;p>&lt;strong>一个糟糕的提示词 👎:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>为添加购物车功能写测试用例。&lt;/p>&lt;/blockquote>
&lt;p>这个提示词过于模糊，没有提供任何上下文，AI可能会生成一些非常通用的、价值不高的用例。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用Few-shot和角色提示) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 指令
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你是一位经验丰富的电商软件测试专家。请根据以下用户故事和业务规则，为“添加商品到购物车”功能生成一套全面的功能测试用例。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 角色
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 你非常注重细节，能够考虑到各种边界情况和异常场景。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 你生成的测试用例应包含：用例ID、测试标题、前置条件、测试步骤、预期结果和用例类型（正面/负面）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 输出格式应为Markdown表格。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 上下文：用户故事
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">“作为一个已登录用户，我希望能够将商品添加到购物车中，以便稍后一次性结算。”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 上下文：业务规则
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 用户必须是登录状态才能添加商品。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 购物车最多可以容纳50件不同的商品。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 单个商品的最大购买数量为99。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 已下架或库存为0的商品不能添加到购物车。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 添加成功后，页面右上角的购物车图标应实时更新商品数量。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 示例 (Few-shot)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">以下是一个参考示例：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用例ID | 测试标题 | 前置条件 | 测试步骤 | 预期结果 | 用例类型 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| :--- | :--- | :--- | :--- | :--- | :--- |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| TC-CART-001 | 验证登录用户可以成功添加一件商品到购物车 | 用户已登录；购物车为空 | 1. 浏览到一个有库存的商品详情页。&amp;lt;br&amp;gt;2. 点击“添加到购物车”按钮。 | 1. 页面提示“商品已成功添加到购物车”。&amp;lt;br&amp;gt;2. 购物车图标数量更新为1。 | 正面 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在，请基于以上信息，为该功能生成至少10个详细的测试用例，覆盖正面、负面和边界场景。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AI可能的输出:&lt;/p>
&lt;p>AI将会遵循指令，以指定的Markdown表格格式，生成包括验证未登录用户、添加商品达到上限、添加无库存商品、验证数量输入边界值（0, 1, 99, 100）等一系列高质量的测试用例。&lt;/p>
&lt;h4 id="32-案例二生成特定格式的测试数据-数据驱动测试">3.2 案例二：生成特定格式的测试数据 (数据驱动测试)
&lt;/h4>&lt;p>在进行数据驱动测试时，我们常常需要大量符合特定格式和规则的数据。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：测试一个用户注册表单，该表单对用户名、密码和邮箱格式有特定要求。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用指令和格式规范) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">你是一个测试数据生成器。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">请为用户注册功能生成&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">组测试数据，并以&lt;/span>&lt;span class="n">CSV格式输出&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 数据要求
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">数据应包含三列：&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 列定义和规则
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="err">个字符。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">只能包含小写字母和数字。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含有效和无效的用户名（例如，过短、过长、包含特殊字符）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">个字符。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（&lt;/span>&lt;span class="o">!@&lt;/span>&lt;span class="c1">#$%^&amp;amp;*）。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含符合规则的强密码和不符合规则的弱密码。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是有效的电子邮件格式。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含一些常见的邮箱提供商（如&lt;/span>&lt;span class="n">gmail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outlook&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yahoo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="err">）以及一些格式无效的邮箱（例如，缺少&lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="err">符号，域名无效）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 输出格式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">请严格按照以下&lt;/span>&lt;span class="n">CSV格式输出&lt;/span>&lt;span class="err">，包含表头：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">```&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>AI可能的输出:&lt;/strong>
AI将生成一个CSV格式的文本块，包含20行数据，其中混合了有效的和刻意构造的无效数据，可以直接用于自动化测试脚本或手动测试。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csv" data-lang="csv">&lt;span class="line">&lt;span class="cl">&lt;span class="s">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">email&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">validuser1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">ValidPass1!&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user1@gmail.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">short&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">WeakPass1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user2@outlook.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">toolongusername123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">AnotherGoodP@ss&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user3@yahoo.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">invalid-user&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">Weak1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">invalid-email&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">user.123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">StrongerP@ssword123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user4@gmail.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">... (and so on)&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="33-案例三辅助编写自动化测试脚本-测试自动化">3.3 案例三：辅助编写自动化测试脚本 (测试自动化)
&lt;/h4>&lt;p>对于测试自动化工程师来说，AI可以成为一个强大的编程助手。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：需要为前面提到的“添加购物车”功能编写一个使用Selenium和Python的自动化测试脚本。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用思维链和代码生成) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 角色
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你是一名资深的自动化测试工程师，精通Python和Selenium WebDriver。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请为“验证登录用户可以成功添加一件商品到购物车”这个测试场景，编写一个完整的、可执行的Python Selenium自动化测试脚本。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 指令与思考过程 (Chain-of-Thought)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们一步一步地完成这个任务：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **设置环境**：导入必要的Selenium库，初始化WebDriver（请使用Chrome浏览器），并设置隐式等待。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **登录操作**：首先，编写一个函数`login(username, password)`，导航到登录页面，输入用户名和密码，然后点击登录按钮。请使用ID选择器定位元素。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **导航到商品页**：登录后，导航到一个具体的商品页面。假设商品页面的URL是 &amp;#34;[http://example.com/product/123](http://example.com/product/123)&amp;#34;。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **执行添加操作**：定位“添加到购物车”按钮（假设其ID为`add-to-cart-button`）并点击。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. **断言验证**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 添加一个显式等待，等待成功提示信息出现（假设其CSS选择器为`.success-message`）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 获取该提示信息的文本，并断言其内容为“商品已成功添加到购物车”。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 获取购物车图标旁边的数量元素（假设其ID为`cart-item-count`）的文本，并断言其值为 &amp;#34;1&amp;#34;。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. **清理**：最后，关闭浏览器`driver.quit()`。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. **代码结构**：请将所有操作封装在一个主函数或测试类中，并添加注释来解释关键步骤。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 请输出完整的Python代码。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AI可能的输出:&lt;/p>
&lt;p>AI会根据这个详细的、分步的指令，生成一个结构清晰、注释完整、包含所有必要操作和断言的Python Selenium脚本。这种方式远比“给我写个Selenium脚本”这样的简单请求要高效和准确得多。&lt;/p>
&lt;hr>
&lt;h3 id="第四章高级提示词工程技巧">第四章：高级提示词工程技巧
&lt;/h3>&lt;p>当你掌握了基础后，可以运用更高级的技巧来应对复杂的测试挑战。&lt;/p>
&lt;h4 id="41-思维链-chain-of-thought-的深化应用">4.1 思维链 (Chain-of-Thought) 的深化应用
&lt;/h4>&lt;p>对于需要复杂逻辑推理的任务，如&lt;strong>根本原因分析 (Root Cause Analysis)&lt;/strong>，深化CoT的应用至关重要。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：一个API测试失败，返回了500错误，你需要分析可能的原因。&lt;/p>
&lt;p>&lt;strong>提示词:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">你是一名顶级的站点可靠性工程师（&lt;/span>&lt;span class="n">SRE&lt;/span>&lt;span class="err">），正在诊断一个&lt;/span>&lt;span class="n">API故障&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 上下文
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">API端点&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">profile&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">问题&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">在高并发负载测试期间，该端点偶尔返回&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">内部服务器错误。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">日志片段&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">```&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ERROR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exhausted&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Could&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">not&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">the&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Caused&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">sql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SQLTransientConnectionException&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HikariPool&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">not&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">out&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">after&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30000&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请使用“思维链”方法，一步一步地分析这个问题的潜在根本原因，并为每个原因提出具体的调查步骤和解决方案建议。请像专家一样思考，从多个层面（应用层、数据库层、配置层）进行分析。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">思考开始：&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">日志分析&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">日志明确指出了“&lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exhausted&lt;/span>&lt;span class="err">”（数据库连接池耗尽）。这是最直接的线索。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">为什么连接池会耗尽&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">连接未被释放。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">应用代码中是否存在某个逻辑分支，在查询数据库后没有正确关闭连接（&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">close&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">）？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">连接池太小。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">HikariCP&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">的&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">maximumPoolSize&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">配置是否对于当前的并发负载来说过低？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查询本身过慢。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">是否存在慢查询，导致连接被长时间占用，在高并发下迅速耗尽了连接池？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库性能瓶颈。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库服务器本身是否达到了&lt;/span>&lt;span class="n">CPU&lt;/span>&lt;span class="err">、内存或&lt;/span>&lt;span class="n">IO的瓶颈&lt;/span>&lt;span class="err">，导致查询响应变慢，从而间接导致连接池耗尽？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">如何调查&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">审查处理&lt;/span>&lt;span class="o">`/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">profile&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">请求的所有代码路径，特别是异常处理块，确保&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">finally&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">语句中正确关闭了连接。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">检查应用的配置文件（如&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">或&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">yml&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">），查看&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">spring&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">datasource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hikari&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">maximum&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">的值。监控连接池的实时使用情况。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">开启数据库的慢查询日志，分析在问题发生时间点是否有慢查询记录。对该&lt;/span>&lt;span class="n">API涉及的SQL语句进行&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ANALYZE&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">检查数据库服务器的监控仪表盘（&lt;/span>&lt;span class="n">CPU使用率&lt;/span>&lt;span class="err">、内存、磁盘&lt;/span>&lt;span class="n">I&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">O&lt;/span>&lt;span class="err">、活跃连接数）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">解决方案建议&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请根据以上的思维链，整理成一份正式的故障分析报告。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种CoT提示词不仅引导AI得出结论，更重要的是强迫它展示一个结构化的、逻辑清晰的分析过程，这对于复杂的诊断任务非常有价值。&lt;/p>
&lt;h4 id="42-自我一致性-self-consistency-用于探索性测试">4.2 自我一致性 (Self-Consistency) 用于探索性测试
&lt;/h4>&lt;p>在需要创造性和发散性思维的&lt;strong>探索性测试&lt;/strong>中，可以利用&lt;code>Self-Consistency&lt;/code>来生成更多样化的测试想法。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：为一个新的“在线文档协作”功能设计探索性测试的思路。&lt;/p>
&lt;p>&lt;strong>提示词:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">你是一个极具创造力和破坏性的软件测试员，擅长找到用户意想不到的&lt;/span>&lt;span class="n">Bug&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请为“在线文档实时协作”功能，生成&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="err">个不同的、创造性的探索性测试思路（&lt;/span>&lt;span class="n">charter&lt;/span>&lt;span class="err">）。我需要的是多样化的、非常规的想法。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 指令
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">我将多次运行此提示。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请你思考并生成&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="err">个测试思路，专注于并发操作、网络延迟、数据冲突和非常规用户交互。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请以项目列表的形式输出。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">你可以将模型的&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">temperature&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">参数调高，例如&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="err">，然后多次运行这个提示词&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>运行1的可能输出:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>模拟断网重连&lt;/strong>: 两个用户同时编辑，其中一个用户突然断网，进行大量修改后再重连，观察数据如何合并。&lt;/li>
&lt;li>&lt;strong>疯狂光标移动&lt;/strong>: 多个用户在同一行疯狂地输入、删除、移动光标，测试渲染性能和同步的准确性。&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>运行2的可能输出:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>权限动态变更&lt;/strong>: 当一个用户正在编辑时，管理员突然将其权限从“可编辑”降为“只读”，观察其客户端的行为。&lt;/li>
&lt;li>&lt;strong>混合富文本与纯文本&lt;/strong>: 一个用户粘贴复杂的富文本（带格式、图片），另一个用户同时在附近输入纯文本，检查格式是否错乱。&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>通过多次生成并综合所有独特的想法，测试人员可以获得一个远比单次请求更丰富、更全面的探索性测试清单。&lt;/p>
&lt;hr>
&lt;h3 id="第五章总结与展望">第五章：总结与展望
&lt;/h3>&lt;p>提示词工程正迅速成为软件测试工程师的核心竞争力之一。它不是要取代测试人员的思考，而是要增强他们的能力，将他们从重复劳动中解放出来，去完成更需要智慧和洞察力的任务。&lt;/p>
&lt;p>&lt;strong>成功的关键在于实践&lt;/strong>。从今天起，尝试将本文介绍的技巧应用到你的日常工作中。从小任务开始，比如用AI帮你润色缺陷报告，或者为你正在测试的功能头脑风暴一些边缘案例。随着你对模型“脾气”的了解加深，你将能够构建出越来越强大的提示词，真正实现与AI的高效协同，将软件测试的效率和质量提升到一个全新的高度。&lt;/p>
&lt;p>未来的软件测试，将是人类智慧与人工智能深度融合的时代，而提示词工程，正是开启这扇大门的钥匙。&lt;/p>
&lt;hr></description></item><item><title>高效使用AI大模型：测试工程师提示词编写框架</title><link>https://chengxiaqiucao.github.io/post/079-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8F%90%E7%A4%BA%E8%AF%8D/</link><pubDate>Wed, 16 Apr 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/079-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8F%90%E7%A4%BA%E8%AF%8D/</guid><description>&lt;h2 id="前言">前言
&lt;/h2>&lt;p>随着AI大模型在软件测试领域的广泛应用，提示词工程（Prompt Engineering）已成为测试工程师提升效率的关键技能。通过精准的提示词设计，我们可快速生成测试用例、优化测试场景、生成自动化脚本、以至实现智能化的测试覆盖。&lt;/p>
&lt;p>那么如何更有效地在利用大模型时，让大模型更高效地协助我们得到期望的结果，好的提示词能让我们事半功倍。下文就总结下，对测试工程师而言，怎么编写出好的提示词框架&lt;/p>
&lt;h2 id="拆分复杂需求准确描述问题">拆分复杂需求，准确描述问题
&lt;/h2>&lt;p>AI大模型的效果高度依赖输入提示词的清晰度，也就是尽可能减少二义性。所以在输入提示词时，应尽可能将复杂任务拆解为具体需求，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>场景化的描述&lt;/strong>：明确测试目标（如“生成登录功能的边界值测试用例”），而非模糊指令（如“帮我写测试用例”）。&lt;/li>
&lt;li>&lt;strong>约束条件&lt;/strong>：添加格式要求（如“以表格形式输出”）、优先级（如“仅包含高风险场景”）或技术限制（如“不涉及第三方接口”）。&lt;/li>
&lt;li>&lt;strong>示例引导&lt;/strong>：可以提供示例数据或模板，帮助模型理解期望的输出结构。&lt;/li>
&lt;/ul>
&lt;h2 id="利用结构化框架提升输出稳定性">利用结构化框架，提升输出稳定性
&lt;/h2>&lt;p>通过定义结构化的提示词框架，可以约束模型行为，并减少随机性干扰：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>角色设定&lt;/strong>：指定模型扮演专业角色（如“你是一位资深测试专家，擅长设计高覆盖率的测试场景”）。&lt;/li>
&lt;li>&lt;strong>分步指令&lt;/strong>：将复杂任务分解为多步骤（如“第一步：分析需求文档；第二步：识别关键路径；第三步：生成用例”）。&lt;/li>
&lt;li>&lt;strong>思维链（Chain-of-Thought）&lt;/strong>：虽然目前很多模型都提供了深度思考能力，但通过提示词引导模型的分析，可以简化模型的思考推理方向。例如“请先分析用户操作流程，再重点针对异常场景生成测试用例”。&lt;/li>
&lt;/ol>
&lt;h2 id="渐进式的迭代优化持续改进提示词">渐进式的迭代优化，持续改进提示词
&lt;/h2>&lt;p>大模型通常会保留对话上下文，针对每次反馈的结果，应不断校正，逐渐向最佳输出靠拢&lt;/p>
&lt;ul>
&lt;li>&lt;strong>反馈修正&lt;/strong>：对模型输出中的错误及时指正（如“第2条用例未覆盖超时场景，请补充”），并要求重新生成。&lt;/li>
&lt;li>&lt;strong>参数调整&lt;/strong>：控制输出长度（如“请用50字以内描述”）、温度系数（Temperature）以平衡模型的创造性与准确性。&lt;/li>
&lt;li>&lt;strong>交叉比对&lt;/strong>：目前开放大模型有很多，能力不一，对于分析的结果差别也比较大。可以综合判断，提取最优结果。&lt;/li>
&lt;/ul>
&lt;p>常见的一些校正场景：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>问题&lt;/strong>&lt;/th>
&lt;th>&lt;strong>原因&lt;/strong>&lt;/th>
&lt;th>&lt;strong>改进方法&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>输出过于宽泛&lt;/td>
&lt;td>需求描述模糊&lt;/td>
&lt;td>添加具体场景、格式、优先级约束&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>结果重复或冗余&lt;/td>
&lt;td>未明确限制输出范围&lt;/td>
&lt;td>排除不需要的场景(如指定“仅输出未覆盖的边界值场景”)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>技术术语错误&lt;/td>
&lt;td>模型缺乏领域知识&lt;/td>
&lt;td>提供术语表或指定角色（如“金融系统测试专家”）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="案例分析">案例分析
&lt;/h2>&lt;p>基于以上原则，以我们要测试 &lt;a class="link" href="https://www.saucedemo.com" target="_blank" rel="noopener"
>https://www.saucedemo.com&lt;/a> 这个网站的购物流程为例，要用大模型帮助我们生成一系列测试用例，提示词框架可以按下面的方式设定：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">假设你是一名经验丰富的软件测试工程师，负责对电商网站 https://www.saucedemo.com/ 的核心购物流程进行端到端的功能测试。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">任务： 为以下用户场景生成详细的、高优先级的正向和反向测试用例。重点关注从商品选择到成功下单的完整流程。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">被测网站: https://www.saucedemo.com/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">测试用户凭据:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•标准用户 (Standard User): standard_user / secret_sauce
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•有问题的用户 (Problem User): problem_user / secret_sauce (用于观察特定错误行为)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">核心购物流程步骤:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 用户登录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 浏览商品列表 (Inventory Page)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 选择至少两件不同商品并添加到购物车
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 查看购物车 (Cart Page)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 在购物车页面验证商品信息（名称、数量、价格）和总价
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. 进入结账信息页面 (Checkout: Your Information)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. 填写有效的结账信息（姓、名、邮政编码）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8. 进入结账概览页面 (Checkout: Overview)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9. 在概览页面验证商品信息、总价（含税）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10.完成购买 (Checkout: Complete!)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11.验证订单成功信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">测试用例要求:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•正向测试用例: 覆盖使用标准用户成功完成购物流程的每个步骤，确保功能按预期工作。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•反向测试用例:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> •尝试在结账信息页面输入无效数据（例如，姓、名、邮编为空或格式错误）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> •尝试在购物车为空时进行结账。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> •(可选)使用 problem_user 登录，观察并记录在购物流程中可能出现的异常行为，特别是商品图片、添加购物车或结账环节。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">输出要求:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•每个测试用例应包含：用例 ID (TC_SAUCE_SHOP_XXX)、测试描述、前置条件（如已登录并添加商品）、测试步骤（清晰、可执行）、预期结果、实际结果（预留填写）、状态（预留填写）、优先级（高/中/低）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•优先生成高优先级的测试用例。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">输出格式: 请将测试用例以 Markdown 表格形式输出，包含以下列：用例 ID, 测试描述, 前置条件, 测试步骤, 预期结果, 优先级。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">约束说明:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•假设税率为 8%。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•关注 UI 元素的交互和页面跳转的正确性。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">•如果对某些特定元素的 ID 或 Class 不确定，可以使用通用的描述，例如“点击添加到购物车按钮”或“输入姓名字段”。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以上提示词比较好地对应了相关的提示词框架原则：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>明确的角色&lt;/strong>：&amp;ldquo;假设你是一名经验丰富的软件测试工程师&amp;hellip;&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>清晰的任务&lt;/strong>：&amp;ldquo;为以下用户场景生成详细的、高优先级的正向和反向测试用例。重点关注从商品选择到成功下单的完整流程&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>充分的上下文信息&lt;/strong>: 被测URL、用户信息、用例侧重点、税率假设&lt;/li>
&lt;li>&lt;strong>指定输出格式&lt;/strong>：&amp;ldquo;请将测试用例以Markdown表格形式输出，包含以下列：&lt;code>用例ID&lt;/code>, &lt;code>测试描述&lt;/code>, &lt;code>前置条件&lt;/code>, &lt;code>测试步骤&lt;/code>, &lt;code>预期结果&lt;/code>, &lt;code>优先级&lt;/code>。&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>明确的具体要求和约束&lt;/strong>：用例和输出的具体要求，&lt;/li>
&lt;li>&lt;strong>引导思考方向&lt;/strong>：使用problem_user生成异常用例&lt;/li>
&lt;/ul>
&lt;p>最终通过这样的提示词，通过Deepseek，我们会得到如下一份生成的用例：&lt;/p>
&lt;h3 id="高优先级核心购物流程测试用例">高优先级核心购物流程测试用例
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>用例ID&lt;/th>
&lt;th>测试描述&lt;/th>
&lt;th>前置条件&lt;/th>
&lt;th>测试步骤&lt;/th>
&lt;th>预期结果&lt;/th>
&lt;th>优先级&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>正向测试用例&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_001&lt;/td>
&lt;td>标准用户成功登录并进入商品列表页&lt;/td>
&lt;td>无&lt;/td>
&lt;td>1. 访问 &lt;code>https://www.saucedemo.com/&lt;/code> &lt;br>2. 输入用户名 &lt;code>standard_user&lt;/code> 和密码 &lt;code>secret_sauce&lt;/code> &lt;br>3. 点击登录按钮&lt;/td>
&lt;td>登录成功，跳转至商品列表页（Inventory Page）&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_002&lt;/td>
&lt;td>添加两件不同商品到购物车并验证数量&lt;/td>
&lt;td>用户已登录&lt;/td>
&lt;td>1. 在商品列表页选择两件不同商品，分别点击“添加到购物车”按钮 &lt;br>2. 检查购物车图标显示数量为2&lt;/td>
&lt;td>购物车图标数量更新为2，且两件商品均显示在购物车页面&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_003&lt;/td>
&lt;td>购物车页面验证商品信息和总价（不含税）&lt;/td>
&lt;td>用户已添加两件商品到购物车&lt;/td>
&lt;td>1. 点击购物车图标进入购物车页面 &lt;br>2. 核对商品名称、数量、单价 &lt;br>3. 计算总价（商品1价格 + 商品2价格）&lt;/td>
&lt;td>商品信息正确，总价显示为两件商品价格之和&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_004&lt;/td>
&lt;td>完成有效结账信息并验证含税总价&lt;/td>
&lt;td>用户已进入结账信息页面&lt;/td>
&lt;td>1. 在结账信息页面输入有效姓、名、邮编（如：John/Doe/12345） &lt;br>2. 点击“继续”按钮 &lt;br>3. 在概览页面验证总价（总价 = 商品总价 * 1.08）&lt;/td>
&lt;td>跳转至结账概览页面，总价含8%税且计算正确&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_005&lt;/td>
&lt;td>完成购买并验证订单成功信息&lt;/td>
&lt;td>用户已进入结账概览页面&lt;/td>
&lt;td>1. 点击“完成”按钮&lt;/td>
&lt;td>显示“THANK YOU FOR YOUR ORDER”成功信息，返回商品列表页&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>反向测试用例&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_006&lt;/td>
&lt;td>结账信息页面姓名为空时提交表单&lt;/td>
&lt;td>用户已进入结账信息页面&lt;/td>
&lt;td>1. 留空姓名字段，输入有效邮编（如：12345） &lt;br>2. 点击“继续”按钮&lt;/td>
&lt;td>提示“First Name is required”，阻止跳转&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_007&lt;/td>
&lt;td>结账信息页面邮编格式错误（如非数字）&lt;/td>
&lt;td>用户已进入结账信息页面&lt;/td>
&lt;td>1. 输入有效姓、名，邮编为“ABC12” &lt;br>2. 点击“继续”按钮&lt;/td>
&lt;td>提示“Postal Code is invalid”，阻止跳转&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_008&lt;/td>
&lt;td>购物车为空时尝试结账&lt;/td>
&lt;td>用户已登录且购物车为空&lt;/td>
&lt;td>1. 点击购物车图标进入购物车页面 &lt;br>2. 点击“结账”按钮&lt;/td>
&lt;td>提示“Cart is empty”或阻止跳转至结账页面&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Problem User 测试用例&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_009&lt;/td>
&lt;td>Problem User 添加商品时图片显示异常&lt;/td>
&lt;td>Problem User 已登录&lt;/td>
&lt;td>1. 浏览商品列表页 &lt;br>2. 检查商品图片是否加载正确（如：图片错位、无法显示）&lt;/td>
&lt;td>商品图片显示异常（如空白图、错误图片）&lt;/td>
&lt;td>中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC_SAUCE_SHOP_010&lt;/td>
&lt;td>Problem User 结账时总价计算错误&lt;/td>
&lt;td>Problem User 已添加商品到购物车&lt;/td>
&lt;td>1. 完成结账流程至概览页面 &lt;br>2. 验证总价是否等于商品总价 * 1.08&lt;/td>
&lt;td>总价计算错误（如未含税或计算值偏差）&lt;/td>
&lt;td>中&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="补充说明">&lt;strong>补充说明&lt;/strong>
&lt;/h4>&lt;ol>
&lt;li>&lt;strong>优先级分配&lt;/strong>：核心流程（登录、添加商品、结账）和关键异常场景（空字段、无效数据）设为高优先级。&lt;/li>
&lt;li>&lt;strong>Problem User&lt;/strong>：用于验证特定异常行为（如UI渲染错误或逻辑漏洞）。&lt;/li>
&lt;li>&lt;strong>实际结果/状态&lt;/strong>：执行时需根据实际观察填写（如“通过”、“失败”或“阻塞”）。&lt;/li>
&lt;li>&lt;strong>税率计算&lt;/strong>：假设商品总价为 &lt;code>$X&lt;/code>，含税总价应为 &lt;code>X * 1.08&lt;/code>，保留两位小数（如 &lt;code>$21.99 * 1.08 = $23.75&lt;/code>）。&lt;/li>
&lt;/ol></description></item><item><title>Mcp大流行背后的隐忧</title><link>https://chengxiaqiucao.github.io/post/076-mcp%E5%A4%A7%E6%B5%81%E8%A1%8C%E8%83%8C%E5%90%8E%E7%9A%84%E9%9A%90%E5%BF%A7/</link><pubDate>Mon, 14 Apr 2025 15:28:24 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/076-mcp%E5%A4%A7%E6%B5%81%E8%A1%8C%E8%83%8C%E5%90%8E%E7%9A%84%E9%9A%90%E5%BF%A7/</guid><description>&lt;p>过去数周间，模型上下文协议（Model Context Protocol，MCP）快速崛起为第三方数据与工具接入LLM对话系统的实际标准。互联网短时间已充斥着各类炫酷应用案例，想象空间极为广阔。但这个协议背后却也暗藏一些微妙的安全隐患与功能的局限性。&lt;/p>
&lt;h1 id="背景">背景
&lt;/h1>&lt;p>MCP的本质是构建&amp;quot;智能助手插件生态&amp;quot;的桥梁，让用户能为各种支持了MCP协议的大模型和AI客户端提供本地扩展能力，让这些基于LLM的智能界面可以通过MCP的&amp;quot;工具调用&amp;quot;执行非文本操作，MCP协议实际上是标准化了LLM和本地数据、工具的对接方式。&lt;/p>
&lt;p>比如在前文【】中，我们只是在&lt;code> Cursor&lt;/code> 中告诉大模型: &lt;em>&amp;ldquo;访问www.saucedemo.com网站，使用problem_user登录，验证该网站完整流程并记录发现的问题&amp;rdquo;&lt;/em> , Cursor 就会通过&lt;code>playwright-mcp&lt;/code> 这个 mcp server来调用&lt;code>playwright&lt;/code>框架完成浏览器的调用、访问、浏览、测试、记录问题等一系列活动，完成跟手工测试工程师类似的测试活动&lt;/p>
&lt;p>所以通过MCP，它的核心价值就是突破了原来AI大模型文字型咨询助手的角色，转变为实际的执行者角色，更能够直接操作本地的工具和数据，为大模型提供了万能插口。&lt;/p>
&lt;h1 id="潜在的隐忧">潜在的隐忧
&lt;/h1>&lt;p>但我们在看到MCP巨大潜力的同时，也要看到，MCP作为刚起步不久的一个基础协议，尚不能称为尽善尽美，要看到还有如下一些隐忧：&lt;/p>
&lt;h2 id="隐患一协议本身的安全性">&lt;strong>隐患一：协议本身的安全性&lt;/strong>
&lt;/h2>&lt;h3 id="认证机制">&lt;strong>认证机制&lt;/strong>
&lt;/h3>&lt;p>MCP的初始版本未定义认证规范，导致各MCP服务器可自行其是，从繁琐的验证到敏感数据裸奔，可谓乱象丛生。虽后续推出认证方案，但实现复杂度引发新的争议。&lt;/p>
&lt;h3 id="恶意代码本地执行风险">&lt;strong>恶意代码本地执行风险&lt;/strong>
&lt;/h3>&lt;p>协议支持通过标准输入输出运行MCP服务器，这样虽然降低使用门槛，却也为恶意代码传播提供了温床。如果技术小白执行第三方恶意MCP代码引发本地设备安全故障，已成新型攻击手段。&lt;/p>
&lt;h3 id="mcp对用户输入的信任">&lt;strong>MCP对用户输入的信任&lt;/strong>
&lt;/h3>&lt;p>很多Mcp Server会直接执行用户的输入指令。当用户意图经LLM转译并对系统产生作用时，传统安全模型面临严峻挑战：用户输入指令与攻击系统的边界不再清晰。&lt;/p>
&lt;h2 id="隐患二交互设计上的限制">&lt;strong>隐患二：交互设计上的限制&lt;/strong>
&lt;/h2>&lt;p>MCP协议更多是面向LLM交互，但针对用户来说，交互方式谈不上易用、友好。&lt;/p>
&lt;h3 id="缺少针对不同等级的操作风险分级">&lt;strong>缺少针对不同等级的操作风险分级&lt;/strong>
&lt;/h3>&lt;p>很多助手工具会提供全局的操作确认机制，但针对很多无害工具养成的“自动确认”习惯，往往会导致一些严重误操作的发生，比如本地重要文件的删除、邮件误发等情况。&lt;/p>
&lt;h3 id="成本控制能力">&lt;strong>成本控制能力&lt;/strong>
&lt;/h3>&lt;p>与传统协议不同，LLM场景下依据不同token的返回量会产生数额不等的费用，而用户服务成本高度依赖MCP工具的词元效率，而目前协议中并没有对返回长度的限制以强化成本控制。&lt;/p>
&lt;h3 id="牺牲结构化数据的优势">&lt;strong>牺牲结构化数据的优势&lt;/strong>
&lt;/h3>&lt;p>为适配LLM偏好，MCP偏向采用类似人类可读的方式，如纯文本/图片/音频片段传输，而牺牲结构化数据优势。比如类似像地图、滴滴叫车等服务，需确保位置准确性、行程细节反馈、实时状态更新等需求的话，现有协议难堪重任。目前解决这类问题还需要在工具层做一些变通的额外设计&lt;/p>
&lt;hr>
&lt;h2 id="隐患三llm的安全性">&lt;strong>隐患三：LLM的安全性&lt;/strong>
&lt;/h2>&lt;p>大模型本身安全性的探讨，目前还悬而未决，而引入MCP连接更多的数据、工具让这个问题更为凸显。&lt;/p>
&lt;h3 id="mcp让提示词注入能力更强悍">&lt;strong>MCP让提示词注入能力更强悍&lt;/strong>
&lt;/h3>&lt;p>LLM 通常有两层指令：&lt;strong>系统级提示词&lt;/strong>（控制助手的行为和策略）和&lt;strong>用户级提示词&lt;/strong>（由用户提供）。通常，以前提到&lt;strong>提示词注入&lt;/strong>通常指恶意的用户输入。而MCP 模型一个相当大的漏洞是允许第三方提供的工具被信任为助手系统级提示的一部分，从而赋予它们更大权限来覆盖代理行为。&lt;/p>
&lt;h3 id="敏感数据泄露">&lt;strong>敏感数据泄露&lt;/strong>
&lt;/h3>&lt;p>除了恶意地通过恶意工具劫持外，MCP也可能让用户在无意中泄露敏感数据。即便用户严格确认每个操作，数据仍可能通过&amp;quot;合理&amp;quot;的方式外泄出去。比如你的指令：“帮我解释一下个人病历记录”，助手可能会启动一个医疗检索类的多租户MCP工具，并把个人隐私信息泄露到服务提供商。&lt;/p>
&lt;p>包括MCP Server也很容易通过伪装提示词和实际的工具实现，劫持、更改用户的意图。&lt;/p>
&lt;h2 id="隐患四打破企业中的传统数据权限控制">隐患四：&lt;strong>打破企业中的传统数据权限控制&lt;/strong>
&lt;/h2>&lt;p>与直接泄露敏感数据不同，企业在将大量内部数据通过MCP连接到LLM以后，可能会让普通员工访问或推断出无权访问到的数据。&lt;/p>
&lt;p>举例来说，如果一个企业的所有内部文档都接入LLM，员工通过助手：&lt;/p>
&lt;p>&lt;em>“根据所有我有权限访问的文档和公司的任免通知，推断尚未宣布的重大事件如裁员行动”&lt;/em>&lt;/p>
&lt;p>或者一个经理级别的人：&lt;/p>
&lt;p>&lt;em>“我看到内部wiki上有一条匿名的针对XXX的负面评价，内容是XXXX，请分析XX团队中成员的发言记录并推断最可能是谁写的这条评价”&lt;/em>&lt;/p>
&lt;h2 id="隐患五llm自身的能力局限">&lt;strong>隐患五：LLM自身的能力局限&lt;/strong>
&lt;/h2>&lt;p>对于大规模的MCP集成，LLM本身的负载能力很可能无法承受。Google推出的&lt;strong>A2A协议(Agent to Agent)&lt;/strong> 可能是解决手段，另当别论。&lt;/p>
&lt;h3 id="mcp的能力发挥依赖于被助手集成的llm">&lt;strong>MCP的能力发挥依赖于被助手集成的LLM&lt;/strong>
&lt;/h3>&lt;p>一个事实是&lt;strong>并非工具越多，数据越多，结果越准确&lt;/strong>，恰恰相反，同类的数据和工具越多，会导致最终输出的精确性越差。随着MCP Server的数量越来越多，集成的工具越来越多，AI助手的性能也将显著下降，并且请求和分析的成本也会增加。&lt;/p>
&lt;h3 id="工具实现和用户预期的落差">&lt;strong>工具实现和用户预期的落差&lt;/strong>
&lt;/h3>&lt;p>很多MCP Server在实现上其实是编写调用本地已有工具的函数方法，MCP Server的能力其实主要受这些函数方法的制约。如果用户对具体的函数实现没什么了解，只是按通常的人为沟通思路和LLM交互，很可能难以获得满意的结果。&lt;/p>
&lt;p>&lt;em>“请为我查找最近所有博客中包含AI测试相关的文章”&lt;/em>，这个指令其实需要本地MCP Server具备全文检索本地文本内容的能力，但如果集成的MCP Server仅仅包含了文件查找的功能，自然得不到相应的结果。&lt;/p>
&lt;h1 id="结论和展望">结论和展望
&lt;/h1>&lt;p>MCP的诞生顺应了AI时代的数据整合需求，其日常应用价值毋庸置疑。但我们也需要清醒认知：MCP协议还在成长期，我们在拥抱应用的同时，也需要认识到其中的风险， 将LLM与数据的结合，会放大既有风险，也催生了新型的威胁。&lt;/p>
&lt;hr>
&lt;p>本文大部分观点参考了Shrivu的博客内容 (阅读原文)&lt;/p></description></item><item><title>Google推出A2A协议</title><link>https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/</link><pubDate>Fri, 11 Apr 2025 11:36:52 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411.png" alt="Featured image of post Google推出A2A协议" />&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411.png"
width="1247"
height="429"
srcset="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411_hu_80be8e802c2c15a1.png 480w, https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411_hu_b451699b8955eab0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="290"
data-flex-basis="697px"
>&lt;/p>
&lt;blockquote>
&lt;p>4月9日，Google重磅发布了&lt;strong>A2A(Agent to Agent)&lt;/strong> 协议，为 AI Agent能力开放和标准化，又添了一把火。那么这个 &lt;strong>A2A协议&lt;/strong> 到底做什么？和之前火爆的&lt;strong>MCP Server&lt;/strong>又是什么关系？是不是会产生标准之争？ 本文我们就来了解下这个新进出炉的A2A协议，以及它的应用场景。&lt;/p>&lt;/blockquote>
&lt;h2 id="a2a与mcp">A2A与MCP
&lt;/h2>&lt;p>&lt;strong>A2A&lt;/strong>，即 Agent to Agent 协议，是由 Google刚刚推出的一个AI基础开源协议，旨在实现 AI Agent之间的通信和互操作性。通过为代理提供标准化的协作方式，即无论其底层框架或供应商如何，不同 AI Agent都能够安全地进行信息交换和协作，并可以跨各种企业平台和应用程序工作。&lt;/p>
&lt;p>这个协议提供的 Agent 和 Agent 之间的一个通用通信标准。&lt;/p>
&lt;p>它和近期大火的 &lt;strong>MCP (Model Context Protocol)&lt;/strong>（前文介绍 【】）其实并不是竞争关系。Google官方在发布声明中也重点说到，这个协议其实是针对MCP协议的补充。&lt;/p>
&lt;p>&lt;strong>MCP&lt;/strong> 是 AI 公司 Anthropic（claude母公司）去年底推出的开放协议，它旨在标准化大语言模型（LLM）与外部数据源、工具之间的交互接口。&lt;/p>
&lt;p>随着 OpenAI 等主流大模型宣布支持MCP接入，MCP目前很有潜力成为 AI 应用领域的一个基础规范，近期各种MCP Server雨后春笋般纷纷涌现，也证明这个协议得到了广泛认可。&lt;/p>
&lt;p>所谓&lt;strong>三流企业做产品、二流企业做品牌、一流企业做标准&lt;/strong>，Google 很敏锐地捕捉到了 AI Agent 应用标准拼图中，MCP之外很重要的一块。&lt;/p>
&lt;p>就是MCP定义了 LLM 和 Agent 之间的连接，可以利用 Agent 为LLM扩充能力，以后也肯定会出现类似App Store这样的Agent商店，整合各类不同的Agent。&lt;/p>
&lt;p>但对于后续大规模的的AI应用，将会集成很多Agent共同协作，这些Agent之间的交互就是目前缺失的一块拼图。A2A起到的就是这个作用。很类似于微服务系统中的服务间通信协议。&lt;/p>
&lt;h2 id="a2a的设计原则">A2A的设计原则
&lt;/h2>&lt;p>官方给出了A2A协议的设计原则：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>拥抱代理能力&lt;/strong>：A2A 致力于使代理能够以自然、非结构化的模式进行协作，即使它们不共享内存、工具和上下文。我们正在实现真正的多代理场景，而不将代理局限于单一的“工具”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>基于现有标准：&lt;/strong> 该协议建立在现有的流行标准之上，包括 HTTP、SSE、JSON-RPC，这意味着它更容易与企业日常使用的现有 IT 堆栈集成。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>默认安全&lt;/strong>：A2A 旨在支持企业级身份验证和授权，在启动时与 OpenAPI 的身份验证方案相同。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>支持长时间运行的任务：&lt;/strong> 设计 A2A 时就考虑到了灵活性，并支持各种场景，使其能够出色地完成各种任务，从快速任务到深度研究，这些任务可能需要数小时甚至数天的时间（如果人工参与）。在此过程中，A2A 可以为用户提供实时反馈、通知和状态更新。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>与模态无关：&lt;/strong> 代理世界不仅限于文本，这就是我们设计 A2A 来支持各种模态（包括音频和视频流）的原因。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="主要功能">主要功能
&lt;/h2>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412.png"
width="1036"
height="825"
srcset="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412_hu_84e49ee97b84a478.png 480w, https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412_hu_b47b550deb239991.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="125"
data-flex-basis="301px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>能力发现：&lt;/strong> 代理可以使用 JSON 格式的“代理卡”来宣传其能力，从而允许客户端代理识别能够执行任务的最佳代理并利用 A2A 与远程代理进行通信。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>任务管理：&lt;/strong> 客户端与远程代理之间的通信以任务完成为导向，代理负责执行最终用户的请求。此“任务”对象由协议定义，并具有生命周期。它可以立即完成，或者，对于长时间运行的任务，每个代理可以进行通信，以彼此保持同步，了解任务的最新完成状态。任务的输出称为“工件”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>协作：&lt;/strong> 代理可以互相发送消息来传达上下文、回复、工件或用户指令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>用户体验协商：&lt;/strong> 每条消息包含“部分”，即完整形成的内容片段，例如生成的图像。每个部分都有指定的内容类型，允许客户端和远程代理协商所需的正确格式，并明确包含对用户 UI 功能（例如 iframe、视频、Web 表单等）的协商。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>A2A、MCP、LLM之间的关系：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411-1.png"
width="1456"
height="1009"
srcset="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411-1_hu_32d1bc6b1780202c.png 480w, https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250411-1_hu_88474295bca49db5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="346px"
>&lt;/p>
&lt;h2 id="协议说明">协议说明
&lt;/h2>&lt;p>该协议目前在github开源，主要是一个json schema的格式说明文件 ( 关于 json schema 的介绍，参见【】)，具体定义可查看源文档。&lt;/p>
&lt;p>这里说明下其中包含的主要部分及其作用：&lt;/p>
&lt;h3 id="1-agentauthentication">&lt;strong>1. AgentAuthentication&lt;/strong>
&lt;/h3>&lt;p>这部分定义了支持的认证方式，例如 OAuth 或 API 密钥。&lt;/p>
&lt;h3 id="2-agentcapabilities">&lt;strong>2. AgentCapabilities&lt;/strong>
&lt;/h3>&lt;p>用于标识 Agent 的能力范围，例如是否支持实时通信。&lt;/p>
&lt;h3 id="3-agentcard">&lt;strong>3. AgentCard&lt;/strong>
&lt;/h3>&lt;p>提供 Agent 的核心信息，例如它的功能和技能，便于被发现&lt;/p>
&lt;h3 id="4-agentprovider">&lt;strong>4. AgentProvider&lt;/strong>
&lt;/h3>&lt;p>标识提供者的组织或公司信息。&lt;/p>
&lt;h3 id="5-agentskill">&lt;strong>5. AgentSkill&lt;/strong>
&lt;/h3>&lt;p>描述 Agent 的技能，例如可以执行的任务或功能。&lt;/p>
&lt;h3 id="6-错误定义">&lt;strong>6. 错误定义&lt;/strong>
&lt;/h3>&lt;p>包含了一些预定义的Error， &lt;strong>PushNotificationNotSupportedError&lt;/strong>、&lt;strong>InvalidParamsError&lt;/strong>、&lt;strong>JSONParseError&lt;/strong> 分别指示通知不支持、参数无效、Json解析等错误类型&lt;/p>
&lt;h3 id="7-filecontent--filepart">&lt;strong>7. FileContent &amp;amp; FilePart&lt;/strong>
&lt;/h3>&lt;p>用于传递文件相关的数据，例如上传或下载操作。&lt;/p>
&lt;h2 id="案例">案例
&lt;/h2>&lt;p>&lt;code>a2aprotocol.net&lt;/code> 提供了一个 A2A 和 MCP 协作的案例场景说明&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412-1.png"
width="719"
height="1130"
srcset="https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412-1_hu_ab78a1cf9cae3785.png 480w, https://chengxiaqiucao.github.io/post/075-google%E6%8E%A8%E5%87%BAa2a%E5%8D%8F%E8%AE%AE/Pasted-20250412-1_hu_eb20dfc829b11034.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="152px"
>&lt;/p>
&lt;p>在测试领域的应用，像 【】一文后，有小伙伴提到的更丰富场景，将用例解析、Playwright执行、问题收集并汇报等集成起来，这个就可以由不同Agent来完成，分别负责用例的生成、Playwright执行、向禅道Jira等提交等工作，这里除了Agent之间的工作流，像用例、Bug等在不同Agent之间的传输，就可以用A2A协议来实现。&lt;/p>
&lt;p>相关实践，还有待相关Agent的丰富，后续本号也会持续跟踪！&lt;/p></description></item><item><title>微软已发布Playwright Mcp</title><link>https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/</link><pubDate>Wed, 02 Apr 2025 16:38:33 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402.png" alt="Featured image of post 微软已发布Playwright Mcp" />&lt;h1 id="前言">前言
&lt;/h1>&lt;p>&lt;code>MCP协议&lt;/code>是由AI公司 Anthropic（claude的母公司）于2024年11月推出的一个针对AI能力的开放协议，旨在标准化大语言模型（LLM）与外部数据源、工具之间的交互接口。其核心设计目标：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>解耦与标准化&lt;/strong>：将LLM与外部系统的集成从定制化开发转变为基于统一协议的通用连接，类似硬件领域的USB-C接口。&lt;/li>
&lt;li>&lt;strong>去中心化&lt;/strong>：通过允许开发者自主构建MCP Server，分散AI能力，避免单一厂商垄断知识和服务。&lt;/li>
&lt;li>&lt;strong>安全可控&lt;/strong>：通过权限验证和本地化部署，确保数据隐私与操作安全。&lt;/li>
&lt;/ul>
&lt;p>而 &lt;code>MCP Server&lt;/code> 则是MCP的关键组件，提供如下三种功能：&lt;/p>
&lt;ul>
&lt;li>资源（Resources）：类似文件的数据，可以被客户端读取，如 API 响应或文件内容。&lt;/li>
&lt;li>工具（Tools）：可以被 LLM 调用的函数（需要用户批准）。&lt;/li>
&lt;li>提示（Prompts）：预先编写的模板，帮助用户完成特定任务。&lt;/li>
&lt;/ul>
&lt;p>通过这些能力，MCP Server可以为AI应用提供更加丰富的上下文操作私有数据或特定应用的能力，从而增强 LLM 的实用性。&lt;/p>
&lt;p>在上一篇文章 【】中，我们已经对 MCP Server有了基本认识，并且提供了一个基本的查询本地桌面的案例，并利用AI编辑器&lt;code>Cursor&lt;/code>实现了这个MCP server的调用。&lt;/p>
&lt;h1 id="微软官方推出playwright-mcp">微软官方推出Playwright-mcp
&lt;/h1>&lt;p>MCP Server目前的很多应用中，调度浏览器操作是一个极为高频的场景，基于Playwright这个新锐浏览器工具，也已经有第三方先行推出了MCP Server&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402.png"
width="1812"
height="972"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402_hu_dcfee7661167b616.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402_hu_eb9eb089cb2c9e93.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="186"
data-flex-basis="447px"
>&lt;/p>
&lt;p>而现在，微软官方也终于推出了Playwright-mcp，可以和Vscode copilot无缝结合使用&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-1.png"
width="1727"
height="969"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-1_hu_f83931781b693850.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-1_hu_f4937900ada6a48f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="427px"
>&lt;/p>
&lt;h1 id="playwright-mcp-部署">Playwright-mcp 部署
&lt;/h1>&lt;p>因为Playwright-mcp刚刚推出，目前 vscode中对它的集成主要还是在vscode的先览版vscode insider中。所以我们可以从vscode官网先下载一个vscode insider
&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-2.png"
width="1051"
height="542"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-2_hu_5de3b2f34b5084a9.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-2_hu_dfa42d4ead8ed82c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="193"
data-flex-basis="465px"
>&lt;/p>
&lt;p>安装好vscode insider后，在github项目主页上，直接点击对应按钮即可进行安装&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-3.png"
width="1315"
height="891"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-3_hu_5c4449d9135f39e8.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-3_hu_f010a4faa2d88b64.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="354px"
>&lt;/p>
&lt;p>打开vscode 后，选择 install server，这时会自动配置好mcp server的配置文件，点击start，将mcp server运行起来，这样其实就完成了部署&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-4.png"
width="2167"
height="1282"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-4_hu_10322492c1fa97d1.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-4_hu_bc963d7464a1b201.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="169"
data-flex-basis="405px"
>&lt;/p>
&lt;p>点击copilot对话框中，显示的tools按钮，可以看到目前集成的tools，主要对应playwright的15种主要操作行为&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-5.png"
width="1534"
height="1147"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-5_hu_bade8d3df695395a.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-5_hu_8ce9e42f6fe87c4a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;h1 id="用playwright-mcp无代码完成浏览器操作和验证">用playwright-mcp无代码完成浏览器操作和验证
&lt;/h1>&lt;p>下面我们就看看效果吧。&lt;/p>
&lt;p>打开copilot，输入指令：&lt;/p>
&lt;blockquote>
&lt;p>导航到&lt;a class="link" href="vscode-file://vscode-app/c:/Users/Administrator/AppData/Local/Programs/Microsoft%20VS%20Code%20Insiders/resources/app/out/vs/code/electron-sandbox/workbench/workbench.html" >https://www.saucedemo.com&lt;/a>, 用账号standard_user和密码secret_sauce登录，并确认登录成功，product页面正常显示&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-6.png"
width="2157"
height="1260"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-6_hu_8fe494e7a59ad5b8.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-6_hu_254210cae61ea493.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="410px"
>&lt;/p>
&lt;p>继续执行，得出结果，用例执行成功&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-7.png"
width="2126"
height="1155"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-7_hu_21781221ab7518e2.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250402-7_hu_6c9cb4820d181e78.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="184"
data-flex-basis="441px"
>&lt;/p>
&lt;p>可以看到，这里我们没有编写任何代码，就利用Playwright的mcp完成了对登录用例的执行。&lt;/p>
&lt;p>当然实际工作中，通过mcp server的集成，更多是为了我们方便地调用浏览器完成任务执行提供了更多便利！&lt;/p>
&lt;p>基于MCP-Server，相信还有更多、更丰富的实践可以帮助到我们！&lt;/p>
&lt;hr>
&lt;p>上一篇文章中，我们介绍了通过vscode insiders 集成微软官方的playwright mcp并执行测试的一个基本效果。&lt;/p>
&lt;p>有小伙伴提问是否能在 &lt;code>Cursor&lt;/code> 中使用？这里我也进行了尝试，答案是可以成功集成，但有点小坑。 这里就跟大家分享下配置过程，以及Cursor中集成mcp以后的强大能力。让 AI 帮助我们完成大部分基本的功能测试已经不再遥远&lt;/p>
&lt;h2 id="在cursor中启用playwright-mcp">在Cursor中启用playwright-mcp
&lt;/h2>&lt;h3 id="预置安装">预置安装
&lt;/h3>&lt;p>首先，当然要先安装mcp server以及对应的依赖，这里mcp和playwright都是基于nodejs的。所以通过下面命令先安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="line">&lt;span class="cl">npm install -g @playwright/mcp@latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install -g @playwright@latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npx playwright install --with-deps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="cursor配置">Cursor配置
&lt;/h3>&lt;p>完成安装后，进入 Cursor 的设置页面，在其MCP部分，添加 MCP server配置，参照Playwright官网的介绍，
添加mcp sever配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcpServers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;playwright&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;npx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;@playwright/mcp@latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但这时，cursor中的mcp server实际并不能正常运行，会显示 &lt;code>Clint closed&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/-20250404.png"
width="1915"
height="746"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/-20250404_hu_39c9f769da6c86aa.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/-20250404_hu_e2be4efa3972eade.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="256"
data-flex-basis="616px"
>&lt;/p>
&lt;h3 id="windows系统安装要规避两个坑">windows系统安装，要规避两个坑
&lt;/h3>&lt;p>&lt;strong>第一个坑：npx 包加载路径应该加入搜索路径&lt;/strong>&lt;/p>
&lt;p>也就是要将全局安装的相关包，放到nodejs的搜索路径中。做法是在windows系统的环境变量中，把npm包目录加入path中，并放到nodejs之前&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250404.png"
width="719"
height="794"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250404_hu_90aeece056371733.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250404_hu_1985853fae73d10.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="90"
data-flex-basis="217px"
>&lt;/p>
&lt;p>&lt;strong>第二个坑：修改mcp命令行调用命令&lt;/strong>&lt;/p>
&lt;p>cursor中调用npx，其实是通过命令行调用的，但windows系统下，直接通过命令行调用npx，cursor本身并不能拿到调用状态，所以这里要用 &lt;code>cmd /c&lt;/code> 命令调用, 获取命令句柄&lt;/p>
&lt;p>也就是上面的配置文件，修改成：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcpServers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;playwright&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;cmd /c npx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;@playwright/mcp@latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改以上配置后，重新加载cursor，这时会启动一个命令行窗口，其实就是playwright-mcp，不要关闭，然后可以看到 Cursor中mcp也正常启动了&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250403.png"
width="1327"
height="968"
srcset="https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250403_hu_376d11e59d74c973.png 480w, https://chengxiaqiucao.github.io/post/072-%E5%BE%AE%E8%BD%AF%E5%B7%B2%E5%8F%91%E5%B8%83playwright-mcp/Pasted-20250403_hu_ab054adcc69cab03.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="137"
data-flex-basis="329px"
>&lt;/p>
&lt;h2 id="让-playwright-mcp-代替我们执行测试">让 playwright-mcp 代替我们执行测试
&lt;/h2>&lt;p>我们在Cursor中输入一个基本的任务指令：&lt;/p>
&lt;blockquote>
&lt;p>访问www.saucedemo.com网站，使用problem_user登录，验证该网站完整流程并记录发现的问题&lt;/p>&lt;/blockquote>
&lt;p>以下是完整执行过程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">我将帮您访问 Sauce Demo 网站并使用 problem_user 账号进行完整测试流程验证。让我们开始吧。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">首先，让我访问网站：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_navigate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我使用 problem_user 账号登录：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在输入密码：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">点击登录按钮：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们开始测试并记录问题。首先我注意到以下问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 商品图片问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">所有商品的图片都显示相同的图片（狗的图片），这明显是一个bug，因为每个商品应该显示其独特的产品图片。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我尝试添加商品到购物车：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我点击购物车图标查看购物车：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们返回商品列表并尝试使用排序功能：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我尝试使用排序功能：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_select_option
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">基于测试过程，我发现了以下问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 图片显示问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 所有商品的图片都显示为相同的狗图片，而不是各自的产品图片
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这影响了用户对产品的视觉识别
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 购物车功能问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 点击商品图片或标题时，没有正确跳转到商品详情页，而是直接跳转到了一个固定的商品页面
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这影响了用户浏览和选择商品的体验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 排序功能问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 选择不同的排序选项（如按价格从低到高）后，商品列表顺序没有发生变化
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 排序功能完全失效
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 导航问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 点击商品时总是跳转到同一个商品页面，而不是所点击的具体商品
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这严重影响了用户的购物体验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 按钮状态问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 某些商品的&amp;#34;Add to cart&amp;#34;和&amp;#34;Remove&amp;#34;按钮状态显示不一致
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这可能导致用户对购物车中的商品状态产生混淆
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些问题严重影响了网站的基本功能和用户体验。problem_user 账号确实展示了多个需要修复的问题，这些问题涵盖了UI显示、功能操作和用户体验等多个方面。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">是否需要我继续测试其他功能，比如结账流程？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请继续测试
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">好的，我将继续测试结账流程。首先让我们添加一些商品到购物车，然后进行结账：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在让我们点击购物车图标进入购物车页面：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">我发现点击购物车图标又出现了一个问题 - 它把我们带到了商品详情页而不是购物车页面。让我们尝试点击页面右上角的购物车图标：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_navigate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们继续结账流程，点击Checkout按钮：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们填写个人信息：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">点击Continue继续：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">我发现了一个新的问题：虽然我们输入了姓氏，但系统显示&amp;#34;Last Name is required&amp;#34;的错误。这说明在输入字段上存在问题。让我们再次尝试输入姓氏：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">基于测试过程，我发现了以下新的问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 购物车导航问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 点击商品列表页面的购物车图标会错误地导航到商品详情页
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 必须手动输入购物车URL才能访问购物车页面
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 结账表单问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 姓氏（Last Name）输入框存在严重问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 即使输入了姓氏，系统仍然显示&amp;#34;Last Name is required&amp;#34;错误
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这个问题阻止了用户完成结账流程
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 购物车商品显示问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 购物车中显示的商品数量与实际添加的商品数量不一致
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 一些未添加的商品也出现在购物车中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些问题与之前发现的问题一起，严重影响了整个购物流程：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 用户无法正常浏览商品（图片问题）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法正确添加商品到购物车（购物车功能问题）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法使用排序功能（排序失效）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法正常访问购物车（导航问题）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法完成结账流程（表单验证问题）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些问题使得 problem_user 账号几乎无法完成正常的购物流程。每个主要功能都存在不同程度的问题，这可能是为了测试目的而特意设置的。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">是否需要我继续测试其他功能，比如菜单栏的功能？
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">完成测试，请退出登录并汇总发现的问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">好的，让我们先点击菜单按钮然后退出登录：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Called MCP toolbrowser_click
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在我来汇总使用 problem_user 账号测试发现的所有问题：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 1. 商品展示问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 所有商品图片显示为相同的狗图片，而不是各自的产品图片
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这严重影响了用户对产品的视觉识别和购物体验
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 2. 导航问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 点击商品图片或标题时，总是跳转到固定的商品页面，而不是所点击的具体商品
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 点击购物车图标错误地导航到商品详情页，而不是购物车页面
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 必须手动输入购物车URL才能正确访问购物车页面
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 3. 商品排序功能问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 选择不同的排序选项（如按价格从低到高）后，商品列表顺序没有任何变化
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 排序功能完全失效，无法帮助用户按需要的方式浏览商品
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 4. 购物车功能问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 购物车中显示的商品与实际添加的商品不一致
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 一些未添加的商品也出现在购物车中
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- &amp;#34;Add to cart&amp;#34;和&amp;#34;Remove&amp;#34;按钮状态显示不一致，造成用户混淆
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 5. 结账流程问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 姓氏（Last Name）输入框存在严重问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 即使输入了姓氏，系统仍然显示&amp;#34;Last Name is required&amp;#34;错误
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这个验证问题完全阻止了用户完成结账流程
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 6. 用户体验影响
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 以上问题的综合效果导致：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 用户无法正确浏览和选择商品
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法管理购物车内容
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 无法完成购物流程
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 整体购物体验严重受损
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### 7. 功能可用性评估
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 基本功能几乎都存在问题
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 用户无法完成正常的购物流程
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 这个账号可能是专门用于测试目的，展示了各种可能的问题场景
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这些问题涵盖了电子商务网站的核心功能，包括商品展示、导航、购物车管理和结账流程。每个环节都存在不同程度的问题，使得整个购物体验变得极其困难和令人沮丧。这些问题的存在可能是为了测试目的，帮助开发人员和测试人员理解各种可能的错误场景。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到，通过 Cursor + Playwright-mcp ，AI 已经可以通过我们交代的基本指令，主动帮助我们去覆盖主要的功能测试场景并发现和记录问题。假以时日，完全可以很大程度上替代掉比较基础功能测试任务，而测试人员则可以更关注在高价值的深度问题挖掘上。当然，另一方面，基础功能测试人员，确实也要有相当的危机意识，技能提升和扩展边界刻不容缓。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/qrcode_for_gh_e12c318badb4_258%20%281%29.jpg"
loading="lazy"
>&lt;/p>
&lt;p>欢迎关注秋草的测试技能体系化进阶提升课程，公众号回复 &lt;code>大纲&lt;/code> 了解课程详细目录&lt;/p></description></item><item><title>AI下一站 MCPServer</title><link>https://chengxiaqiucao.github.io/post/073-ai%E4%B8%8B%E4%B8%80%E7%AB%99-mcpserver/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/073-ai%E4%B8%8B%E4%B8%80%E7%AB%99-mcpserver/</guid><description>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/073-ai%E4%B8%8B%E4%B8%80%E7%AB%99-mcpserver/Pasted-20250402.png"
width="565"
height="316"
srcset="https://chengxiaqiucao.github.io/post/073-ai%E4%B8%8B%E4%B8%80%E7%AB%99-mcpserver/Pasted-20250402_hu_46206cb9f1795ee6.png 480w, https://chengxiaqiucao.github.io/post/073-ai%E4%B8%8B%E4%B8%80%E7%AB%99-mcpserver/Pasted-20250402_hu_f61027482dac19eb.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="429px"
>&lt;/p>
&lt;h2 id="引言">引言
&lt;/h2>&lt;p>在AI技术高速演进的2025年，大模型的局限性日益凸显：它们虽拥有强大的推理能力，却难以直接访问私有数据或调用外部工具。这一痛点催生了一项革命性技术——&lt;strong>MCP（Model Context Protocol，模型上下文协议）&lt;/strong>，而作为其核心组件的&lt;strong>MCP Server&lt;/strong>，正成为AI行业的下一个风口。本文将深入解析MCP Server的技术本质、行业价值，并结合实际案例探讨其应用前景。&lt;/p>
&lt;hr>
&lt;h2 id="一何为mcpmcp的前世今生">一、何为MCP？MCP的前世今生
&lt;/h2>&lt;h3 id="1-mcp的定义与设计目标">1. MCP的定义与设计目标
&lt;/h3>&lt;p>MCP是由AI公司Anthropic（claude母公司）于2024年11月推出的开放协议，旨在标准化大语言模型（LLM）与外部数据源、工具之间的交互接口。其核心设计目标：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>解耦与标准化&lt;/strong>：将LLM与外部系统的集成从定制化开发转变为基于统一协议的通用连接，类似硬件领域的USB-C接口。&lt;/li>
&lt;li>&lt;strong>去中心化&lt;/strong>：通过允许开发者自主构建MCP Server，分散AI能力，避免单一厂商垄断知识和服务。&lt;/li>
&lt;li>&lt;strong>安全可控&lt;/strong>：通过权限验证和本地化部署，确保数据隐私与操作安全。&lt;/li>
&lt;/ul>
&lt;h3 id="2-从langchain到mcp的技术演进">2. 从Langchain到MCP的技术演进
&lt;/h3>&lt;p>在MCP之前，开发者依赖如Langchain等中间层框架连接LLM与工具，但这些方案存在两大瓶颈：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>碎片化&lt;/strong>：不同厂商的API标准不统一，集成成本高；&lt;/li>
&lt;li>&lt;strong>封闭性&lt;/strong>：OpenAI等厂商的插件生态受限于自身平台，难以跨模型复用。&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>MCP通过协议层的抽象，将工具调用、数据访问等能力封装为标准化接口，使任何支持MCP协议的LLM均可无缝接入第三方服务。&lt;/p>
&lt;h3 id="3-mcp的生态现状">3. MCP的生态现状
&lt;/h3>&lt;p>现阶段，MCP生态已初具规模：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>头部公司支持&lt;/strong>：除了发起公司的claude，包括AI行业领军的OpenAI，在国内百度、腾讯等也均宣称支持MCP&lt;/li>
&lt;li>&lt;strong>开发者众多&lt;/strong>：因开发门槛低，当前公开的各类MCP Server已呈爆炸式增长态势，短短数周已有数千个公开Server，涵盖数据库、设计工具、支付系统等领域。&lt;/li>
&lt;li>&lt;strong>商业价值显现&lt;/strong>：a16z等机构已绘制MCP市场地图，预测其可能催生“Agentic AI领域的Stripe”级公司。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="二mcp-server有何作用为什么它可能是ai行业的下一个风口">二、MCP Server有何作用？为什么它可能是AI行业的下一个风口？
&lt;/h2>&lt;h3 id="1-mcp-server的核心功能">1. MCP Server的核心功能
&lt;/h3>&lt;p>MCP Server是MCP协议的具体实现，承担以下关键角色：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>工具代理&lt;/strong>：将外部API（如GitHub、PostgreSQL）转化为LLM可理解的标准化工具描述，例如将“创建GitHub Issue”抽象为函数调用。&lt;/li>
&lt;li>&lt;strong>数据网关&lt;/strong>：安全访问本地或云端数据，例如通过文件系统MCP Server让LLM读取桌面文件。&lt;/li>
&lt;li>&lt;strong>流程编排&lt;/strong>：支持多工具串联调用，例如先查询数据库再生成报告。&lt;/li>
&lt;/ul>
&lt;h3 id="2-成为风口的三大驱动力">2. 成为风口的三大驱动力
&lt;/h3>&lt;h4 id="1技术趋势从胖模型到瘦模型生态">（1）技术趋势：从“胖模型”到“瘦模型+生态”
&lt;/h4>&lt;p>传统“胖模型”试图将所有知识内化于参数中，导致训练成本高且时效性差。MCP架构下，LLM专注于语言理解，知识扩展与工具调用由MCP Server网络实现，形成“瘦模型+分布式能力”的新范式。&lt;/p>
&lt;h4 id="2经济模型创作者经济的ai化">（2）经济模型：创作者经济的AI化
&lt;/h4>&lt;p>MCP允许个人开发者通过构建MCP Server（如鸟类知识库）获得收益分成，形成去中心化的知识经济网络。例如，基于以太坊的OpenMCP.Network可通过智能合约实现调用量自动结算。&lt;/p>
&lt;h4 id="3行业需求企业私有化ai落地的刚需">（3）行业需求：企业私有化AI落地的刚需
&lt;/h4>&lt;p>企业可通过MCP Server将内部系统（如CRM、ERP）安全暴露给LLM，无需将敏感数据上传至云端。NineData等公司已推出数据库MCP Server解决方案，支持本地化数据管理。&lt;/p>
&lt;hr>
&lt;h2 id="三作为软件测试从业者我们如何应用mcp-server">三、作为软件测试从业者，我们如何应用MCP Server？
&lt;/h2>&lt;h3 id="1-测试场景的mcp化改造">1. 测试场景的MCP化改造
&lt;/h3>&lt;h4 id="1模拟外部依赖">（1）模拟外部依赖
&lt;/h4>&lt;p>通过构建Mock MCP Server，替代真实支付、第三方API等依赖项，实现测试环境隔离。例如，模拟支付宝接口返回异常响应，验证系统容错能力。&lt;/p>
&lt;h4 id="2数据驱动测试">（2）数据驱动测试
&lt;/h4>&lt;p>将测试用例存储在数据库或文件中，通过MCP Server动态读取并执行。例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@mcp.tool&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_test_cases&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;从指定目录加载JSON格式测试用例&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test_cases.json&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试框架可自动获取用例并生成测试报告。&lt;/p>
&lt;h4 id="3ai辅助测试">（3）AI辅助测试
&lt;/h4>&lt;p>利用LLM通过MCP Server调用测试工具，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自动生成测试脚本&lt;/strong>：根据需求描述生成Selenium代码；&lt;/li>
&lt;li>&lt;strong>智能分析日志&lt;/strong>：结合ELK Stack的MCP Server定位缺陷根源。&lt;/li>
&lt;/ul>
&lt;h3 id="2-测试从业者的技能升级建议">2. 测试从业者的技能升级建议
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>掌握MCP Server开发&lt;/strong>：学习Python/TypeScript的MCP SDK，构建定制化测试工具。&lt;/li>
&lt;li>&lt;strong>熟悉主流MCP生态&lt;/strong>：关注GitHub上的Awesome MCP Servers列表，了解测试相关服务（如PostgreSQL、JIRA集成）。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="四mcp-server的简单实现案例桌面文件查询服务">四、MCP Server的简单实现案例：桌面文件查询服务
&lt;/h2>&lt;h3 id="1-环境准备">1. 环境准备
&lt;/h3>&lt;ul>
&lt;li>安装Python MCP SDK：&lt;code>pip install mcp&lt;/code>&lt;/li>
&lt;li>创建项目目录：&lt;code>mkdir mcp-demo &amp;amp;&amp;amp; cd mcp-demo&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="2-代码实现">2. 代码实现
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">mcp.server.fastmcp&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">FastMCP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mcp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FastMCP&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@mcp.tool&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">list_desktop_files&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;获取当前用户桌面文件列表&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">listdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expanduser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;~/Desktop&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mcp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">transport&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;stdio&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此代码定义了一个MCP Server，提供&lt;code>list_desktop_files&lt;/code>工具，允许LLM查询用户桌面文件。&lt;/p>
&lt;h3 id="3-客户端配置与测试">3. 客户端配置与测试
&lt;/h3>&lt;p>在Cursor编辑器的&lt;code>mcp.json&lt;/code>中添加配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mcpServers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;desktop&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;command&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;python server.py&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>启动服务后，我们可直接提问：“我的桌面有哪些文件？”，Cursor将通过MCP协议调用服务并返回我当前桌面上的文件清单，并按类型进行分类。&lt;/p>
&lt;hr>
&lt;h2 id="结语">结语
&lt;/h2>&lt;p>MCP Server正在重塑AI与物理世界的交互方式。对开发者而言，它是降低集成成本的利器；对企业而言，它是激活数据价值的钥匙；对测试从业者而言，它是自动化演进的新引擎。尽管生态仍处早期，但其标准化、去中心化的设计理念，已为AI行业的下一站指明了方向。正如Anthropic所言：“MCP不是终点，而是Agentic AI时代的起点。”&lt;/p></description></item><item><title>AI时代的软件测试，助手还是对手？</title><link>https://chengxiaqiucao.github.io/post/070-ai%E6%97%B6%E4%BB%A3%E7%9A%84%E6%B5%8B%E8%AF%95/</link><pubDate>Tue, 25 Mar 2025 21:38:36 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/070-ai%E6%97%B6%E4%BB%A3%E7%9A%84%E6%B5%8B%E8%AF%95/</guid><description>&lt;p>当下时代，AI浪潮呼啸而至，未来已来已不是一句空话。和AI相关的话题、讨论也成了科技圈的“流量密码”，从自动驾驶到智能客服，每个行业似乎都在蹭这波AI的热度。&lt;/p>
&lt;p>但作为测试从业者，我们在面对 AI 的快速发展时，大家更关心的可能是：&lt;strong>AI在软件测试里到底能干啥？真的能帮我们提高产出、效率吗？或者发展下去，AI会否彻底替代测试岗位？&lt;/strong>&lt;/p>
&lt;p>本篇我们就来探讨下这个话题&lt;/p>
&lt;h2 id="ai在软件测试不同阶段中的角色">AI在软件测试不同阶段中的角色
&lt;/h2>&lt;p>AI测试，归根到底，还是希望它承担部分或者辅助、提升原来的测试工作，也就是说，AI本身，并不会改变软件研发的测试生命周期规律。&lt;/p>
&lt;p>所以，我们可以从软件测试生命周期的不同阶段，测试工作职责范围的角度，来看AI可以发挥哪些作用。&lt;/p>
&lt;h3 id="需求分析阶段">需求分析阶段
&lt;/h3>&lt;p>这个阶段，我们可以基于AI的自然语言处理技术，对原始需求文档进行梳理，输出包括业务流程图、操作流图、数据流向等分析结果。&lt;/p>
&lt;p>同时也可以结合更多关联的本地数据，如历史Bug数据、测试日志、项目数据等，识别测试的优先级并构建风险模型，识别风险。并基于这些分析结果，帮助我们更合理地制定测试计划。&lt;/p>
&lt;h3 id="测测试用例设计阶段">测测试用例设计阶段
&lt;/h3>&lt;p>在软件设计和开发阶段，测试人员通常也会同步完成测试设计，这个阶段，我们可以利用 AI 帮助我们基于需求文档和需求分析阶段的成果，完成测试用例的生成，基于AI可以完成更多更充分的正向、反向用例以及各种边界条件以扩大覆盖范围。&lt;/p>
&lt;h3 id="测试准备阶段">测试准备阶段
&lt;/h3>&lt;p>这阶段，最主要的工作是测试环境的搭建部署，可以利用AI能力结合CI平台实现测试服务器、数据库的环境智能化管理和资源的动态调配等工作。&lt;/p>
&lt;h3 id="测试执行阶段">测试执行阶段
&lt;/h3>&lt;p>执行阶段，可以基于各种风险评估、依赖关系及业务影响等因素动态调整测试顺序，优先覆盖更高风险的模块，实现缺陷尽早暴露的目的。&lt;/p>
&lt;p>另外，也可以通过AI增强如日志分析、图像比对等能力，提升我们的测试执行效率和缺陷发现能力。&lt;/p>
&lt;h3 id="测试报告阶段">测试报告阶段
&lt;/h3>&lt;p>在测试的收尾部分，利用AI针对各种过程数据的综合分析，可以帮助我们出具多维度的测试报告，为项目决策者提供结构化的测试状态分析。&lt;/p>
&lt;h2 id="现阶段-ai-如何赋能软件测试">现阶段 AI 如何赋能软件测试
&lt;/h2>&lt;p>目前的AI的发展，已经可以在很多典型的测试场景下提供更多支持，以下梳理了可以通过AI赋能的一些典型场景&lt;/p>
&lt;ul>
&lt;li>&lt;strong>智能数据生成&lt;/strong>：创建多样化数据集，覆盖常规场景与边缘用例&lt;/li>
&lt;li>&lt;strong>自动化测试&lt;/strong>：自动适应UI变更，保证自动化测试脚本稳定性&lt;/li>
&lt;li>&lt;strong>精准回归测试&lt;/strong>：基于代码变更智能选取关联测试用例&lt;/li>
&lt;li>&lt;strong>流程克隆&lt;/strong>：学习测试工作流后自动执行相似流程&lt;/li>
&lt;li>&lt;strong>动态等待机制&lt;/strong>：智能判断页面加载状态后执行操作&lt;/li>
&lt;li>&lt;strong>日志智能分析&lt;/strong>：分析、识别错误日志中的潜在问题模式&lt;/li>
&lt;li>&lt;strong>负载/性能测试&lt;/strong>：模拟真实用户行为、诊断性能瓶颈&lt;/li>
&lt;li>&lt;strong>持续测试监控&lt;/strong>：实时监测应用状态并预警异常&lt;/li>
&lt;li>&lt;strong>探索性测试支持&lt;/strong>：在探索测试过程中提供智能化建议&lt;/li>
&lt;li>&lt;strong>预测性分析&lt;/strong>：基于历史数据预测版本发布风险&lt;/li>
&lt;/ul>
&lt;h2 id="引入ai的优势">引入AI的优势
&lt;/h2>&lt;p>AI 可以通过持续地学习、训练并不断提升，因此引入AI后，可以在以下诸多方面建立起优势：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>成本优化&lt;/strong>：可以降低人工成本，优化资源配置，加速产品上市&lt;/li>
&lt;li>&lt;strong>稳定可靠&lt;/strong>：确保测试的标准化执行与结果一致性&lt;/li>
&lt;li>&lt;strong>缺陷早筛&lt;/strong>：提前暴露问题，缩短修复周期&lt;/li>
&lt;li>&lt;strong>快速反馈&lt;/strong>：多环境并行测试，缩短反馈链路&lt;/li>
&lt;li>&lt;strong>高质量用例&lt;/strong>：自动生成单元测试、回归测试、API测试等多样化用例&lt;/li>
&lt;/ul>
&lt;h2 id="应用ai依然存在巨大的挑战">应用AI依然存在巨大的挑战
&lt;/h2>&lt;h3 id="人工智能还是人工智障">&lt;strong>人工智能还是“人工智障”&lt;/strong>
&lt;/h3>&lt;p>AI的训练数据如果有偏差，结果可能离谱到让你怀疑人生。如果AI的训练结果不理想，那么AI的应用可能不仅无法提升效率，反而还会浪费大量额外的资源去校正它的执行结果。&lt;/p>
&lt;h3 id="数据依赖症">&lt;strong>数据依赖症&lt;/strong>
&lt;/h3>&lt;p>AI 对于优质训练数据和各种参数调整的高要求，往往对具体行业的实际落地应用形成很大制约。&lt;/p>
&lt;h3 id="维护成本比想象中高">&lt;strong>维护成本比想象中高&lt;/strong>
&lt;/h3>&lt;p>不止是数据资源的投入，对本地数据集的模型训练也需要投入大量时间与资金，包括设备资源也是较大的开支。另外现阶段AI人才的缺口，也让AI应用的人力成本高出一大截&lt;/p>
&lt;h3 id="经验和直觉ai永远学不会">&lt;strong>经验和直觉，AI永远学不会&lt;/strong>
&lt;/h3>&lt;p>经验丰富的老测试人通过各种蛛丝马迹可以嗅出产品中一些隐性的缺陷，这种类似第六感的“玄学”，AI必然难以复制。&lt;/p>
&lt;h2 id="助手还是对手">助手还是对手？
&lt;/h2>&lt;p>“AI这么发展，测试工程师是不是要失业了？” &lt;strong>其实大可不必惊慌！&lt;/strong>&lt;/p>
&lt;p>AI的本质还是工具，就像通过自动化测试取代部分手工的校验一样，它只会改变部分工作方式，而非淘汰岗位。未来的测试人员更像是“AI训练师+策略指挥官”——我们需要做的其实就是：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>教会AI理解业务逻辑&lt;/strong>（比如什么是“正确的订单状态流转”）；&lt;/li>
&lt;li>&lt;strong>设计更聪明的测试策略&lt;/strong>（比如如何平衡自动化与探索性测试）；&lt;/li>
&lt;li>&lt;strong>解读AI的结果并决策&lt;/strong>（比如某个异常到底是Bug还是误报）。&lt;/li>
&lt;/ul>
&lt;p>AI就像扫地机器人，能帮你清理地面，但遇到顽固污渍（复杂业务场景）、家具布局变化（需求变更），还是得你亲自出马。&lt;/p>
&lt;h2 id="结语ai不是终点而是新起点">结语：AI不是终点，而是新起点
&lt;/h2>&lt;p>AI在软件测试中的应用还处于起步期，我们可以看到它的巨大潜力，但还不到能完全信赖并放弃原有模式的时候。作为测试人员，与其焦虑“会不会被取代”，不如主动拥抱变化：学点机器学习基础知识，了解主流AI测试工具，甚至参与训练自己的模型。&lt;/p>
&lt;p>毕竟，&lt;strong>未来的软件测试江湖，最吃香的肯定不是“最会点鼠标的人”，而是“最会和AI打交道的人”&lt;/strong>。你说呢？&lt;/p>
&lt;hr>
&lt;p>部分前文也探讨过AI的发展，参考阅读&lt;/p>
&lt;p>&lt;a class="link" href="https://mp.weixin.qq.com/s/JkBcOzZpVEVJBtvZjE4vEQ?token=645759914&amp;amp;lang=zh_CN" target="_blank" rel="noopener"
>AI时代，程序员还有没有出路&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://mp.weixin.qq.com/s/k9Dj9eRBhehPtbMiIHnn9g" target="_blank" rel="noopener"
>测试职业和其发展前景&lt;/a>&lt;/p></description></item><item><title>Deepseek提示词框架助力团队改进现状，效能提升</title><link>https://chengxiaqiucao.github.io/post/069-%E4%BC%98%E5%8C%96ai%E6%8F%90%E7%A4%BA%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E5%9B%A2%E9%98%9F%E6%8F%90%E5%8D%87/</link><pubDate>Wed, 19 Mar 2025 22:44:42 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/069-%E4%BC%98%E5%8C%96ai%E6%8F%90%E7%A4%BA%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E5%9B%A2%E9%98%9F%E6%8F%90%E5%8D%87/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/069-%E4%BC%98%E5%8C%96ai%E6%8F%90%E7%A4%BA%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0%E5%9B%A2%E9%98%9F%E6%8F%90%E5%8D%87/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%A1%86%E6%9E%B6.png" alt="Featured image of post Deepseek提示词框架助力团队改进现状，效能提升" />&lt;p>随着 AI 技术的快速发展，从 ChatGPT 到 Deepseek 的爆发，AI已经可以切实起到辅助我们日常工作的作用。&lt;/p>
&lt;p>除了在具体的像辅助编程、文案编写等方面，我们也可以充分利用 AI 的强大逻辑能力和海量基础数据，帮助我们针对工作中的一些困境，提出切实可行的改进方案。&lt;/p>
&lt;p>但要想 AI 帮助我们给出有可操作性的解决方案，提示词的框架设计和提供给AI的上下文信息是极为关键的。一个良好的提示词框架，可以帮助我们快速得到极为有价值的参考。&lt;/p>
&lt;h2 id="面对的困境案例">面对的困境案例
&lt;/h2>&lt;p>这里以一个比较普遍的敏捷团队质量困境的案例来说明：&lt;/p>
&lt;blockquote>
&lt;p>作为一个测试工程师，在一个运行Scrum框架的敏捷团队中负责质量保障，团队成员还包括SM、PO、2个Android开发（其中小李负责了App的整体系统设计），1个后端开发，1个非全职的视觉设计。团队产品是一个物联网智能手环产品的配套Android App。但因为存在和硬件团队的配合、需求经常变化、视觉设计不及时、提测不及时、Bug积压等问题，导致产品质量不乐观。目前App已经运行了多个迭代，按计划上线时间越来越近，如何针对当前的质量困境提出改进方案？&lt;/p>&lt;/blockquote>
&lt;h3 id="设计提示词框架">设计提示词框架
&lt;/h3>&lt;p>要 AI 帮助我们给出有可行性的改进方案，首先我们要合理地设计提示词框架，以便最终给出的方案更贴合团队现状以及具备可操作性。&lt;/p>
&lt;p>那么设计的提示词框架要点：&lt;/p>
&lt;ul>
&lt;li>给定的角色，让 AI 确定从什么角度去提出改进方案&lt;/li>
&lt;li>当前的现状，也就是充分的背景信息上下文&lt;/li>
&lt;li>AI 应该具体分析的内容或它的任务应该是什么&lt;/li>
&lt;li>希望 AI 提供的具体输出，包括格式要求，应包含的要素等&lt;/li>
&lt;li>相关的一些制约因素，这对方案是否可行会有重要影响&lt;/li>
&lt;/ul>
&lt;p>现在针对上述困境，希望AI 能帮助我提供一份针对团队的整体质量提升方案，可以在回顾会上进行讨论。基于以上思路，通过向 Deepseek输入提示词框架，得到如下输出：&lt;/p>
&lt;h3 id="质量改进方案面向迭代回顾会">质量改进方案（面向迭代回顾会）
&lt;/h3>&lt;hr>
&lt;h4 id="1-总体质量目标">&lt;strong>1. 总体质量目标&lt;/strong>
&lt;/h4>&lt;p>&lt;strong>&amp;ldquo;在2个迭代内将自动化测试覆盖率提升至40%，缺陷修复响应时间缩短50%，回归测试时间压缩30%，建立需求变更与测试联动的质量防线&amp;rdquo;&lt;/strong>&lt;/p>
&lt;hr>
&lt;h4 id="2-具体改进举措">&lt;strong>2. 具体改进举措&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>举措&lt;/th>
&lt;th>执行人&lt;/th>
&lt;th>执行计划&lt;/th>
&lt;th>效果评估方法&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>需求冻结机制&lt;/strong>&lt;br>- 每个迭代前3天锁定核心功能需求&lt;br>- 硬件对接需求由PO与硬件团队联合评审后形成接口文档&lt;/td>
&lt;td>PO、硬件团队负责人&lt;/td>
&lt;td>迭代计划会签署需求基线文档&lt;br>硬件接口文档通过Confluence共享&lt;/td>
&lt;td>需求变更次数减少50%&lt;br>接口文档版本变更记录可追溯&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>自动化用例分级策略&lt;/strong>&lt;br>- L0级（核心业务流）：强制全自动化&lt;br>- L1级（高频使用场景）：优先自动化&lt;br>- L2级（边缘场景）：手动验证&lt;/td>
&lt;td>测试工程师&lt;br>（主导）&lt;br>Android开发工程师&lt;br>（辅助）&lt;/td>
&lt;td>使用Allure标记用例等级&lt;br>每日构建优先执行L0用例&lt;/td>
&lt;td>L0用例100%通过率作为提测准出条件&lt;br>自动化执行时间减少40%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>开发自测责任制&lt;/strong>&lt;br>- 开发提交代码需附带单元测试（覆盖率≥60%）&lt;br>- 接口测试由后端工程师在Swagger维护&lt;/td>
&lt;td>Android开发工程师&lt;br>后端工程师&lt;/td>
&lt;td>单元测试纳入代码评审检查项&lt;br>Postman接口用例与代码库联动&lt;/td>
&lt;td>提测版本冒烟测试通过率提升至80%&lt;br>接口缺陷率下降30%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>硬件兼容性Mock服务&lt;/strong>&lt;br>- 基于硬件协议开发模拟器&lt;br>- 自动化测试与真实设备解耦&lt;/td>
&lt;td>测试工程师&lt;br>（主导）&lt;br>硬件团队提供协议文档&lt;/td>
&lt;td>使用Python开发蓝牙协议模拟器&lt;br>Jenkins构建时自动启动Mock服务&lt;/td>
&lt;td>硬件依赖导致测试阻塞次数清零&lt;br>自动化稳定性提升至95%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>缺陷分级管理&lt;/strong>&lt;br>- P0级缺陷：2小时内响应&lt;br>- P1级缺陷：当前迭代必须修复&lt;br>- 遗留缺陷需PO签字确认风险&lt;/td>
&lt;td>测试工程师&lt;br>（分类）&lt;br>开发工程师&lt;br>（修复）&lt;/td>
&lt;td>Jira配置自动化缺陷流转规则&lt;br>每日站会同步TOP3缺陷进展&lt;/td>
&lt;td>缺陷平均修复周期缩短至8小时&lt;br>积压缺陷数量下降60%&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4 id="3-风险及应对">&lt;strong>3. 风险及应对&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>风险&lt;/th>
&lt;th>应对方案&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>开发人员抵触单元测试&lt;/td>
&lt;td>- 由小李（系统设计师）示范编写单元测试&lt;br>- 将测试覆盖率纳入DoD完成标准&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>硬件协议频繁变更&lt;/td>
&lt;td>- 要求硬件团队提前3天通知协议变更&lt;br>- Mock服务设计版本兼容机制&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>UE设计延迟影响UI测试&lt;/td>
&lt;td>- 与UE设计师约定：视觉稿交付同时提供UI元素ID规范&lt;br>- 使用截图对比工具容差10%像素差异&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4 id="4-外部支持需求">&lt;strong>4. 外部支持需求&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>具体需求&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>工具&lt;/td>
&lt;td>- 申请BrowserStack移动云测试平台license&lt;br>- 采购Xray测试用例管理插件License&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>人员&lt;/td>
&lt;td>- 硬件团队指定协议对接接口人&lt;br>- DevOps工程师优化CI/CD流水线&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>培训&lt;/td>
&lt;td>- 邀请单元测试专家开展TDD工作坊&lt;br>- Appium高级用法内部培训&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4 id="5-效果评估节点">&lt;strong>5. 效果评估节点&lt;/strong>
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>节点&lt;/th>
&lt;th>检验标准&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>迭代5中期&lt;/td>
&lt;td>- L0级自动化用例覆盖所有核心业务流程&lt;br>- 单元测试覆盖率≥40%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>迭代5结束&lt;/td>
&lt;td>- 自动化覆盖率≥25%&lt;br>- 回归测试时间≤8小时/次&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>迭代6结束&lt;/td>
&lt;td>- 自动化覆盖率≥40%&lt;br>- 生产环境致命缺陷数为0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;p>&lt;strong>执行要点说明：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>每日质量看板&lt;/strong>：在团队作战室悬挂自动化执行率/缺陷趋势图&lt;/li>
&lt;li>&lt;strong>质量门禁机制&lt;/strong>：代码合并请求必须通过L0用例+SonarQube检测&lt;/li>
&lt;li>&lt;strong>测试左移实践&lt;/strong>：测试工程师参与需求评审时即输出测试要点矩阵&lt;/li>
&lt;/ol>
&lt;p>该方案需团队全员签署质量承诺书，建议在迭代回顾会上通过&amp;quot;5Why分析法&amp;quot;就当前质量问题达成改进共识。&lt;/p>
&lt;p>可以看到，得到了一份极有针对性且有相当可行性的改进方案。我们根据目前的团队现状，进行微调其实就可以纳入实施。&lt;/p>
&lt;p>所以善用 AI 提示词框架，不仅可以帮助我们在具体事务上获取帮助，对于这种整体改进方面的举措，AI 也能提供巨大助力。&lt;/p>
&lt;p>回复 “提示词框架” 可获取上文的提示词完整示例。关于 AI 在工作中的更多应用实践，也欢迎大家留言或入群探讨！&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/qrcode_for_gh_e12c318badb4_258%20%281%29.jpg"
loading="lazy"
>&lt;/p></description></item><item><title>代码中集成deepseekAPI执行测试</title><link>https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/</link><pubDate>Wed, 19 Mar 2025 14:05:03 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/</guid><description>&lt;p>在之前的文章&lt;/p>
&lt;p>&lt;a class="link" href="https://chengxiaqiucao.github.io/post/52-%E7%94%A8deepseek&amp;#43;vscode%E8%87%AA%E5%8A%A8%E5%AE%8C%E6%88%90%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/" target="_blank" rel="noopener"
>用deepseek+vscode自动完成测试脚本&lt;/a>&lt;/p>
&lt;p>我们介绍了vscode的AI插件，可以帮助我们完成自动化测试用例的生成。&lt;/p>
&lt;p>而目前Deepseek 官方的API其实也重新开放，对于我们深度利用Deepseek等大模型打造贴合实际工作应用的场景，提供了更多可能性。&lt;/p>
&lt;p>下面我们就以 Deepseek 官方API的集成为例，完成在代码中通过调用大模型，实现测试用例自动生成，并完成执行的实践。&lt;/p>
&lt;p>首先从Deepseek官网进入它的API开放平台&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319.png"
width="1640"
height="850"
srcset="https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319_hu_d4f3554457c1966e.png 480w, https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319_hu_67db4896ac5d966c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="463px"
>&lt;/p>
&lt;p>进入以后，申请一个APIkey，目前Deepseek的定价还是比较低的，而且特定时段还有较大折扣&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319-1.png"
width="1074"
height="758"
srcset="https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319-1_hu_56ae016408b1a041.png 480w, https://chengxiaqiucao.github.io/post/068-%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%9B%86%E6%88%90deepseekapi%E6%89%A7%E8%A1%8C%E6%B5%8B%E8%AF%95/Pasted-20250319-1_hu_1e36cd156d004cf8.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="340px"
>&lt;/p>
&lt;p>有了这个API Key以后，我们就可以在代码中进行调用了&lt;/p>
&lt;p>目前Deepseek API 是兼容了openai 的 api 接口&lt;/p>
&lt;p>通过以下代码，结合Python标准库inspect，我们可以直接让deepseek针对我们的被测代码，实现用例的生成。&lt;/p>
&lt;p>当然我们也可以将对应的需求文本传输给deepseek，原理类似&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">inspect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">openai&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">OpenAI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 引入deepseek api&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OpenAI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">api_key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;your_deepseek_api_key&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base_url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://api.deepseek.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 被测函数，计算BMI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_bmi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">weight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">weight&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;身高、体重必须大于0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bmi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">weight&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bmi&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">18.5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;竹竿！&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="mf">18.5&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">bmi&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">24.9&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;正常人&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="mi">25&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">bmi&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">29.9&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;壮士！&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;肥宅！&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 通过inspect获取函数源代码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">function_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inspect&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getsource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">calculate_bmi&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 根据获取的代码，定义提示词&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">the_prompt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">请针对以下代码生成基于pytest框架的测试用例：&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">function_code&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">尽可能使用参数化测试，包含各种异常场景
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 调用deepseek api 使用V3模型，获取返回&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chat&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">completions&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">model&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;deepseek-chat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">messages&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;system&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;You are a python testing assistant&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;role&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">the_prompt&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">max_tokens&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temperature&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stream&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过以上代码，我们可以获取deepseek V3 返回的结果：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">为了测试 &lt;span class="sb">`calculate_bmi`&lt;/span> 函数，我们可以使用 &lt;span class="sb">`pytest`&lt;/span> 框架，并结合 &lt;span class="sb">`pytest.mark.parametrize`&lt;/span> 来实现参数化测试。以下是一个完整的测试用例，涵盖了正常情况和异常情况。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ``&lt;span class="sb">`python
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">import pytest
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"># 导入要测试的函数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">from your_module import calculate_bmi
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"># 正常情况的测试用例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">@pytest.mark.parametrize(&amp;#34;weight, height, expected&amp;#34;, [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (60, 1.75, &amp;#34;正常人&amp;#34;), # 正常BMI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (50, 1.75, &amp;#34;竹竿！&amp;#34;), # 低BMI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (80, 1.75, &amp;#34;壮士！&amp;#34;), # 高BMI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (100, 1.75, &amp;#34;肥宅！&amp;#34;), # 超高BMI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">def test_calculate_bmi_normal(weight, height, expected):
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> assert calculate_bmi(weight, height) == expected
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"># 异常情况的测试用例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">@pytest.mark.parametrize(&amp;#34;weight, height, expected_exception&amp;#34;, [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (0, 1.75, ValueError), # 体重为0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (60, 0, ValueError), # 身高为0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (-10, 1.75, ValueError), # 体重为负数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> (60, -1.75, ValueError), # 身高为负数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">def test_calculate_bmi_exceptions(weight, height, expected_exception):
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> with pytest.raises(expected_exception):
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> calculate_bmi(weight, height)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span> `&lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">### 解释：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">1. **正常情况测试**：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - 使用 `&lt;/span>pytest.mark.parametrize&lt;span class="sb">` 来测试不同的体重和身高组合，验证函数返回的BMI分类是否正确。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - 测试用例包括正常BMI、低BMI、高BMI和超高BMI的情况。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">2. **异常情况测试**：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - 测试函数在输入无效值（如体重或身高为0或负数）时是否抛出 `&lt;/span>ValueError&lt;span class="sb">` 异常。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> - 使用 `&lt;/span>pytest.raises&lt;span class="sb">` 来捕获预期的异常。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">### 运行测试：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">确保你已经安装了 `&lt;/span>pytest&lt;span class="sb">`，然后在终端中运行以下命令来执行测试：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>`&lt;span class="sb">`bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">pytest test_bmi.py
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span> `&lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">### 注意：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- `&lt;/span>your_module&lt;span class="sb">` 是包含 `&lt;/span>calculate_bmi&lt;span class="sb">` 函数的模块名，请根据实际情况替换。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">- 测试文件通常命名为 `&lt;/span>test_*.py&lt;span class="sb">` 或 `&lt;/span>*_test.py&lt;span class="sb">`，以便 `&lt;/span>pytest` 自动识别并运行测试。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>而为了进一步直接利用生成的结果，我们其实可以针对这里的输出，提取出markdown格式文本中的代码，写入一个测试文件，然后调用执行即可&lt;/p>
&lt;p>具体代码如下，利用正则表达式（正则表达式详细介绍，可参见前文 &lt;a class="link" href="https://chengxiaqiucao.github.io/post/58-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/" target="_blank" rel="noopener"
>搞定正则表达式，告别新手村！&lt;/a>）提取代码部分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 用户配置 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">run_tests&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span> &lt;span class="c1"># 配置是否运行测试 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果需要运行测试，则将测试用例写入文件并执行 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">run_tests&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 创建测试文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_file_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;test_calculate_bmi.py&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_file_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">test_file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;import pytest&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;from ai_test import calculate_bmi&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;```python([\s\S]*?)```\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pattern&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_cases&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DOTALL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_code&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用pytest执行测试 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;pytest&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_file_name&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">capture_output&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 输出测试结果 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;测试结果:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;错误信息:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 可选：删除测试文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># os.remove(test_file_name)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过这种方式，我们就完成了通过deepseek自动生成用例并立即执行，输出结果的尝试。&lt;/p>
&lt;p>当然，案例比较简单，只是一个通过AI全自动完成单元测试的初步试验，具体应用还须更进一步地深入探索！&lt;/p></description></item><item><title>Deepseek为什么会选择开源？</title><link>https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/</link><pubDate>Tue, 25 Feb 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/</guid><description>&lt;hr>
&lt;blockquote>
&lt;p>有人问，国外的大模型基本都是闭源的，Deepseek这么强为什么会选择开源？&lt;/p>&lt;/blockquote>
&lt;p>回答这个问题，其实了解下梁文锋是谁，他靠什么起家，以及网上关于他的几段访谈就清楚了！&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-2.png"
width="617"
height="418"
srcset="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-2_hu_56ff032a5f87c66c.png 480w, https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-2_hu_3fa5f93afcb8fb7a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="354px"
>&lt;/p>
&lt;h2 id="deepseek是兴趣产物">Deepseek是兴趣产物
&lt;/h2>&lt;p>幻方作为国内头部的量化私募，依托的就是基于机器学习这样的AI技术大杀四方。已经极为成功。换句话说，幻方自己赚的钱已经够多了，基于已有的技术积累，投入做Deepseek这个大模型，更多是主创者的兴趣产物，而不是核心产品。本意最多也是给主页赋能，但绝不是自己的主赛道。&lt;/p>
&lt;p>当然现在Deepseek到这个位置，也不排除以后幻方的方向就变成大模型了。&lt;/p>
&lt;p>就好像诺基亚当初做纸浆，兰博基尼当年做拖拉机的一样&amp;hellip;. 无心插柳。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-1.png"
width="1062"
height="729"
srcset="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-1_hu_fe57dd50addd5a14.png 480w, https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224-1_hu_93ea4454cc035927.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="349px"
>&lt;/p>
&lt;p>所以做Deepseek首要考虑的并不是商业模式，如何赚钱！开源还是闭源，在商业模式上并无太多纠结！&lt;/p>
&lt;h2 id="技术的核心不是技术本身而是产生技术的人才">技术的核心不是技术本身，而是产生技术的人才
&lt;/h2>&lt;p>而从梁文锋的访谈也可以知道，他对开源的看法：人是产生创新的关键！AI这种颠覆性的创新面前，靠闭源获得的护城河是极为短暂的，热爱、好奇、勇于尝试的顶尖人才才是产生这种技术的源头！&lt;/p>
&lt;p>他也举了英伟达的例子，就是英伟达的技术本身也没有特别秘密之处，但组件团队、打造生态和追赶，需要时间，这个时间才是护城河！&lt;/p>
&lt;h2 id="">
&lt;/h2>&lt;p>骨子中的自信和以天下为己任的使命感&lt;/p>
&lt;p>梁文锋在访谈中，多次谈到中国以前的技术发展，多是跟随者和微调式的创新而缺乏颠覆性的创新。需要从模仿阶段向原创过度，人类科技进步中要体现中国人的贡献。相信这也是自己在有经济实力的基础上，给了团队中这些全本土人才充分的自由度和创新空间，厚积薄发产生的结果！&lt;/p>
&lt;p>梁文锋是真正做到了：达则兼济天下&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224.png"
width="620"
height="197"
srcset="https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224_hu_9c7a63e498eb5d32.png 480w, https://chengxiaqiucao.github.io/post/036-deepseek%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90/Pasted-20250224_hu_5c9b3bd1871abb21.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="314"
data-flex-basis="755px"
>&lt;/p>
&lt;hr></description></item><item><title>马斯克的审计风暴，比Deepseek更直接的AI震撼</title><link>https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/</link><pubDate>Mon, 10 Feb 2025 11:20:27 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/</guid><description>&lt;p>春节假期，咱这边举国欢庆，其乐融融。哪吒票房一路高歌猛进；Deepseek也出圈，强势刷屏，服务器长时间繁忙。&lt;/p>
&lt;p>而于此同时，大洋对岸，随着1月20日懂王入主白宫，马斯克也上任DOGE并当天光速开工， 开始对联邦政府支出进行大规模审计。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210-1.png"
width="811"
height="608"
srcset="https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210-1_hu_c920a6007b91c76d.png 480w, https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210-1_hu_9d89e8f50b1e2664.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="320px"
>&lt;/p>
&lt;p>此DOGE非彼数字货币DOGE，是美国&lt;strong>政府效率部&lt;/strong>的缩写。&lt;/p>
&lt;h2 id="马斯克和doge审计风暴">马斯克和DOGE审计风暴
&lt;/h2>&lt;p>和我们预想的传统大规模审计，要先成立审计部门，然后成百上千的审计师和动辄数月的准备、入驻、核对工作不同，DOGE到如今，仅用不到20天的时间，已经把美国政坛捅了个天翻地覆&lt;/p>
&lt;p>&amp;mdash; &lt;strong>1 月 20 日，关闭首席多元化官员执行委员会（CDOEC）；&lt;/strong>&lt;/p>
&lt;p>&amp;mdash; 1 月 25 日，取消约 4.2 亿美元的现有/即将签订的合同；&lt;/p>
&lt;p>&amp;mdash; 1 月 27 日，劳工部、交通部、农业部、商务部、卫生和公共服务部和财政部取消了 16 份 DEIA 合同，节省 1.45 亿美元；&lt;/p>
&lt;p>&amp;mdash; 1 月 28 日，联邦总务管理局（GSA）终止了三份几乎空置的办公空间租约，关闭了 17 个 DEIA 网站，节省了 160 万美元；&lt;/p>
&lt;p>&amp;mdash; 1 月 29 日，取消为缅甸提供的 4500 万美元 DEI 奖学金；&lt;/p>
&lt;p>（截至 2025 年 1 月 29 日，教育部、总务管理局等 26 个部门已终止 85 份 DEIA 相关合同，总额约 10 亿美元；）&lt;/p>
&lt;p>&amp;mdash; 2 月 3 日，未充分利用的建筑的租约终止数量增加到 22 起，节省的金额从 160 万美元增加到 4460 万美元；&lt;/p>
&lt;p>&amp;mdash; &lt;strong>2 月 3 日，关闭美国国际开发署（USAID）；&lt;/strong>&lt;/p>
&lt;p>&amp;mdash; 2 月 4 日，共有 6 个机构终止了 36 份合同，共节省约 1.65 亿美元，其中包括国土安全部的「人文调查和气候支持服务」合同；&lt;/p>
&lt;p>&amp;mdash; 2 月 5 日，终止 12 份咨询合同（在 GSA 和教育部），共节省约 3000 万美元；&lt;/p>
&lt;p>&amp;mdash; 2 月 6 日，社会保障局已终止其「性别 X 倡议标记」的合同，节省 100 多万美元；NASA 取消 Politico 订阅，节省 50 万美元；DEI、不良资产、媒体和咨询类别的 78 份合同因终止，总节省额约为 1.1 亿美元；&lt;/p>
&lt;p>&amp;mdash; 2 月 8 日，宣布在过去 48 小时内，卫生与公众服务部取消了 62 份价值 1.82 亿美元的合同；教育部终止了三项总额为 1500 万美元的 DEI 培训补助金。&lt;/p>
&lt;p>然而，如此快速高效的审计结果和行动背后，却并没有庞大的团队，依靠的仅仅是几个平均年龄20出头的天才少年和他们的AI算法加持。&lt;/p>
&lt;h2 id="doge六灵童">DOGE六灵童
&lt;/h2>&lt;p>难以想象，以上清单上的手笔，依靠的是下面6个毛头小伙子&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210.png"
width="976"
height="579"
srcset="https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210_hu_8ed95766874ee390.png 480w, https://chengxiaqiucao.github.io/post/053-%E9%A9%AC%E6%96%AF%E5%85%8Bai%E6%B2%BB%E5%9B%BD/Pasted-20250210_hu_b28ceb7a2a94488.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="404px"
>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>加文·克里格（25 岁）&lt;/strong>：克里格毕业于加州大学伯克利分校电子工程和计算机科学专业，曾在美国 AI 数据分析公司 Databricks 担任高级软件工程师，是人工智能与大数据分析的专家。克里格的任务是&lt;strong>撰写行政命令&lt;/strong>，并确保它们能够在政府内部迅速生效，那封发给 USAID 全体员工周一不用回总部上班的电子邮件，便出自他手。他还直接起草了针对美国财政部的资金审查令，参与 OPM 的大规模裁员计划，并负责制定公务员的「重新聘用标准」，使得未来的政府雇员必须经过 DOGE 的审批才能入职。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>卢克·法里托（23 岁）&lt;/strong>：法里托尔已从内布拉斯加大学林肯分校退学，后来为 GitHub 背后的硅谷企业家纳特·弗里德曼（Nat Friedman）工作。他曾在 SpaceX 实习过，为泵、阀门和其他有助于为火箭提供燃料的组件编写软件。法里托尔目前被列为美国卫生与公众服务部（HHS）部长办公室的「执行工程师」，亲自监督了 USAID 的&lt;strong>数字封锁&lt;/strong>行动，接下来的目标已经瞄准了负责合同的医疗保险和医疗补助服务中心的系统。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>爱德华·科里斯廷（19 岁）&lt;/strong>：科里斯汀是最小的一位，刚刚高中毕业，在波士顿的美国东北大学就读学习机械工程和物理学，去年夏天在马斯克的脑机接口公司 Neuralink 工作了三个月，目前他的具体职责尚未明确。科里斯汀曾使用非政府的谷歌 Gmail 加入美国总务管理局员工的通话中，要求他们检查自己编写的代码并证明自己的工作合理性，此举引发联邦雇员不满。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>阿卡什·博巴（21 岁）&lt;/strong>：博巴来自加州大学伯克利分校，曾是桥水基金的投资工程实习生，此前还在 Meta，和 MAGA 资助者蒂尔（Peter Thiel）创办的美国软件服务商 Palantir 实习过，专长是人工智能、数据分析和金融建模。他负责&lt;strong>设计算法监控政府资金流向&lt;/strong>，主导的「财政支出实时监控系统」允许在不经过国会审查的情况下，实时冻结联邦「低效支出」。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>伊桑·绍特兰（22 岁）&lt;/strong>：绍特兰是哈佛大学计算机科学专业的大四学生，是团队中唯一有人工智能创业经验的人，他创办的人工智能公司 Energize AI 获得了 OpenAI 的 10 万美元资助，曾在马斯克的人工智能公司 xAI 举办的黑客马拉松比赛中曾获得过亚军。绍特兰负责 DOGE 的 AI 政府计划，目标是&lt;strong>用算法取代政府传统的人力决策机制&lt;/strong>，将大部分行政审批、预算评估、甚至国会报告自动化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>戈蒂埃·科尔·基利安（24 岁）&lt;/strong>：破解财政部安全系统，获取支付网络权限。基利安毕业于麦吉尔大学，在金融数据处理方面有极强的能力，曾在 Jump Trading 公司担任工程师，该公司专门从事高频金融交易和算法。基利安的主要任务是帮助 DOGE 团队&lt;strong>破解财政部的安全防线&lt;/strong>，使他们能够访问政府支付网络，绕开安全检查直接读取数百万笔交易记录。基利安也是少数几个获得白宫高级访问权限的年轻人之一，马斯克对他的信任极高。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>就这么几个大学生年纪的工程师，在取得数据权限后，仅仅两周左右就依靠AI将之前数十年隐藏在冰山之下的各种问题浮上水面。可以说是，确实是兵贵神速，美国的那些官老爷们估计还没缓过神，就发现家被抄了。&lt;/p>
&lt;h2 id="感慨">感慨
&lt;/h2>&lt;p>无论马斯克和这乙巳六章京，维新风暴最终走向哪里，&lt;strong>AI&lt;/strong> 已经实实在在以一种让人瞠目结舌的方式，开始左右大洋对岸的政局，也必将深度影响到我们生活的方方面面。&lt;/p></description></item></channel></rss>
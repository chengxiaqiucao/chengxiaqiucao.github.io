<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on 秋 草 观 “测” 台</title><link>https://chengxiaqiucao.github.io/tags/tools/</link><description>Recent content in Tools on 秋 草 观 “测” 台</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>|by 城下秋草（公众号： 秋草说测试）</copyright><lastBuildDate>Mon, 11 Aug 2025 14:25:29 +0800</lastBuildDate><atom:link href="https://chengxiaqiucao.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>推荐一个用于页面探索测试的数据辅助工具</title><link>https://chengxiaqiucao.github.io/post/120-autotestdata/</link><pubDate>Mon, 11 Aug 2025 14:25:29 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/120-autotestdata/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/title.png" alt="Featured image of post 推荐一个用于页面探索测试的数据辅助工具" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>测试人员工作中，发现Bug更多还是依靠对应用的探索式测试。&lt;/p>
&lt;p>而在应用的探索过程中，表单中填入测试数据又是一个非常高频的操作，准备多种等价或边界值的测试数据并快速填入，是测试人员在验证和探索功能时必不可少的动作。但包括大量数据的准备，使其符合表单本身的约束，同时还要快速填入使流程尽快向下运行，在执行中其实占用了不少时间，很影响工作效率。&lt;/p>
&lt;p>其实业界较早就有类似的工具来辅助测试，比如 &lt;a class="link" href="https://autotestdata.com/" target="_blank" rel="noopener"
>https://autotestdata.com/&lt;/a> 这个网站就可以根据我们的需要生成相关的 fake 数据，自动化测试中也有相关的fake库，比如python的&lt;code>Faker&lt;/code>。&lt;/p>
&lt;p>但这些数据生成，还是存在根据整理需求、生成数据、拷贝数据，再填入表单这样的操作，总归还不够顺手。&lt;/p>
&lt;p>本文介绍一个 Chrome 插件，可以在表单操作的同时，快速呼出相关的数据并根据需要进行填入。&lt;/p>
&lt;p>相信是我们在进行页面测试时的重要帮手。&lt;/p>
&lt;h2 id="插件介绍">插件介绍
&lt;/h2>&lt;p>这个 Chrome 插件 就是 &lt;code>Auto Data Filter&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811.png"
width="1466"
height="728"
srcset="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811_hu_cd96aa03b93061b3.png 480w, https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811_hu_8816680802f02e.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="201"
data-flex-basis="483px"
>&lt;/p>
&lt;p>从 Chrome 的插件商店中找到这个插件，进行安装即可。&lt;/p>
&lt;p>另外，从插件名称中，其实可以看到，它其实是另一个插件 &lt;code>Bug Magnet&lt;/code> 的替代品。只是原插件已经失效，没人维护了&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-1.png"
width="1439"
height="401"
srcset="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-1_hu_22935808220d2748.png 480w, https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-1_hu_452c2ba0dc3a15ef.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="358"
data-flex-basis="861px"
>&lt;/p>
&lt;p>使用也非常简单，在需要填充数据的表单中，点击右键，就可呼出插件菜单，选择对应的内置数据，即可快速填充。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-3.png"
width="1249"
height="761"
srcset="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-3_hu_ea128eb13f7bced8.png 480w, https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-3_hu_cb15d509c89455ec.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="164"
data-flex-basis="393px"
>&lt;/p>
&lt;p>用法很简单，但非常实用&lt;/p>
&lt;h2 id="离线安装">离线安装
&lt;/h2>&lt;p>如果不能顺利访问插件商店，也可通过离线方式安装。 本公众号回复 &lt;code>AutoData&lt;/code> 可获取插件离线包&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-2.png"
width="1892"
height="580"
srcset="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-2_hu_3d0f98aa50a744ba.png 480w, https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-2_hu_3952b988f131ed6b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="326"
data-flex-basis="782px"
>&lt;/p>
&lt;ol>
&lt;li>获取插件离线包，解压到本地目录&lt;/li>
&lt;li>进入chrome插件管理页面&lt;/li>
&lt;li>打开开发者模式&lt;/li>
&lt;li>加载刚才解压的离线插件包&lt;/li>
&lt;li>完成安装&lt;/li>
&lt;/ol>
&lt;h2 id="数据定制">数据定制
&lt;/h2>&lt;p>这个插件虽然使用比较简单。但有个问题，就是测试数据主要还是英文的，很多内置数据不一定覆盖我们常用的数据&lt;/p>
&lt;p>通过离线包，我们还可以对数据进行定制&lt;/p>
&lt;p>这些数据其实保存在插件包 js 目录下的 &lt;code>jsformat.js&lt;/code> 文件中，把我们自定义的数据补充或修改到文件中即可。&lt;/p>
&lt;p>以下是修改后，插件呼出数据的效果&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-5.png"
width="1102"
height="487"
srcset="https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-5_hu_a408ff91c9cee824.png 480w, https://chengxiaqiucao.github.io/post/120-autotestdata/Pasted-20250811-5_hu_537dab45cf9bf137.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="226"
data-flex-basis="543px"
>&lt;/p></description></item></channel></rss>
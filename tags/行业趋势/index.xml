<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>行业趋势 on 秋 草 观 “测” 台</title><link>https://chengxiaqiucao.github.io/tags/%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/</link><description>Recent content in 行业趋势 on 秋 草 观 “测” 台</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>|by 城下秋草（公众号： 秋草说测试）</copyright><lastBuildDate>Wed, 30 Jul 2025 18:00:11 +0800</lastBuildDate><atom:link href="https://chengxiaqiucao.github.io/tags/%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/index.xml" rel="self" type="application/rss+xml"/><item><title>十四年后，再谈“测试已死”</title><link>https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/</link><pubDate>Wed, 30 Jul 2025 18:00:11 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730-1.png" alt="Featured image of post 十四年后，再谈“测试已死”" />&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730-1.png"
width="1265"
height="713"
srcset="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730-1_hu_8a8e2eac4fffa180.png 480w, https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730-1_hu_3edd918931914c6.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="425px"
>&lt;/p>
&lt;h2 id="引子">引子
&lt;/h2>&lt;p>回到十四年前，2011年10月，在Google的&lt;code>GTAC&lt;/code>(Google Test Automation Conference)大会上，&lt;code>Alberto Savoia&lt;/code> 身着死神装扮走上讲台，以一种戏剧性地方式宣称 &amp;ldquo;软件测试已死&amp;rdquo;。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730.png"
width="917"
height="600"
srcset="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730_hu_f591dde53e0ea3e8.png 480w, https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/Pasted-20250730_hu_f9ef109a4f9ceb92.png 1024w"
loading="lazy"
alt="savoia演说现场"
class="gallery-image"
data-flex-grow="152"
data-flex-basis="366px"
>&lt;/p>
&lt;p>不久以后，测试界大牛&lt;code>Jame Whittaker&lt;/code> 在另一个测试大会 &lt;code>EuroSTAR&lt;/code> 上也以同样的主题，宣布&lt;code>Test is Dead&lt;/code>.&lt;/p>
&lt;p>这些言论的重点，在于认为软件测试不再需要作为软件开发过程中一个独立的角色。在软件流程和工具已经成熟的情况下，宏观的质量问题不再需要一个相对大型、专职的团队来进行保证。相反，测试应该演变成一系列微观的活动，分散给其他角色，例如项目经理、开发人员，甚至最终用户。
把测试活动分散到研发的其他环节。&lt;/p>
&lt;p>而随着这个宣言的广泛流传，包括google、微软在内的大量科技巨头开始裁撤专职测试岗位，测试转型为测试开发或软件效能部门。&lt;/p>
&lt;p>但十多年过去，测试这个职业真的消亡了吗？相反，包括 &lt;strong>Wittaker&lt;/strong> 本人也于去年(2024)发表了一篇 《软件测试业的复兴》重新审视测试行业的演变 (原文参见 &lt;a class="link" href="https://medium.com/@docjamesw/the-resurrection-of-software-testing-634423cd8411" target="_blank" rel="noopener"
>https://medium.com/@docjamesw/the-resurrection-of-software-testing-634423cd8411&lt;/a>)&lt;/p>
&lt;p>这篇文章，我们就再来深入探讨一下这个话题&lt;/p>
&lt;h2 id="测试已死论调的反复出现">&amp;ldquo;测试已死&amp;quot;论调的反复出现
&lt;/h2>&lt;p>从&amp;quot;测试已死&amp;quot;的论调提出，到如今其实已经被多次提及。这种说法至少在三个时期反复出现：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Selenium开源时代&lt;/strong>：当自动化测试工具逐渐走进企业的日常应用，机器代替人工似乎近在眼前&lt;/li>
&lt;li>&lt;strong>自动化测试框架和平台泛滥时期&lt;/strong>：市场上涌现出大量的自动化测试解决方案，都宣称可以极大减少测试工作&lt;/li>
&lt;li>&lt;strong>现今AI时代&lt;/strong>：现今AI大行其道，老调重弹，认为AI已经可以替代测试人员的工作&lt;/li>
&lt;/ol>
&lt;h3 id="为什么">为什么？
&lt;/h3>&lt;p>其实仔细思考一下，这种周期性出现也并非偶然，它反映的是技术变革与行业认知之间的常见错位。每当有新技术出现，人们就倾向于过度乐观地认为它可以完全替代人类的判断和创造力。&lt;/p>
&lt;p>除此之外，测试行业本身对测试的认知，也很大程度上在为这种论调提供论据。&lt;/p>
&lt;h4 id="大量培训机构包括很多测试人员自己也并不将测试视作一门技术">大量培训机构，包括很多测试人员自己也并不将测试视作一门技术
&lt;/h4>&lt;ul>
&lt;li>0基础入行&lt;/li>
&lt;li>小白也可做测试&lt;/li>
&lt;li>测试不过是“点点点”&lt;/li>
&lt;li>学会写自动化脚本就是高级测试&lt;/li>
&lt;/ul>
&lt;h4 id="企业混淆了自动化和测试">企业混淆了自动化和测试
&lt;/h4>&lt;p>很多企业，大力推广自动化，设立测试开发岗。&lt;/p>
&lt;p>但并没有真正认识到，所谓自动化测试，更多做得其实只是&lt;code>检查&lt;/code>，和真正的&lt;code>测试&lt;/code> 相距甚远。&lt;/p>
&lt;p>测试开发花费了大量的时间去搭建框架、建设平台，想方设法用工具提升效率，但鲜有真正在测试思维拓展和挖掘深层质量问题上拿出成果的案例。&lt;/p>
&lt;h4 id="对测试目标不清晰">对测试目标不清晰
&lt;/h4>&lt;p>如先前所说，认为测试就是为了验证需求的大有人在。测试人员更像是拿着检查表的“质检员”，以是否满足规格说明而非产品能否提供价值为标准。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/kanban.png"
width="1378"
height="805"
srcset="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/kanban_hu_610dc40424a1db2f.png 480w, https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/kanban_hu_5a68a07f5de9ae6a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="171"
data-flex-basis="410px"
>&lt;/p>
&lt;p>正是这些流行于整个测试行业的错误认知，恰恰对测试行业本身带来巨大伤害。&lt;/p>
&lt;p>但即便是削减了测试岗位以后呢？TDD，BDD，以终为始，开发其实承担了测试职责；或者让终端客户，在不知情的情况充当测试者，在客户发现问题后想办法去快速修复。&lt;/p>
&lt;p>所以并不是测试已死，只是执行测试的责任方和职责划分出现转移。&lt;/p>
&lt;h2 id="什么样的测试才真的应该消亡">什么样的“测试”才真的应该消亡？
&lt;/h2>&lt;p>正如我之前多篇文章都强调过软件测试的真正目的。【】&lt;/p>
&lt;p>测试真正的目的既不是简单地去验证需求，也不仅只是为了发现Bug。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/testing-checking.png"
width="748"
height="571"
srcset="https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/testing-checking_hu_894995043907226c.png 480w, https://chengxiaqiucao.github.io/post/116-%E6%B5%8B%E8%AF%95%E5%B7%B2%E6%AD%BB10%E5%B9%B4/testing-checking_hu_fc91b077f293f5bc.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="314px"
>&lt;/p>
&lt;p>&lt;code>测试&lt;/code>和&lt;code>检查&lt;/code> 也应该有着明确的区分。随着技术的进步，那些测试中的 &lt;code>检查&lt;/code> 才是应该逐渐从测试职责中逐渐弱化的部分。&lt;/p>
&lt;p>而自动化测试，那些测试用例清单和CI仪表盘上的绿色进度条，其实并不能算是真正地在面向质量进行测试，带来的只有虚假的安全感。&lt;/p>
&lt;p>这些按照既有脚本进行逐项Check的&amp;quot;勾选框活动&amp;rdquo;，才是真正应该区分于测试，应该消亡的那部分。&lt;/p>
&lt;p>把大量的时间用于编写、维护这些形式化的测试用例、测试脚本，反而减少去探索产品、洞察风险的真正&lt;code>测试&lt;/code>时间，实际上，正是在伤害测试的真正价值。&lt;/p>
&lt;h3 id="自动化测试-vs-真正的测试">自动化测试 vs 真正的测试
&lt;/h3>&lt;p>我们必须澄清如下核心认知：&lt;/p>
&lt;p>&lt;strong>自动化测试：通常只用于检查已知的部分，即我们预期系统完成的行为。&lt;/strong>
&lt;strong>真正的测试？是关于未知的。它是需要调查、探索、设问、推理、试验、求证的技术。没有脚本或AI能够完全替代。&lt;/strong>&lt;/p>
&lt;p>真正的测试价值永远应在于探索未知，是去发现那些通过自动化无法预见的问题&lt;/p>
&lt;h2 id="测试价值的重新定义">测试价值的重新定义
&lt;/h2>&lt;p>测试不仅仅是关于发现bug，也不仅仅是关于工具。它的价值应该包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>理解产品风险&lt;/strong>：识别可能影响用户或业务的潜在问题&lt;/li>
&lt;li>&lt;strong>沟通不确定性&lt;/strong>：清晰传达关于产品质量和风险的发现&lt;/li>
&lt;li>&lt;strong>建模用户行为&lt;/strong>：预测真实用户如何与系统互动&lt;/li>
&lt;li>&lt;strong>发现他人遗漏的问题&lt;/strong>：提供独特的视角和洞察&lt;/li>
&lt;/ul>
&lt;p>这些价值在任何软件开发生命周期中都是不可或缺的。当组织真正理解这些价值时，测试就必然会在软件研发过程中承担重要角色，即便不是由专职测试人员，也会由开发人员或其他角色来完成。&lt;/p>
&lt;h2 id="结论">结论
&lt;/h2>&lt;blockquote>
&lt;p>&lt;strong>测试从未消亡，只会不断重生!&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>&amp;ldquo;测试已死&amp;quot;的论调每隔几年就会出现一次，但测试从未真正消亡。
它只是在不断演变——从手工测试到自动化，从独立角色到分布式责任，从验证已知到探索未知。每一次演变都是测试适应新环境、新技术的结果。&lt;/p>
&lt;p>今天，当我们面对AI的浪潮时，同样的故事正在重演。有些人预言AI将取代测试人员，但历史告诉我们，技术会改变测试的方式，但不会消除测试的需求。AI可以自动化更多任务，但人类测试者的批判性思维、创造力和系统思维仍然不可替代。&lt;/p>
&lt;p>测试的未来不在于抵抗变化，而在于拥抱进化。测试人员需要发展新技能，采用新工具，但更重要的是，要坚守测试的核心价值——探索未知，评估风险，保障质量。&lt;/p></description></item><item><title>做测试真的比不上开发吗？</title><link>https://chengxiaqiucao.github.io/post/111-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%AF%94%E8%BE%83/</link><pubDate>Sun, 13 Jul 2025 11:26:50 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/111-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%AF%94%E8%BE%83/</guid><description>&lt;blockquote>
&lt;p>有小伙伴问，做测试的，是不是真的比不上开发？&lt;/p>&lt;/blockquote>
&lt;p>虽说各有各的看法，但我们思考下提出这个问题背后代表的主流观点，还是值得探讨一下的。&lt;/p>
&lt;p>下面就谈谈秋草的看法。&lt;/p>
&lt;h2 id="测试技术和开发技术并非同一赛道">测试技术和开发技术并非同一赛道
&lt;/h2>&lt;p>首先，要真正做好测试这个岗位，技能要求其实是挺高的。但测试技术和开发技术不是一个维度的技术，开发者拿软件开发技能比对吐槽测试者，就好比篮球运动员吐槽游泳运动员跑得慢。&lt;/p>
&lt;p>测试技术包含很多和开发技术并不相同的要求，具体可以参看我之前另一篇文章【】， 这里不再赘述。&lt;/p>
&lt;h2 id="对测试评价不高的现实原因">对测试评价不高的现实原因
&lt;/h2>&lt;p>但我们也要看到这样的客观事实：在大部分企业，测试岗位的话语权、薪资等等，相比同级别的开发者，通常是低一档的。&lt;/p>
&lt;p>而导致这种情况的形成，其实有多方面原因，主要还是对岗位的普遍认知，以及比较恶劣的行业环境。具体说来：&lt;/p>
&lt;h3 id="工作要求和预期产出的不匹配">工作要求和预期产出的不匹配
&lt;/h3>&lt;p>首先，目前大多的测试岗位要求，其实是围绕验证需求，包括测试用例设计、自动化测试实现，都是基于对已有需求的验证。&lt;/p>
&lt;p>但验证需求，其实更多是&lt;strong>检查&lt;/strong>工作，而非&lt;strong>测试&lt;/strong>工作。&lt;/p>
&lt;p>检查作为测试的子集， 其实要求较低，技术含量要求也不高。相应地，围绕需求验证的岗位要求，其实是一个低技术含量要求的岗位。&lt;/p>
&lt;p>但矛盾点在于，对于测试岗位的预期，是保障产品发布后的全面质量。而产品质量的覆盖要求，仅仅通过需求验证是完全无法达到的。&lt;/p>
&lt;p>需求的验证，主要是功能覆盖，而且通常还只包含基本场景，缺乏各种异常场景以及各种非功能场景。要达到质量覆盖，必须要靠研发阶段全流程的质量控制，包括在测试阶段的&lt;strong>测试&lt;/strong>工作。 这里的&lt;strong>测试&lt;/strong>，不仅仅是基本的&lt;strong>检查&lt;/strong>， 还要包含更多不同测试技术去加持的主动发现。
&lt;img src="https://chengxiaqiucao.github.io/post/111-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%AF%94%E8%BE%83/testing-checking.png"
width="748"
height="571"
srcset="https://chengxiaqiucao.github.io/post/111-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%AF%94%E8%BE%83/testing-checking_hu_894995043907226c.png 480w, https://chengxiaqiucao.github.io/post/111-%E6%B5%8B%E8%AF%95%E5%92%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%AF%94%E8%BE%83/testing-checking_hu_fc91b077f293f5bc.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="314px"
>&lt;/p>
&lt;p>而工作要求和预期产出的不匹配，也导致对测试岗位的工作效果的质疑。&lt;/p>
&lt;h3 id="较低的工作要求导致较低的行业门槛">较低的工作要求导致较低的行业门槛
&lt;/h3>&lt;p>当工作要求本身主要针对较低技术含量的&lt;strong>检查&lt;/strong>工作，那么当然也会降低从业门槛，很多没什么经验和技术的小白也可以入行来完成相关的检查工作。&lt;/p>
&lt;p>早些年甚至还有测试设计工程师和测试执行工程师的区分，这里的测试执行，更是只需要参照用例完成操作，记录结果即可。这种最基本的检查工作，确实谈不上需要多少测试技术。&lt;/p>
&lt;p>较低的技术水平和岗位要求，自然会影响对这个岗位的整体评价。&lt;/p>
&lt;h3 id="行业本身的误导">行业本身的误导
&lt;/h3>&lt;p>IT行业前些年的快速发展和较好的待遇水平，让IT成为热门就业选择。而因为上面说到的原因，当较低技术含量的检查工作被披上测试工作的外衣，这样的测试岗位，就成为非IT人员进入这个行业最好的入门渠道。&lt;/p>
&lt;p>大量希望进入这个行业的非IT专业人员，又引出了很多培训需求。&lt;/p>
&lt;p>于是经过各类培训机构的推波助澜，包括鼓吹0基础入行，小白也能高薪。也确实输送了大量人员进入行业，而这些短期速成的“人才”，在工作中的表现，也当然影响了对行业的整体评价。&lt;/p>
&lt;h3 id="行业寒冬下的重灾区">行业寒冬下的重灾区
&lt;/h3>&lt;p>随着IT寒冬的到来，企业在成本压力的情况下，压缩开支，削减人员，前述种种因素的叠加，又让
测试成为重灾区，恶性循环，大家对于测试这个岗位的普遍看法还在进一步背离它应有的价值。&lt;/p>
&lt;h2 id="写在最后">写在最后
&lt;/h2>&lt;p>就客观事实来说，确实现在国内所谓的“测试行业”大量从业者普遍难称合格， 说比不上开发岗位也没错。&lt;/p>
&lt;p>但这里的“测试”岗位是打了引号的，检查和测试，混为一谈。&lt;/p>
&lt;p>总而言之，当前整个测试行业的整体环境比较恶劣，误解较深，秋草也深感无力。&lt;/p>
&lt;p>不过也毋庸灰心，围绕岗位真正的目标去打造自身能力，为全面质量提供真正的价值，自然会是大潮褪下时，能依然站立的那个。&lt;/p></description></item><item><title>MCP必将失败？关于MCP的质疑声</title><link>https://chengxiaqiucao.github.io/post/106-mcp_must_fail/</link><pubDate>Sun, 29 Jun 2025 21:25:34 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/106-mcp_must_fail/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629.png" alt="Featured image of post MCP必将失败？关于MCP的质疑声" />&lt;blockquote>
&lt;p>&lt;strong>模型上下文协议（Model-Context Protocol, MCP&lt;/strong> 从推出以来，备受关注并得到了快速的应用。目前大量的AI工具均已集成了对MCP的支持。（关于MCP的具体介绍，可以参见我之前的文章【】） 但随着MCP的崛起，对于他的质疑声也逐渐开始出现，比如对于它在安全方面的局限性的担忧（参见我之前的文章【】），近期 Edgenesis 创始人 Yongli,Chen 也发文认为MCP必将失败。这里将他的主要观点梳理为本文（原文参见文后链接），大家可以做个参考和判断&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629.png"
width="1120"
height="630"
srcset="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629_hu_d5ae8560451876a0.png 480w, https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629_hu_21177ec8b7dbaade.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;h2 id="导语">导语
&lt;/h2>&lt;p>&lt;strong>模型上下文协议（Model-Context Protocol, MCP）&lt;/strong> 从问世之初就备受瞩目，它被誉为一种通用标准，旨在实现人工智能（AI）模型与各类软件工具之间的无缝集成。从表面上看，该协议确实解决了一个真实的行业痛点：&lt;strong>用一套简单、标准的解决方案，取代当前由各种定制化应用程序接口（API）和专有插件构成的混乱局面&lt;/strong>。MCP的支持者们描绘了这样一幅未来图景：AI代理能够毫不费力地连接无数应用程序，无需再进行繁琐的定制化集成。&lt;/p>
&lt;p>然而，尽管MCP在技术上尽显优雅，早期也收获了极大的关注，但它注定会步履维艰。这并非源于技术上的缺陷，而是因为它从根本上误解了一个关键的经济现实：在数字商业版图中，最终用户的关注度才是商业取胜的关键。
各大公司都会不遗余力地守护用户的注意力，因为这才是他们最主要的变现来源。所以，工具供应商们实际上根本无法承受因全面采纳MCP而将自身降级为单纯后端功能的代价。&lt;/p>
&lt;h2 id="真正的战场注意力的所有权">真正的战场：注意力的所有权
&lt;/h2>&lt;p>要理解MCP为何会面临阻力，我们必须先思考一个基本事实：&lt;strong>谁控制了用户界面，谁就掌握了用户关系&lt;/strong>。拥有界面的企业，就意味着拥有了用户的参与度、数据以及由此产生的收入机会。反之，那些被降级到后端的服务，则会变成可以被随意替换的商品，不仅容易被取代，还会被剥夺与客户的直接联系。&lt;/p>
&lt;p>历史一再证明了这一定律。例如，Facebook正是通过将第三方应用程序转变为纯粹的内容提供者，才建立起自己的商业帝国。早期的社交游戏巨头Zynga就曾惨痛地吸取过这一教训。当年，Facebook更改平台规则、收紧限制，导致Zynga游戏的曝光度大减。Zynga的命运就此被注定，因为Facebook牢牢控制着用户的注意力，从而主宰了Zynga的收入和客户互动。&lt;/p>
&lt;p>同样，Twitter之所以封锁第三方客户端，也是因为这些客户端允许用户绕过Twitter的广告系统，这无异于“窃取”了平台的用户注意力。苹果公司对待网页应用的态度是另一个极具说服力的例子：多年来，苹果一直有意限制iOS系统上网页应用的功能，以此确保App Store中的原生应用占据主导地位，从而维护苹果与用户的直接关系及其收入流。&lt;/p>
&lt;h2 id="mcp的天真提议">MCP的天真提议
&lt;/h2>&lt;p>而MCP实际上是在要求软件供应商们自愿接受一种新的模式：将他们的&lt;strong>核心功能变为简单的后端服务，主要通过AI驱动的界面来被访问&lt;/strong>。&lt;/p>
&lt;p>想象一下，未来预订旅行完全通过一个AI助手完成，该助手在幕后通过MCP与航空公司、酒店和旅行社进行着无形的互动。在这种模式下，作为用户接触点和决策点的界面将完全属于AI助手，使得各大供应商无法直接触及用户的注意力。&lt;/p>
&lt;p>这实际上是将供应商们从拥有差异化品牌和客户忠诚度的“目的地”，降格为了标准化的“公用设施”。这种转变会严重威胁到供应商们捕获价值的核心能力。&lt;/p>
&lt;p>软件即服务（SaaS）和工具类供应商在很大程度上依赖于与用户的直接互动来实现其商业变现，例如向上销售增值功能、打造品牌体验以及收集宝贵的用户数据。&lt;/p>
&lt;p>一旦全面拥抱MCP，这些供应商就等于将用户界面拱手让给了外部的AI聚合平台，其结果将不可避免地导致客户关系和直接变现渠道的丧失。&lt;/p>
&lt;h2 id="来自当前ai生态的证据">来自当前AI生态的证据
&lt;/h2>&lt;p>现实中，各大软件公司在处理与 OpenAI 的 &lt;strong>ChatGPT&lt;/strong>、Anthropic 的 &lt;strong>Claude&lt;/strong> 等AI驱动平台的关系时，已经表现得十分谨慎。&lt;/p>
&lt;p>无论是Salesforce、微软还是谷歌，它们都在寻求将AI能力深度嵌入到自己的专有界面中，而不是允许自己的工具被外部AI代理完全调用。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1.png"
width="1216"
height="815"
srcset="https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1_hu_136c3d71c4f80399.png 480w, https://chengxiaqiucao.github.io/post/106-mcp_must_fail/Pasted-20250629-1_hu_3c16a91a08a0a2da.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="358px"
>&lt;/p>
&lt;p>例如，Salesforce推出的Einstein GPT，就将AI直接集成到了其客户关系管理（CRM）系统中，从而将用户牢牢地锁定在自己的生态系统内。同样，微软也优先将Copilot AI深度嵌入到Office和Windows环境中。当工具供应商确实尝试进行外部AI集成时，它们通常也只提供有限的功能——这些功能足以吸引用户，但又不足以完全替代它们自己的界面。例如，一个旅游应用或许会允许AI助手浏览航班信息，但最终一定会将用户引导回自己的平台去完成预订，以此来保留关键的客户互动和向上销售的机会。&lt;/p>
&lt;h2 id="mcp必将面临困境">MCP必将面临困境
&lt;/h2>&lt;p>过往的经验清晰地揭示了 MCP 为何难以获得广泛采用，尤其是那些主导着市场注意力的大型软件供应商，必然不可能全面转向 MCP。&lt;/p>
&lt;p>如果这些供应商真的认为，放弃用户注意力来实现开放集成是有价值的，那么他们早就免费提供功能全面的公共API了。然而事实恰恰相反，他们通常会构建受到严格控制的生态系统，通过选择性的集成来吸引新用户，绝不会主动放弃对用户体验或营收的控制权。&lt;/p>
&lt;p>这种小心翼翼的平衡之举，恰恰凸显了 MCP 的根本性缺陷：无论一项协议在技术上多么优雅或优越，软件供应商们其实没有任何动机会将自己宝贵的客户关系和变现能力拱手让给外部的聚合者。&lt;/p>
&lt;h2 id="平台经济学才是技术的基础">平台经济学才是技术的基础
&lt;/h2>&lt;p>归根结底，决定MCP命运的，并非其技术上的优劣，而是商业激励机制和平台经济的动态。平台的所有者必然会想方设法保护他们的核心资产——即与用户的直接联系。MCP所提出的方法从根本上颠覆了这一动态，使其与根深蒂固的经济激励背道而驰。&lt;/p>
&lt;p>在实践中，MCP或许能在一些小型供应商或那些开放本身就具有内在价值的小众社区中获得有限的采用。然而，在主导当今数字经济的主流 SaaS 供应商和大型平台中，MCP的采用充其量更多是扩展自身而非外放能力的。&lt;/p>
&lt;p>本质上，虽然MCP试图成为通用标准，但正面临一个残酷的经济现实：没有哪家公司愿意自甘沦为一个隐形的背景板。各大公司必然会拼尽全力捍卫自己对用户界面（即&lt;strong>用户关系的控制权&lt;/strong>)，并限制任何可能威胁其战略地位的集成。&lt;/p>
&lt;h3 id="结论">结论
&lt;/h3>&lt;p>MCP所描绘的无缝、通用AI集成的愿景固然引人入胜，但在商业世界，单凭引人注目的技术很少能决定成败。
关于标准的争夺，最终是关于经济话语权的争夺。而MCP的设计，恰恰挑战了数十年来驱动数字经济发展的基本激励结构。也正因如此，MCP在走向广泛应用的道路上面临着巨大的障碍。&lt;/p>
&lt;p>在它能够更好地契合平台经济学和供应商的内在动力之前，MCP想要成为AI与工具集成的通用标准，恐怕也只能是一个遥远的梦想。&lt;/p>
&lt;p>原文链接：
&lt;a class="link" href="https://www.forbes.com/councils/forbestechcouncil/2025/06/12/mcp-will-fail-and-heres-why/" target="_blank" rel="noopener"
>https://www.forbes.com/councils/forbestechcouncil/2025/06/12/mcp-will-fail-and-heres-why/&lt;/a>&lt;/p></description></item><item><title>Cursor天塌了，Google开源Gemini-cli，编程助手卷王来了</title><link>https://chengxiaqiucao.github.io/post/103-gemini-cli/</link><pubDate>Thu, 26 Jun 2025 13:21:59 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/103-gemini-cli/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626.png" alt="Featured image of post Cursor天塌了，Google开源Gemini-cli，编程助手卷王来了" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>昨天（2025-6-25），Google重磅开源了一个基于命令行的AI编程Agent &lt;code>Gemini-Cli&lt;/code>，让AI辅助编程深度集成到开发人员最熟悉的Terminal命令行界面，而且直接集成了Google最新的&lt;code>Gemini 2.5 Pro&lt;/code>能力，开发者免费使用（有上限，但额度大方）。短短1天，Github上已冲到20K star，可见开发者对这款工具的热情之高！！&lt;/p>
&lt;p>开源项目地址： &lt;a class="link" href="https://github.com/google-gemini/gemini-cli" target="_blank" rel="noopener"
>https://github.com/google-gemini/gemini-cli&lt;/a>&lt;/p>
&lt;p>star记录，恐怖的垂直上升 😂😂&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4.png"
width="1190"
height="720"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4_hu_c46e188a206bac81.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-4_hu_d69e3ee6e9cbb9a4.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="396px"
>&lt;/p>
&lt;p>下面我们带来开箱试用体验！&lt;/p>
&lt;h2 id="安装">安装
&lt;/h2>&lt;p>&lt;code>Gemini-Cli&lt;/code>的安装，非常便捷，它依赖 &lt;code>node.js&lt;/code>, 确保本机安装 node.js 18以上版本，然后直接运行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npx https://github.com/google-gemini/gemini-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者用npm安装后，执行 &lt;code>gemini&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install -g @google/gemini-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gemini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就会进入命令行启动界面：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626.png"
width="1684"
height="935"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626_hu_e8a739450c02a658.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626_hu_22047bd4f424ee3a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;p>选择一个自己喜欢的编程主题，然后会提示你鉴权，通常可以选择用google账号登录即可，授权显示如下信息即可继续使用。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1.png"
width="1753"
height="778"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1_hu_f78089d2e5e4bbf8.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-1_hu_5930a9073c13303b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="225"
data-flex-basis="540px"
>&lt;/p>
&lt;p>授权以后，默认就拥有了Gemini 25 pro 等多个AI大模型的能力，并且非常 “壕” 地提供了 &lt;strong>每分钟60次，每天1000次&lt;/strong> 的AI调用，相比很多其他大模型还在以token数量进行限制，确实大气！ 对比 &lt;code>Cursor&lt;/code> 收费版每月500次的数量限制，估计Cursor要在厕所哭晕了~~&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2.png"
width="878"
height="457"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2_hu_fa329f28c6ed6678.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-2_hu_11cf7b2217936cc7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="192"
data-flex-basis="461px"
>&lt;/p>
&lt;h2 id="试用效果">试用效果
&lt;/h2>&lt;p>废话不多说，作为一个测试业者，先请它帮忙做一个基于AI的用例生成工具。&lt;/p>
&lt;p>给出指令如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">编写一个web程序，支持上传需求文档并调用ai能力转换为测试用例，用例以表格形式显示在页面上，包含用例ID、用例名称、描述、测试步骤、优
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 先级、通过标准、关联需求ID（可选）等字段
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>很快，经过短暂的分析，就给出了实现方案。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5.png"
width="1499"
height="887"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5_hu_5cf3f3142724e89e.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-5_hu_6847e6b58b410179.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="405px"
>&lt;/p>
&lt;p>开始具体操作过程中，会自动创建相关代码文件，并指引你逐步配合它完成从数据模拟到真正的AI能力集成等步骤。&lt;/p>
&lt;p>经过半个多小时的配合工作（主要是出现报错后把报错信息贴给它），最终我们成功实现了一个基本的AI用例生成工具。&lt;/p>
&lt;p>比如将我之前开源的测试练习站点的需求 &lt;code>req-sprint0.md&lt;/code> 上传：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 个人图书管理系统 - 迭代1 需求文档  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**版本**&lt;/span>：v1.0  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**目标**&lt;/span>：实现个人图书的基础增删改查功能  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事1：添加图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 添加新图书到我的书库  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以记录拥有的书籍  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准 (Given-When-Then):**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**成功添加**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在“添加图书”页面  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 填写必填字段（图书名称、作者）并点击提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统保存图书，显示“添加成功”提示，并跳转至图书列表页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**添加失败（校验缺失）**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户未填写“图书名称”或“作者”  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击提交按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统在对应字段下方显示红色错误提示  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事2：查看图书列表**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 查看所有图书列表  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以快速浏览藏书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**基础列表展示**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 存在至少一本图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 用户访问首页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 以表格形式展示所有图书（至少包含名称、作者、阅读状态）  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**空状态处理**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 无任何图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 用户访问首页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 显示“暂无图书，点击添加”的提示和跳转链接  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事3：编辑图书信息**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 修改图书信息  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 我可以更新书籍状态或备注  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**成功编辑**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户从列表页进入某图书的“编辑”页面  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 修改字段（如更新阅读状态为“已读”）并提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统保存修改，返回列表页并显示更新后的数据  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> &lt;span class="gs">**非法数据拦截**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在价格字段输入字母  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击提交  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统阻止提交并提示“请输入有效数字”  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事4：删除图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 删除不再需要的图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 保持书库整洁  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**删除操作**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在图书列表页  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击某图书的“删除”按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统移除该图书，列表实时刷新  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">#### **用户故事5：搜索图书**  
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**As a**&lt;/span> 图书收藏者  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**I want to**&lt;/span> 通过名称或作者搜索图书  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**So that**&lt;/span> 快速定位目标书籍  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gs">**验收标准:**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> &lt;span class="gs">**基础搜索**&lt;/span>  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Given* 用户在列表页顶部的搜索框输入关键词  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *When* 点击“搜索”按钮  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">   &lt;span class="k">-&lt;/span> *Then* 系统展示名称或作者匹配的图书（不区分大小写）  
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 字段定义（图书属性）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 字段         | 类型     | 必填 | 说明                          | 示例                 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|--------------|----------|------|-------------------------------|----------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 图书名称     | 文本     | ✓    | 书名（长度≤100字符）          | 《三体》             |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 作者         | 文本     | ✓    | 作者名（长度≤50字符）         | 刘慈欣               |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 简介         | 长文本   | ✗    | 图书描述（长度≤500字符）      | 科幻巨著...          |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 发行时间     | 日期     | ✗    | YYYY-MM-DD格式                | 2008-01-01          |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 发行价格     | 小数     | ✗    | 正数（≥0）                    | 68.5                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用户购买价格 | 小数     | ✗    | 正数（≥0）                    | 52.0                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用户备注     | 长文本   | ✗    | 读后感（长度≤1000字符）       | 震撼的宇宙观...      |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 阅读状态     | 枚举     | ✗    | 待读/已读/正在读（默认待读）  | 待读                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 在库状态     | 枚举     | ✗    | 在库/借入/借出/归档（默认在库）| 借出               |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 自评星级     | 整数     | ✗    | 1-5星（默认3星）              | 5                   |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 技术栈说明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 模块   | 技术选择              |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|--------|-----------------------|
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 后端   | Python + FastAPI      |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 数据库 | SQLite                |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 前端   | HTML/CSS + Bootstrap  |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| API交互| AJAX (Fetch API)      |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>开发的程序会调用本地的Ollama部署的deepseek，然后生成测试用例！ 界面如下：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3.png"
width="1582"
height="955"
srcset="https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3_hu_ca077b932780ddfa.png 480w, https://chengxiaqiucao.github.io/post/103-gemini-cli/Pasted-20250626-3_hu_e6d4c7356b9a612d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="397px"
>&lt;/p>
&lt;p>确实太香了！小伙伴们快安利起来~~&lt;/p>
&lt;hr>
&lt;p>回复 &lt;code>进群&lt;/code> 加入秋草的技术交流群，和小伙伴们分享技术，互换资讯~~
回复 &lt;code>大纲&lt;/code> 可查看秋草测试技术高级体系化课程详细目录 😉😉😉&lt;/p></description></item><item><title>Github月度新锐热门工具 - 202506</title><link>https://chengxiaqiucao.github.io/post/100-temp/</link><pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/100-temp/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/100-temp/snap_20250604.png" alt="Featured image of post Github月度新锐热门工具 - 202506" />&lt;p>上一篇，我们介绍了通过腾讯的智能编程助手开发了一款微信小程序，动态获取过去一个月新出现的最热门开源工具。&lt;/p>
&lt;p>初版虽然很快就搭建出来了，奈何bug不少，又经过数小时的不断调教，功能总算基本正常了。
&lt;img src="https://chengxiaqiucao.github.io/post/100-temp/snap_20250604.png"
width="377"
height="790"
srcset="https://chengxiaqiucao.github.io/post/100-temp/snap_20250604_hu_398679620c3ef8f7.png 480w, https://chengxiaqiucao.github.io/post/100-temp/snap_20250604_hu_c0ebe3de7cb5ff7c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="47"
data-flex-basis="114px"
>&lt;/p>
&lt;p>项目的Readme介绍文档：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/100-temp/snap_20250604-1.png"
width="370"
height="786"
srcset="https://chengxiaqiucao.github.io/post/100-temp/snap_20250604-1_hu_7bed51d8dddf4aa.png 480w, https://chengxiaqiucao.github.io/post/100-temp/snap_20250604-1_hu_6f4f94686a931250.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="47"
data-flex-basis="112px"
>&lt;/p>
&lt;p>以下就是上一个月最受欢迎的几个开源项目，我们也一起了解下，现在最受关注的项目都是哪些？&lt;/p>
&lt;h2 id="1-bytedancedeer-flow">1. &lt;strong>bytedance/deer-flow&lt;/strong>
&lt;/h2>&lt;p>字节跳动的&lt;strong>深度研究框架&lt;/strong>，基于LangChain/LangGraph构建多智能体（Multi-Agent）系统，支持复杂任务如自动生成研究报告、PPT及双人播客（借助火山引擎TTS）。其创新点包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Replay模式&lt;/strong>：可视化多轮Agent协作流程，便于调试与学习。&lt;/li>
&lt;li>&lt;strong>人机协同&lt;/strong>：用户可通过自然语言实时修改AI生成内容，动态调整研究方向和细节。&lt;/li>
&lt;li>&lt;strong>高效架构&lt;/strong>：通过&amp;quot;Handoffs&amp;quot;机制减少Token消耗，优化任务执行流程。&lt;br>
&lt;strong>适用场景&lt;/strong>：自动化内容生成、学术研究助手。需Python 3.12+和Node.js 22+环境部署。&lt;/li>
&lt;/ul>
&lt;p>总之，把AI打造成一个小团队，协作完成一些复杂任务。而且随时插手实时改变它的工作方向，不至于看AI在错误的方向上一路狂奔！&lt;/p>
&lt;blockquote>
&lt;p>GitHub：https://github.com/bytedance/deer-flow&lt;/p>&lt;/blockquote>
&lt;h2 id="2-agentcodeecursor-free-everyday">2. &lt;strong>agentcodee/cursor-free-everyday&lt;/strong>
&lt;/h2>&lt;p>破解&lt;strong>Cursor Pro版限制&lt;/strong>的工具，解决官方14天试用期后的功能封锁问题（如GPT-4调用次数限制）。特点包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自动账号管理&lt;/strong>：一键获取临时账号，绕过设备绑定限制。&lt;/li>
&lt;li>&lt;strong>全平台支持&lt;/strong>：兼容Windows/macOS/Linux，提供图形化激活程序。&lt;/li>
&lt;li>&lt;strong>免费开源&lt;/strong>：社区驱动，持续更新适配新版本。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>一句话&lt;/strong>：绕过Cursor IDE的14天试用限制，白嫖GPT-4写代码。&lt;/p>
&lt;blockquote>
&lt;p>GitHub：https://github.com/agentcodee/cursor-free-everyday&lt;/p>&lt;/blockquote>
&lt;h2 id="3-ngxsonsmolvlm-realtime-webcam">3. &lt;strong>ngxson/smolvlm-realtime-webcam&lt;/strong>
&lt;/h2>&lt;p>基于&lt;strong>轻量视觉模型SmolVLM&lt;/strong>（20亿参数）的实时摄像头处理工具，专为边缘计算设计。核心优势：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>低资源需求&lt;/strong>：预加载模型+多线程优化，低配设备可流畅运行。&lt;/li>
&lt;li>&lt;strong>即插即用&lt;/strong>：提供Python/Node.js脚手架，快速实现物体识别、人流统计等功能。&lt;/li>
&lt;li>&lt;strong>端侧适配&lt;/strong>：图像Token压缩率提升9倍，推理速度较同类模型快3-16倍。&lt;/li>
&lt;/ul>
&lt;p>用2B参数小模型就可以在普通电脑跑实时图像识别。&lt;/p>
&lt;blockquote>
&lt;p>GitHub：https://github.com/ngxson/smolvlm-realtime-webcam&lt;/p>&lt;/blockquote>
&lt;h2 id="4-enescingozawesome-n8n-templates生态项目">4. &lt;strong>enescingoz/awesome-n8n-templates&lt;/strong>（生态项目）
&lt;/h2>&lt;p>&lt;strong>n8n自动化工具的模板库&lt;/strong>，提供开箱即用的工作流示例（如滴答清单同步Notion）。技术亮点：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>事件驱动架构&lt;/strong>：通过HTTP节点、Shell脚本节点灵活集成第三方API。&lt;/li>
&lt;li>&lt;strong>低成本自托管&lt;/strong>：支持Docker部署，替代Zapier等高成本方案。&lt;/li>
&lt;li>&lt;strong>扩展性&lt;/strong>：可结合OpenAI API增强自动化逻辑（如邮件自动分类）。&lt;/li>
&lt;/ul>
&lt;p>n8n是智能工作流的主流方案，这个库其实就是提供大量抄作业模板&lt;/p>
&lt;blockquote>
&lt;p>GitHub：https://github.com/enescingoz/awesome-n8n-templates&lt;/p>&lt;/blockquote>
&lt;h2 id="5-ag-ui-protocolag-ui">5. &lt;strong>ag-ui-protocol/ag-ui&lt;/strong>
&lt;/h2>&lt;p>&lt;strong>AI Agent与前端交互协议&lt;/strong>，标准化多智能体协作的通信流程。核心特性：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>事件驱动&lt;/strong>：定义16种标准事件（如状态同步、流式消息），支持SSE/WebSocket传输。&lt;/li>
&lt;li>&lt;strong>框架兼容&lt;/strong>：无缝接入LangGraph、CrewAI等Agent框架。&lt;/li>
&lt;li>&lt;strong>安全路由&lt;/strong>：通过Secure Proxy中间件保障通信安全。&lt;/li>
&lt;/ul>
&lt;p>通过这个库，规范化了AI和前端界面的交互标准，突破长时间等待AI出结果以及在任务执行中随时干预的优点。&lt;/p>
&lt;blockquote>
&lt;p>GitHub：https://github.com/ag-ui-protocol/ag-ui&lt;/p>&lt;/blockquote></description></item><item><title>打造个人知识库，wsl+ollama部署deepseek与vscode集成</title><link>https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</link><pubDate>Thu, 15 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3.png" alt="Featured image of post 打造个人知识库，wsl+ollama部署deepseek与vscode集成" />&lt;p>目前大模型应用如火如荼，各大LLM如&lt;code>Deepseek&lt;/code>也都提供了在线的助手服务，结合&lt;code>mcp-server&lt;/code>还可以进一步拓展到本地的工具能力。&lt;/p>
&lt;p>但对于一些和本地业务和数据强相关的资料，在线的大模型训练数据集一般并不能涵盖，特别还有一些敏感或对安全要求很高的数据，使用在线大模型并不现实。所以我们个人应用和实际工作中，本地部署大模型并加入本地知识库也是一个刚性需求。&lt;/p>
&lt;p>本文就记录下在WSL中通过Ollama和CherryStudio搭建本地大模型，并将本地模型集成到VsCode的AI助手的过程分享。&lt;/p>
&lt;h2 id="ollama简介">Ollama简介
&lt;/h2>&lt;p>Ollama 是一个基于Go 语言开发的简单易用的本地大语言模型运行框架，专为在本地机器上便捷部署和运行大型语言模型（LLM）而设计。Ollama 是 &lt;strong>Omni-Layer Learning Language Acquisition Model（全方位学习语言接受模型）&lt;/strong> 的简写。&lt;/p>
&lt;h2 id="deepseek本地模型及运行配置">Deepseek本地模型及运行配置
&lt;/h2>&lt;p>Deepseek目前根据本地部署包含的参数集大小，又包含 &lt;strong>1.5B&lt;/strong> 到 &lt;strong>671B&lt;/strong> 等多个版本，参数集越大则AI越智能，但相应地对硬件要求则越高。&lt;/p>
&lt;p>一般对应不同deepseek模型版本，推荐的硬件配置如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>模型型号&lt;/th>
&lt;th>CPU&lt;/th>
&lt;th>内存&lt;/th>
&lt;th>硬盘&lt;/th>
&lt;th>显存&lt;/th>
&lt;th>适用场景&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>DeepSeek-R1-1.5B&lt;/td>
&lt;td>4 核&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>3 GB+&lt;/td>
&lt;td>非必需（若需 CPU 加速可选 GTX 1650）&lt;/td>
&lt;td>个人使用，如笔记本电脑、台式电脑等&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-7B&lt;/td>
&lt;td>8 核&lt;/td>
&lt;td>16 GB+&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>8 GB+显存（如 RTX 3070/4060）&lt;/td>
&lt;td>中小型企业本地开发&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-8B&lt;/td>
&lt;td>8 核&lt;/td>
&lt;td>16 GB+&lt;/td>
&lt;td>8 GB+&lt;/td>
&lt;td>8 GB+显存&lt;/td>
&lt;td>中小型企业本地开发（提升精度的轻量级任务）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-14B&lt;/td>
&lt;td>12 核&lt;/td>
&lt;td>32 GB+&lt;/td>
&lt;td>15 GB+&lt;/td>
&lt;td>16 GB+显存（如RTX 4090 或 A5000）&lt;/td>
&lt;td>中小型企业本地开发（中量级任务）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-32B&lt;/td>
&lt;td>16 核&lt;/td>
&lt;td>64 GB+&lt;/td>
&lt;td>30 GB+&lt;/td>
&lt;td>24 GB+显存（如 A100 40 GB 或 RTX 3090）&lt;/td>
&lt;td>专业领域任务，如医疗、科研、法律&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-70B&lt;/td>
&lt;td>32 核&lt;/td>
&lt;td>128 GB+&lt;/td>
&lt;td>70 GB+&lt;/td>
&lt;td>多卡并行（如 2x A100 80GB 或 4x RTX 4090）&lt;/td>
&lt;td>大型企业或科研机构，专业领域任务处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DeepSeek-R1-671B（满血版）&lt;/td>
&lt;td>64 核&lt;/td>
&lt;td>512 GB+&lt;/td>
&lt;td>300 GB+&lt;/td>
&lt;td>多卡并行（如 8x A100/H100）&lt;/td>
&lt;td>国家级科研任务处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>对我们个人用户来说，根据自己的电脑配置情况，通常选择1.5B到14B。 当然如果不是高频使用本地模型，个人建议可以将配置和推荐模型降一档匹配。&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="利用ollama在wsl中部署本地deepseek">利用Ollama在WSL中部署本地Deepseek
&lt;/h2>&lt;p>因为笔者当前主要是希望将一些本地数据接入Deepseek，也没有高频使用本地LLM的需求。所有这里我选择部署 &lt;strong>DeepSeek-R1-14B&lt;/strong>， 另外为了避免每次启动电脑都因为LLM运行占用大量资源，所以这里我希望在Windows电脑的WSL下运行LLM&lt;/p>
&lt;h3 id="wsl配置">WSL配置
&lt;/h3>&lt;p>如果当前系统还没有启用WSL，可以先启用（过程不再详述， Win11中运行WSL install [对应Linux发行版] 即可安装）&lt;/p>
&lt;p>通过命令行查看&lt;strong>WSL&lt;/strong>状态:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-batch" data-lang="batch">&lt;span class="line">&lt;span class="cl">C&lt;span class="p">:&lt;/span>&lt;span class="nl">\qiucao&lt;/span>&lt;span class="c1">&amp;gt;wsl --status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">默认分发: Ubuntu-24.04
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">默认版本: 2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>WSL默认的网络模式是NAT，这里可以通过&lt;code>WSL Setting&lt;/code>程序，修改下当前配置，改为&lt;code>Mirrored&lt;/code>镜像模式，共用宿主机网络。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1.png"
width="1607"
height="969"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1_hu_251e83a643f91563.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-1_hu_d3b3405b54f8e912.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="398px"
>&lt;/p>
&lt;h3 id="安装ollama">安装Ollama
&lt;/h3>&lt;p>进入Ollama官网(&lt;a class="link" href="https://ollama.com/" target="_blank" rel="noopener"
>https://ollama.com/&lt;/a>)下载界面, 因为我们是在WSL中部署，所以选择Linux安装。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419.png"
width="1885"
height="936"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419_hu_99722e55ae18c4a1.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419_hu_89a14deb9f0b4320.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="201"
data-flex-basis="483px"
>&lt;/p>
&lt;p>执行如下命令，等待下载并自动安装完成。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">curl -fsSL https://ollama.com/install.sh &lt;span class="p">|&lt;/span> sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装完成查看版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~$ ollama --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ollama version is 0.6.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="部署deepseek">部署deepseek
&lt;/h3>&lt;p>完成ollama安装后，就可以根据Ollama提供的大模型清单，选择对应大模型进行安装。目前支持的大模型清单，可以从官网如下地址查询：https://ollama.com/library&lt;/p>
&lt;p>执行如下命令下载并运行deepseek&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ollama run deepseek-r1:14b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek.png"
width="1193"
height="243"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek_hu_1026ff78b8603fed.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_deepseek_hu_9d7ff43704722fde.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="490"
data-flex-basis="1178px"
>&lt;/p>
&lt;p>安装成功后可以提问测试一下deepseek是否已正常提供服务&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2.png"
width="1404"
height="158"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2_hu_ed2f4389c23dba39.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-2_hu_82a3907315705e92.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="888"
data-flex-basis="2132px"
>&lt;/p>
&lt;h3 id="添加知识库分析模型">添加知识库分析模型
&lt;/h3>&lt;p>至此，Deepseek其实已在本地部署。但如果要通过Deepseek使用本地数据和文档，我们还需要部署一个&lt;strong>语义向量模型&lt;/strong>（Embedding Model），用来将本地数据转化为大模型可分析的知识库数据。这里我们选择 &lt;strong>bge-m3&lt;/strong> 模型，这是一个通用向量模型，可以支持多语言、长文本和多种检索方式。&lt;/p>
&lt;p>执行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ollama pull bge-m3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge.png"
width="1141"
height="198"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge_hu_63310f4bc6d28a9e.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/ollama_bge_hu_9a9373e160733582.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="576"
data-flex-basis="1383px"
>&lt;/p>
&lt;h2 id="用cherry-studio管理知识库并提供本地交互界面">用Cherry Studio管理知识库并提供本地交互界面
&lt;/h2>&lt;p>安装完Deepseek后，虽然我们可以在命令界面下和deepseek进行交互，但还是不够友好，包括对本地知识库的管理也不够方便。所以这里我们还可以安装一个开源的本地AI助手和知识库客户端Cherry Studio。从官网（https://cherry-ai.com）下载windows版本安装即可。
&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3.png"
width="1869"
height="861"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3_hu_162bef18952f99b6.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/snap_20250419-3_hu_de42598554b32e8a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="520px"
>&lt;/p>
&lt;p>打开Cherry Studio，按如下步骤添加我们刚刚通过ollama部署的Deepseek&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry.png"
width="1337"
height="821"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_hu_650d185a5428fb5.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_hu_2420da097208e561.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;p>会看到已经安装好的模型，添加进来
&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model.png"
width="972"
height="659"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model_hu_1427909c6f167c6d.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/cherry_model_hu_50b783a5da211168.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="147"
data-flex-basis="353px"
>
然后就可以利用Cherry Studio的知识库管理，将我们需要加入的本地文档纳入大模型的数据集中。这里包括直接添加文件、直接指定目录、从网站采集等多种方式，非常方便。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge.png"
width="1347"
height="828"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge_hu_a4e9beef670ffd2f.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/add_knowledge_hu_1187620292c81a03.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="390px"
>&lt;/p>
&lt;h2 id="集成本地deepseek到vscode">集成本地Deepseek到vscode
&lt;/h2>&lt;p>而有了本地的LLM后，如果我们希望在vscode中使用，可以利用vscode 的 &lt;code>AI Toolkit&lt;/code> 插件，按如下方式添加本地LLM&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1.png"
width="1914"
height="959"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1_hu_833830a04db48530.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_1_hu_f4c99c1236cd540c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="199"
data-flex-basis="478px"
>&lt;/p>
&lt;p>vscode中测试下本地库的能力&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2.png"
width="1433"
height="1009"
srcset="https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2_hu_7715fc702df564d2.png 480w, https://chengxiaqiucao.github.io/post/094-deepseek%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/vs_code_2_hu_c5b07401fbe6ecb3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="340px"
>&lt;/p>
&lt;p>以上就是我们部署本地Deepseek的实践分享&lt;/p></description></item><item><title>测试开发如何善用Cursor？</title><link>https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/</guid><description>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor.png" alt="Featured image of post 测试开发如何善用Cursor？" />&lt;h2 id="前言">前言
&lt;/h2>&lt;p>很多刚接触 AI 辅助编程的小伙伴应该都听说过 &lt;code>Cursor&lt;/code> 的强大，对初学者而言，免费版Cursor的免费额度也足够让大家体验它的强悍能力。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor.png"
width="1412"
height="640"
srcset="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_hu_cadbb1d864670952.png 480w, https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_hu_916744822785806f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="529px"
>&lt;/p>
&lt;p>可是在实际应用过程中，从我的实际经验，如果只是把它当作一个沟通对象，像和人沟通那样来完成开发任务，却会浪费大量时间在纠正它的理解偏差，而且极大概率在某一次对话后，把原来的成果改得面目全非，大量努力付诸东流。&lt;/p>
&lt;h2 id="cursor的12条军规">Cursor的12条军规
&lt;/h2>&lt;p>其实 Cursor 是否能更有效地发挥作用，跟它的使用方式有很大关系。Cursor的首席设计师 &lt;strong>Ryo Lu&lt;/strong> 早前曾在 X 上给出善用 Cursor 的12条军规：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules.png"
width="737"
height="1465"
srcset="https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules_hu_3a464fc067e74c07.png 480w, https://chengxiaqiucao.github.io/post/093-cursor%E7%9A%8412rules/cursor_12_rules_hu_ef78950da28db6be.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="50"
data-flex-basis="120px"
>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>明确项目规则：&lt;/strong> 在项目开始前，设置5-10条清晰的项目规则，让Cursor了解你的代码结构和约束。对于现有代码库，可以尝试使用&lt;code>/generate rules&lt;/code>命令来生成规则。&lt;/li>
&lt;li>&lt;strong>具体化提示：&lt;/strong> 在提示中要非常具体，详细说明技术栈、期望行为和限制，就像编写一个迷你规范。&lt;/li>
&lt;li>&lt;strong>按文件操作：&lt;/strong> 每次处理一小部分，生成、测试并审查，保持专注。&lt;/li>
&lt;li>&lt;strong>测试先行：&lt;/strong> 优先编写测试，锁定测试用例，然后生成代码直到所有测试通过。&lt;/li>
&lt;li>&lt;strong>严格审查与修正：&lt;/strong> 始终审查AI的输出，并手动修复任何错误，然后将这些修正作为示例告知Cursor。&lt;/li>
&lt;li>&lt;strong>限定作用域：&lt;/strong> 使用&lt;code>@ file&lt;/code>, &lt;code>@ folders&lt;/code>, &lt;code>@ git&lt;/code>等命令来将Cursor的注意力限制在代码库的特定部分。&lt;/li>
&lt;li>&lt;strong>提供完整上下文：&lt;/strong> 将设计文档和清单保存在&lt;code>.cursor/&lt;/code>目录下，以便Cursor代理能够充分理解下一步需要做什么。&lt;/li>
&lt;li>&lt;strong>直接修改错误代码：&lt;/strong> 如果生成的代码有误，直接手动修改。Cursor从编辑中学习的速度比从解释中学习更快。&lt;/li>
&lt;li>&lt;strong>利用聊天历史：&lt;/strong> 使用聊天历史来迭代旧的提示，而无需从头开始。&lt;/li>
&lt;li>&lt;strong>明智选择模型：&lt;/strong> 根据需求有目的地选择模型。例如，Gemini适用于追求精确性，而Claude适用于需要更广泛知识的场景。&lt;/li>
&lt;li>&lt;strong>处理新栈或不熟悉栈：&lt;/strong> 在处理新或不熟悉的技术栈时，粘贴相关文档链接。让Cursor逐行解释所有错误和修复方法。&lt;/li>
&lt;li>&lt;strong>优化大型项目性能：&lt;/strong> 对于大型项目，让其在夜间进行索引，并限制上下文范围以保持性能的流畅性。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Using Cursor well = fast, clean code.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using it wrong = AI spaghetti you’ll be cleaning up all week.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Here’s how to actually use it right:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. Set 5-10 clear project rules upfront so Cursor knows your structure and constraints. Try /generate rules for existing codebases.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. Be specific in prompts. Spell out tech stack, behavior, and constraints like a mini spec.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. Work file by file; generate, test, and review in small, focused chunks.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. Write tests first, lock them, and generate code until all tests pass.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. Always review AI output and hard‑fix anything that breaks, then tell Cursor to use them as examples.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. Use @ file, @ folders, @ git to scope Cursor’s attention to the right parts of your codebase.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. Keep design docs and checklists in .cursor/ so the agent has full context on what to do next.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8. If code is wrong, just write it yourself. Cursor learns faster from edits than explanations.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9. Use chat history to iterate on old prompts without starting over.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10. Choose models intentionally. Gemini for precision, Claude for breadth.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">11. In new or unfamiliar stacks, paste in link to documentation. Make Cursor explain all errors and fixes line by line.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12.Let big projects index overnight and limit context scope to keep performance snappy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Structure and control wins (for now)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Treat Cursor agent like a powerful junior — it can go far, fast, if you show it the way.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="测试开发如何善用cursor">测试开发如何善用Cursor?
&lt;/h2>&lt;p>而作为一个测试开发或自动化测试工程师，我们在编写相关测试脚本或工具时，如何善用 Cursor 更好帮助我们提升效率和产出呢？本文我们参照以上 12 条规则，总结相关的实践指南。&lt;/p>
&lt;h3 id="初始化与上下文构建将cursor训练成测试领域专家">初始化与上下文构建——将Cursor训练成“测试领域专家”
&lt;/h3>&lt;p>在项目启动或介入初期，首要任务是让Cursor充分理解当前测试环境的规范与约束。高质量的上下文输入，是高质量代码输出的前提。&lt;/p>
&lt;h4 id="明确项目测试规则与约定-规则1">明确项目测试规则与约定 (规则1)
&lt;/h4>&lt;p>在自动化测试项目中，代码规范、框架选型和设计模式的统一至关重要。基于&lt;code>规则1：明确项目规则&lt;/code> ，我们可以利用&lt;code>.cursor/rules.md&lt;/code>文件，将这些隐性的团队知识显性化，为Cursor提供一份清晰的行动纲领 。而对于存量项目，还可先使用&lt;code>/generate rules&lt;/code>命令初步提炼规则，再进行人工增补。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：在一个基于Python Flask的Web项目中，测试技术栈为Pytest与Selenium。可以在&lt;code>.cursor/rules.md&lt;/code>中定义如下规则：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .cursor/rules.md
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">所有单元测试文件命名为&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UI测试文件命名为&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">ui_test_&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">py&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">测试函数必须以&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">test_&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">开头&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">使用&lt;/span>&lt;span class="n">Pytest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fixture进行测试环境的设置与销毁&lt;/span>&lt;span class="err">（&lt;/span>&lt;span class="n">setup&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">and&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">teardown&lt;/span>&lt;span class="err">）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">UI测试遵循Page&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object模式&lt;/span>&lt;span class="err">，页面对象进行封装&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">避免使用硬编码等待，优先采用&lt;/span>&lt;span class="n">WebDriver的显式等待机制&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">cite_start&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">测试报告统一使用&lt;/span>&lt;span class="n">Allure框架生成&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="提供详尽的指令以模拟测试场景-规则2">提供详尽的指令以模拟“测试场景” (规则2)
&lt;/h4>&lt;p>与AI的交互质量直接决定输出代码的质量。自动化测试的指令尤其需要精确性，因为它必须完整描述被测功能、输入数据、预期行为乃至异常路径。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：为用户登录功能编写集成测试。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>效果不佳的指令&lt;/strong>：&lt;code>写一个登录测试。&lt;/code>&lt;/li>
&lt;li>&lt;strong>结构清晰的指令&lt;/strong>：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">请使用Pytest框架，为Flask应用的用户登录功能（端点为POST /api/login，接收username和password）编写集成测试。需要覆盖以下三个场景：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 成功登录 (使用admin/password123)；
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 密码错误 (使用admin/wrongpass)；
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 用户不存在 (使用nonexistent/anypass)。对于成功场景，断言HTTP状态码为200且响应中包含非空的token。对于失败场景，断言状态码为401。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="迭代式开发与修正实现测试代码的持续集成">迭代式开发与修正——实现“测试代码的持续集成”
&lt;/h3>&lt;p>将复杂的测试任务分解，通过“生成-验证-修正”的敏捷循环进行开发，是确保代码质量和项目进度的有效策略。&lt;/p>
&lt;h4 id="小步快跑增量验证-规则3">小步快跑，增量验证 (规则3)
&lt;/h4>&lt;p>应规避一次性生成整个复杂模块所有测试的诱惑。&lt;/p>
&lt;p>正确的做法是将任务分解为最小可验证单元，逐个击破。&lt;/p>
&lt;p>例如，在为一组RESTful API编写测试时，应按“创建用户 -&amp;gt; 获取用户 -&amp;gt; 更新用户 -&amp;gt; 删除用户”的逻辑顺序，逐一生成和验证测试代码&lt;/p>
&lt;p>这种方式有助于快速定位问题，避免错误的累积。&lt;/p>
&lt;h4 id="测试驱动开发tdd的应用-规则4">测试驱动开发（TDD）的应用 (规则4)
&lt;/h4>&lt;p>测试驱动开发是保障代码质量的经典模式，Cursor可以成为该模式的强大加速器。工程师先定义函数的预期行为（即编写测试用例），再让AI生成满足这些测试的实现代码。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：实现一个折扣计算函数&lt;code>calculate_discount(price, discount_rate)&lt;/code>。&lt;/p>
&lt;ol>
&lt;li>&lt;strong>定义测试&lt;/strong>: 首先要求Cursor：&lt;code>生成一个Pytest测试用例，用于测试calculate_discount函数。当price=100, discount_rate=0.1时，预期返回值为90；当discount_rate为负数时，应抛出ValueError异常。&lt;/code>&lt;/li>
&lt;li>&lt;strong>生成实现&lt;/strong>: 在测试代码&lt;code>test_calculate_discount.py&lt;/code>生成后，运行它（此时会失败），然后对Cursor发出新指令：&lt;code>请根据刚才生成的测试用例，实现calculate_discount函数的功能。&lt;/code>&lt;/li>
&lt;li>&lt;strong>验证闭环&lt;/strong>: Cursor生成函数实现后，再次运行测试，直至全部通过。&lt;/li>
&lt;/ol>
&lt;h4 id="主动纠正教学相长-规则5">主动纠正，教学相长 (规则5)
&lt;/h4>&lt;p>需要注意的是，AI生成的代码并非永远正确，而工程师的审查和修正是最后一道防线。直接在代码中修正错误，是训练Cursor最有效的方式，远胜于用自然语言向其解释。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
比如Cursor在生成的UI测试中，使用了一个不稳定且错误的XPath定位器&lt;code>//button[@id='submit']&lt;/code>。在测试运行失败后，我们可以直接手动将其修改为正确的定位器，例如 &lt;code>//input[@value='Login']&lt;/code>。修正后，可以在聊天中备注一句以强化其学习：&lt;code>“我已修正登录按钮的定位器，新的定位器更准确。请在后续任务中参考此模式。”&lt;/code> 。&lt;/p>
&lt;h3 id="精细化管理实现测试资源的智能调度">精细化管理——实现“测试资源的智能调度”
&lt;/h3>&lt;p>在大型项目中，如何让Cursor聚焦于正确的信息，是决定其效率和相关性的关键。&lt;/p>
&lt;h4 id="精准限定上下文范围-规则6">精准限定上下文范围 (规则6)
&lt;/h4>&lt;p>在庞大的代码库中，测试任务往往只与特定模块或服务相关。通过使用&lt;code>@folders&lt;/code>或&lt;code>@file&lt;/code>命令，可以显著缩小Cursor的分析范围，让其专注于必要的上下文。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
当为&lt;code>user_service&lt;/code>微服务编写API测试时，所有相关代码位于&lt;code>services/user_service/&lt;/code>目录。此时，应在提问前先输入&lt;code>@folders services/user_service/&lt;/code>，然后再描述具体的测试需求。&lt;/p>
&lt;h4 id="沉淀项目知识以辅助决策-规则7">沉淀项目知识以辅助决策 (规则7)
&lt;/h4>&lt;p>可以将测试策略、UI定位器优先级、数据模拟规范等关键信息沉淀为文档，并存放于&lt;code>.cursor/&lt;/code>目录中。这相当于为Cursor提供了一套“项目级知识库”。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
创建&lt;code>.cursor/ui_locators_priority.md&lt;/code>文件，内容为：“UI元素定位优先顺序：ID &amp;gt; Name &amp;gt; CSS Selector &amp;gt; XPath”。在提问时便可引用：&lt;code>请参考.cursor/ui_locators_priority.md中的策略，为注册页面的‘提交’按钮生成Selenium定位代码。&lt;/code>。&lt;/p>
&lt;h3 id="问题解决与效率优化化身测试效率加速器">问题解决与效率优化——化身“测试效率加速器”
&lt;/h3>&lt;p>掌握高级用法，能进一步将Cursor从日常助手，转变为解决复杂问题和加速学习的利器。&lt;/p>
&lt;h4 id="智能选择ai模型-规则10">智能选择AI模型 (规则10)
&lt;/h4>&lt;p>不同的AI模型具有不同的能力侧重。根据测试任务的特性选择合适的模型，可以事半功倍。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Gemini (精度优先)&lt;/strong>：适用于生成语法要求严格的单元测试、算法校验、或使用特定框架（如React Testing Library）的精细化测试代码。&lt;/li>
&lt;li>&lt;strong>Claude (广度优先)&lt;/strong>：更适合需要理解大量上下文的场景，如根据API文档生成全面的集成测试、设计端到端（E2E）测试场景，或在不熟悉的代码库中探索和建议测试点。&lt;/li>
&lt;/ul>
&lt;h4 id="利用文档快速掌握新技术-规则11">利用文档快速掌握新技术 (规则11)
&lt;/h4>&lt;p>当团队引入新的测试框架（如Playwright）时，工程师可以利用Cursor快速跨越学习曲线。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：
直接向Cursor提供Playwright官方文档链接，并要求其生成示例代码。当生成的代码运行出错时，可以粘贴错误信息并提问：“这是运行Playwright脚本时出现的错误，请根据官方文档逐行解释错误原因，并提供修复建议。”。&lt;/p>
&lt;h4 id="限制上下文范围-规则12">限制上下文范围 (规则12)
&lt;/h4>&lt;p>当项目代码量比较大时，通过过夜索引，并限制上下文范围。&lt;/p>
&lt;p>&lt;strong>实践案例&lt;/strong>：&lt;/p>
&lt;p>在处理大型测试项目时，允许Cursor在后台处理索引，到第二天再进行具体的代码生成，从而保持性能流畅。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 优先索引核心模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@folder tests/unit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 延迟加载集成测试&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@defer tests/integration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结
&lt;/h2>&lt;p>对于我们实际工作而言，成功运用Cursor的本质，是一个从“指令下达者”转变为“智能协作者”和“知识引导者”的过程。着眼点在于突出其 &lt;strong>智能协作、知识沉淀和效率提升&lt;/strong> 的系统性作用。&lt;/p></description></item><item><title>提示词工程权威指南：赋能软件测试的艺术与科学</title><link>https://chengxiaqiucao.github.io/post/080-%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B/</link><pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate><guid>https://chengxiaqiucao.github.io/post/080-%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B/</guid><description>&lt;p>在人工智能（AI）和大型语言模型（LLM）浪潮席卷全球的今天，软件测试领域正迎来一场深刻的变革。传统的测试方法正在与前沿的AI技术相融合，而**提示词工程（Prompt Engineering）**正是驾驭这场变革的核心技能。本指南将深入探讨提示词工程的理论、实践与高级技巧，并提供一系列面向软件测试岗位的具体案例，旨在帮助测试工程师和团队有效利用AI提升测试效率、覆盖率和深度。&lt;/p>
&lt;hr>
&lt;h3 id="第一章初识提示词工程与ai高效对话的艺术">第一章：初识提示词工程——与AI高效对话的艺术
&lt;/h3>&lt;h4 id="11-什么是提示词工程">1.1 什么是提示词工程？
&lt;/h4>&lt;p>&lt;strong>提示词工程&lt;/strong>是一门旨在设计、构建和优化输入文本（即“提示词”）的学科，其目的是引导大型语言模型（LLM）如GPT-4、Claude等，生成我们期望的、高质量且相关的输出。如果说LLM是一个强大的、拥有海量知识的引擎，那么提示词就是控制这个引擎方向盘和油门。&lt;/p>
&lt;p>对于软件测试而言，提示词工程不仅仅是“向AI提问”，它是一种&lt;strong>战略性的沟通方式&lt;/strong>。通过精心设计的提示词，测试人员可以驱使AI完成一系列复杂的测试任务，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>生成测试用例&lt;/strong>：基于需求文档、用户故事或代码片段，自动创建功能、边界、异常等各类测试用例。&lt;/li>
&lt;li>&lt;strong>创建测试数据&lt;/strong>：生成多样化、符合特定格式和业务规则的测试数据。&lt;/li>
&lt;li>&lt;strong>编写自动化脚本&lt;/strong>：辅助编写或直接生成Selenium、Cypress、Playwright等框架的自动化测试脚本。&lt;/li>
&lt;li>&lt;strong>分析测试结果&lt;/strong>：对大量的测试日志和报告进行摘要、分类和根本原因分析。&lt;/li>
&lt;li>&lt;strong>模拟用户行为&lt;/strong>：创建符合特定用户画像的交互场景，用于用户验收测试（UAT）或探索性测试。&lt;/li>
&lt;/ul>
&lt;p>掌握提示词工程，意味着测试工程师可以将繁琐、重复性的工作交由AI处理，从而将更多精力投入到更具创造性和战略性的测试活动中。&lt;/p>
&lt;h4 id="12-核心理念清晰具体有上下文">1.2 核心理念：清晰、具体、有上下文
&lt;/h4>&lt;p>成功的提示词工程遵循一个核心原则：&lt;strong>Garbage In, Garbage Out (GIGO)&lt;/strong>。你提供给AI的信息质量直接决定了其输出的质量。因此，一个优秀的提示词通常具备以下特点：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>清晰明确 (Clear &amp;amp; Specific)&lt;/strong>：避免使用模糊、笼统的语言。直接告诉AI你想要什么。&lt;/li>
&lt;li>&lt;strong>提供上下文 (Contextual)&lt;/strong>：为AI提供充足的背景信息，如被测功能描述、相关代码、用户画像、业务规则等。&lt;/li>
&lt;li>&lt;strong>指定角色 (Role Assignment)&lt;/strong>：让AI扮演一个特定的角色，例如“你是一位资深的软件测试专家”，这有助于模型以更专业的视角和口吻进行回应。&lt;/li>
&lt;li>&lt;strong>明确输出格式 (Format Specification)&lt;/strong>：清晰地定义你希望得到的输出格式，如JSON、CSV、Markdown表格、项目列表等。&lt;/li>
&lt;li>&lt;strong>迭代优化 (Iterative Refinement)&lt;/strong>：很少有提示词能一次就达到完美。准备好根据AI的反馈进行多次尝试和调整。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="第二章提示词工程术语宝典">第二章：提示词工程术语宝典
&lt;/h3>&lt;p>为了更好地理解和应用提示词工程，熟悉以下关键术语至关重要。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>术语 (Term)&lt;/strong>&lt;/td>
&lt;td>&lt;strong>中文解释&lt;/strong>&lt;/td>
&lt;td>&lt;strong>说明&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Prompt&lt;/strong>&lt;/td>
&lt;td>提示词&lt;/td>
&lt;td>用户提供给LLM的输入文本，用于引导其生成回应。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Zero-shot Prompting&lt;/strong>&lt;/td>
&lt;td>零样本提示&lt;/td>
&lt;td>在不提供任何示例的情况下，直接要求LLM完成任务。适用于模型已经熟练掌握的任务。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Few-shot Prompting&lt;/strong>&lt;/td>
&lt;td>少样本提示&lt;/td>
&lt;td>在提示词中提供少量（通常是1-5个）示例，向LLM展示期望的输入输出格式和风格。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Chain-of-Thought (CoT) Prompting&lt;/strong>&lt;/td>
&lt;td>思维链提示&lt;/td>
&lt;td>指导LLM在给出最终答案前，先进行一步一步的逻辑推理。通过加入“让我们一步一步地思考”等短语来触发。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Role Prompting / Persona&lt;/strong>&lt;/td>
&lt;td>角色提示/人设&lt;/td>
&lt;td>为LLM设定一个特定的角色或身份（如“资深安全测试工程师”），以影响其回应的风格、口吻和专业深度。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Context Window&lt;/strong>&lt;/td>
&lt;td>上下文窗口&lt;/td>
&lt;td>LLM在一次对话中能够记住和处理的信息量（以token计算）。超出此窗口的信息将被遗忘。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Token&lt;/strong>&lt;/td>
&lt;td>令牌&lt;/td>
&lt;td>LLM处理文本的基本单位，可以是一个单词、一个字符或一个词根。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Hallucination&lt;/strong>&lt;/td>
&lt;td>幻觉&lt;/td>
&lt;td>LLM生成看似合理但实际上是虚假或与事实不符的信息的现象。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Temperature&lt;/strong>&lt;/td>
&lt;td>温度参数&lt;/td>
&lt;td>一个控制输出随机性的参数（通常在0到1之间）。较低的温度使输出更具确定性和一致性，较高的温度则更具创造性和多样性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Self-Consistency&lt;/strong>&lt;/td>
&lt;td>自我一致性&lt;/td>
&lt;td>一种高级技术，通过多次生成（使用较高的温度）并对结果进行“投票”，选出最一致的答案，以提高复杂推理任务的准确性。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>ReAct (Reasoning and Acting)&lt;/strong>&lt;/td>
&lt;td>推理与行动&lt;/td>
&lt;td>一种高级框架，让LLM不仅能进行推理，还能执行某些“行动”（如调用外部API、执行代码），并将行动结果融入下一步的推理中。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Delimiter&lt;/strong>&lt;/td>
&lt;td>分隔符&lt;/td>
&lt;td>使用特殊字符或标签（如```, ###, &amp;lt;tag&amp;gt;）来清晰地分隔提示词的不同部分（如指令、上下文、示例）。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="第三章软件测试中的提示词工程实践">第三章：软件测试中的提示词工程实践
&lt;/h3>&lt;p>本章将通过具体的案例，展示如何在软件测试的各个阶段应用提示词工程。&lt;/p>
&lt;h4 id="31-案例一基于用户故事生成测试用例-功能测试">3.1 案例一：基于用户故事生成测试用例 (功能测试)
&lt;/h4>&lt;p>假设我们有一个电商平台的&lt;strong>用户故事&lt;/strong>：“作为一个已登录用户，我希望能够将商品添加到购物车中，以便稍后一次性结算。”&lt;/p>
&lt;p>&lt;strong>一个糟糕的提示词 👎:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>为添加购物车功能写测试用例。&lt;/p>&lt;/blockquote>
&lt;p>这个提示词过于模糊，没有提供任何上下文，AI可能会生成一些非常通用的、价值不高的用例。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用Few-shot和角色提示) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 指令
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你是一位经验丰富的电商软件测试专家。请根据以下用户故事和业务规则，为“添加商品到购物车”功能生成一套全面的功能测试用例。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 角色
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 你非常注重细节，能够考虑到各种边界情况和异常场景。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 你生成的测试用例应包含：用例ID、测试标题、前置条件、测试步骤、预期结果和用例类型（正面/负面）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 输出格式应为Markdown表格。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 上下文：用户故事
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">“作为一个已登录用户，我希望能够将商品添加到购物车中，以便稍后一次性结算。”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 上下文：业务规则
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. 用户必须是登录状态才能添加商品。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 购物车最多可以容纳50件不同的商品。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 单个商品的最大购买数量为99。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 已下架或库存为0的商品不能添加到购物车。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. 添加成功后，页面右上角的购物车图标应实时更新商品数量。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 示例 (Few-shot)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">以下是一个参考示例：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| 用例ID | 测试标题 | 前置条件 | 测试步骤 | 预期结果 | 用例类型 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| :--- | :--- | :--- | :--- | :--- | :--- |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">| TC-CART-001 | 验证登录用户可以成功添加一件商品到购物车 | 用户已登录；购物车为空 | 1. 浏览到一个有库存的商品详情页。&amp;lt;br&amp;gt;2. 点击“添加到购物车”按钮。 | 1. 页面提示“商品已成功添加到购物车”。&amp;lt;br&amp;gt;2. 购物车图标数量更新为1。 | 正面 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">现在，请基于以上信息，为该功能生成至少10个详细的测试用例，覆盖正面、负面和边界场景。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AI可能的输出:&lt;/p>
&lt;p>AI将会遵循指令，以指定的Markdown表格格式，生成包括验证未登录用户、添加商品达到上限、添加无库存商品、验证数量输入边界值（0, 1, 99, 100）等一系列高质量的测试用例。&lt;/p>
&lt;h4 id="32-案例二生成特定格式的测试数据-数据驱动测试">3.2 案例二：生成特定格式的测试数据 (数据驱动测试)
&lt;/h4>&lt;p>在进行数据驱动测试时，我们常常需要大量符合特定格式和规则的数据。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：测试一个用户注册表单，该表单对用户名、密码和邮箱格式有特定要求。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用指令和格式规范) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">你是一个测试数据生成器。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">请为用户注册功能生成&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">组测试数据，并以&lt;/span>&lt;span class="n">CSV格式输出&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 数据要求
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">数据应包含三列：&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 列定义和规则
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="err">个字符。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">只能包含小写字母和数字。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含有效和无效的用户名（例如，过短、过长、包含特殊字符）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">个字符。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（&lt;/span>&lt;span class="o">!@&lt;/span>&lt;span class="c1">#$%^&amp;amp;*）。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含符合规则的强密码和不符合规则的弱密码。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">必须是有效的电子邮件格式。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请包含一些常见的邮箱提供商（如&lt;/span>&lt;span class="n">gmail&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">outlook&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yahoo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="err">）以及一些格式无效的邮箱（例如，缺少&lt;/span>&lt;span class="o">@&lt;/span>&lt;span class="err">符号，域名无效）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 输出格式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">请严格按照以下&lt;/span>&lt;span class="n">CSV格式输出&lt;/span>&lt;span class="err">，包含表头：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">```&lt;/span>&lt;span class="n">csv&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>AI可能的输出:&lt;/strong>
AI将生成一个CSV格式的文本块，包含20行数据，其中混合了有效的和刻意构造的无效数据，可以直接用于自动化测试脚本或手动测试。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csv" data-lang="csv">&lt;span class="line">&lt;span class="cl">&lt;span class="s">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">email&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">validuser1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">ValidPass1!&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user1@gmail.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">short&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">WeakPass1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user2@outlook.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">toolongusername123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">AnotherGoodP@ss&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user3@yahoo.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">invalid-user&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">Weak1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">invalid-email&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">user.123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">StrongerP@ssword123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">test.user4@gmail.com&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&lt;/span>&lt;span class="s">... (and so on)&lt;/span>&lt;span class="p">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="33-案例三辅助编写自动化测试脚本-测试自动化">3.3 案例三：辅助编写自动化测试脚本 (测试自动化)
&lt;/h4>&lt;p>对于测试自动化工程师来说，AI可以成为一个强大的编程助手。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：需要为前面提到的“添加购物车”功能编写一个使用Selenium和Python的自动化测试脚本。&lt;/p>
&lt;p>&lt;strong>一个优秀的提示词 (采用思维链和代码生成) 👍:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># 角色
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">你是一名资深的自动化测试工程师，精通Python和Selenium WebDriver。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">请为“验证登录用户可以成功添加一件商品到购物车”这个测试场景，编写一个完整的、可执行的Python Selenium自动化测试脚本。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 指令与思考过程 (Chain-of-Thought)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">让我们一步一步地完成这个任务：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1. **设置环境**：导入必要的Selenium库，初始化WebDriver（请使用Chrome浏览器），并设置隐式等待。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. **登录操作**：首先，编写一个函数`login(username, password)`，导航到登录页面，输入用户名和密码，然后点击登录按钮。请使用ID选择器定位元素。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. **导航到商品页**：登录后，导航到一个具体的商品页面。假设商品页面的URL是 &amp;#34;[http://example.com/product/123](http://example.com/product/123)&amp;#34;。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. **执行添加操作**：定位“添加到购物车”按钮（假设其ID为`add-to-cart-button`）并点击。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5. **断言验证**：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 添加一个显式等待，等待成功提示信息出现（假设其CSS选择器为`.success-message`）。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 获取该提示信息的文本，并断言其内容为“商品已成功添加到购物车”。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * 获取购物车图标旁边的数量元素（假设其ID为`cart-item-count`）的文本，并断言其值为 &amp;#34;1&amp;#34;。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6. **清理**：最后，关闭浏览器`driver.quit()`。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7. **代码结构**：请将所有操作封装在一个主函数或测试类中，并添加注释来解释关键步骤。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 请输出完整的Python代码。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AI可能的输出:&lt;/p>
&lt;p>AI会根据这个详细的、分步的指令，生成一个结构清晰、注释完整、包含所有必要操作和断言的Python Selenium脚本。这种方式远比“给我写个Selenium脚本”这样的简单请求要高效和准确得多。&lt;/p>
&lt;hr>
&lt;h3 id="第四章高级提示词工程技巧">第四章：高级提示词工程技巧
&lt;/h3>&lt;p>当你掌握了基础后，可以运用更高级的技巧来应对复杂的测试挑战。&lt;/p>
&lt;h4 id="41-思维链-chain-of-thought-的深化应用">4.1 思维链 (Chain-of-Thought) 的深化应用
&lt;/h4>&lt;p>对于需要复杂逻辑推理的任务，如&lt;strong>根本原因分析 (Root Cause Analysis)&lt;/strong>，深化CoT的应用至关重要。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：一个API测试失败，返回了500错误，你需要分析可能的原因。&lt;/p>
&lt;p>&lt;strong>提示词:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">你是一名顶级的站点可靠性工程师（&lt;/span>&lt;span class="n">SRE&lt;/span>&lt;span class="err">），正在诊断一个&lt;/span>&lt;span class="n">API故障&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 上下文
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">API端点&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">profile&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">问题&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">在高并发负载测试期间，该端点偶尔返回&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">内部服务器错误。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">日志片段&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">```&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ERROR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exhausted&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Could&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">not&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">from&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">the&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Caused&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">by&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">sql&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SQLTransientConnectionException&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HikariPool&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">not&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">available&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">timed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">out&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">after&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30000&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请使用“思维链”方法，一步一步地分析这个问题的潜在根本原因，并为每个原因提出具体的调查步骤和解决方案建议。请像专家一样思考，从多个层面（应用层、数据库层、配置层）进行分析。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">思考开始：&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">日志分析&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">日志明确指出了“&lt;/span>&lt;span class="n">Connection&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exhausted&lt;/span>&lt;span class="err">”（数据库连接池耗尽）。这是最直接的线索。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">为什么连接池会耗尽&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">连接未被释放。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">应用代码中是否存在某个逻辑分支，在查询数据库后没有正确关闭连接（&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">close&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">）？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">连接池太小。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">HikariCP&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">的&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">maximumPoolSize&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">配置是否对于当前的并发负载来说过低？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">查询本身过慢。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">是否存在慢查询，导致连接被长时间占用，在高并发下迅速耗尽了连接池？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">原因&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库性能瓶颈。&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">数据库服务器本身是否达到了&lt;/span>&lt;span class="n">CPU&lt;/span>&lt;span class="err">、内存或&lt;/span>&lt;span class="n">IO的瓶颈&lt;/span>&lt;span class="err">，导致查询响应变慢，从而间接导致连接池耗尽？&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">如何调查&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">审查处理&lt;/span>&lt;span class="o">`/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">{&lt;/span>&lt;span class="n">userId&lt;/span>&lt;span class="err">}&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">profile&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">请求的所有代码路径，特别是异常处理块，确保&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">finally&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">语句中正确关闭了连接。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">检查应用的配置文件（如&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">或&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">yml&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">），查看&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">spring&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">datasource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">hikari&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">maximum&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">的值。监控连接池的实时使用情况。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">C&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">开启数据库的慢查询日志，分析在问题发生时间点是否有慢查询记录。对该&lt;/span>&lt;span class="n">API涉及的SQL语句进行&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">ANALYZE&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">针对原因&lt;/span>&lt;span class="n">D&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">检查数据库服务器的监控仪表盘（&lt;/span>&lt;span class="n">CPU使用率&lt;/span>&lt;span class="err">、内存、磁盘&lt;/span>&lt;span class="n">I&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">O&lt;/span>&lt;span class="err">、活跃连接数）。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="err">解决方案建议&lt;/span>&lt;span class="o">?**&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 输出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请根据以上的思维链，整理成一份正式的故障分析报告。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种CoT提示词不仅引导AI得出结论，更重要的是强迫它展示一个结构化的、逻辑清晰的分析过程，这对于复杂的诊断任务非常有价值。&lt;/p>
&lt;h4 id="42-自我一致性-self-consistency-用于探索性测试">4.2 自我一致性 (Self-Consistency) 用于探索性测试
&lt;/h4>&lt;p>在需要创造性和发散性思维的&lt;strong>探索性测试&lt;/strong>中，可以利用&lt;code>Self-Consistency&lt;/code>来生成更多样化的测试想法。&lt;/p>
&lt;p>&lt;strong>场景&lt;/strong>：为一个新的“在线文档协作”功能设计探索性测试的思路。&lt;/p>
&lt;p>&lt;strong>提示词:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 角色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">你是一个极具创造力和破坏性的软件测试员，擅长找到用户意想不到的&lt;/span>&lt;span class="n">Bug&lt;/span>&lt;span class="err">。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 任务
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">请为“在线文档实时协作”功能，生成&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="err">个不同的、创造性的探索性测试思路（&lt;/span>&lt;span class="n">charter&lt;/span>&lt;span class="err">）。我需要的是多样化的、非常规的想法。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1"># 指令
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">我将多次运行此提示。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请你思考并生成&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="err">个测试思路，专注于并发操作、网络延迟、数据冲突和非常规用户交互。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">请以项目列表的形式输出。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">你可以将模型的&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">temperature&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="err">参数调高，例如&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="err">，然后多次运行这个提示词&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>运行1的可能输出:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>模拟断网重连&lt;/strong>: 两个用户同时编辑，其中一个用户突然断网，进行大量修改后再重连，观察数据如何合并。&lt;/li>
&lt;li>&lt;strong>疯狂光标移动&lt;/strong>: 多个用户在同一行疯狂地输入、删除、移动光标，测试渲染性能和同步的准确性。&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>运行2的可能输出:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>权限动态变更&lt;/strong>: 当一个用户正在编辑时，管理员突然将其权限从“可编辑”降为“只读”，观察其客户端的行为。&lt;/li>
&lt;li>&lt;strong>混合富文本与纯文本&lt;/strong>: 一个用户粘贴复杂的富文本（带格式、图片），另一个用户同时在附近输入纯文本，检查格式是否错乱。&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>通过多次生成并综合所有独特的想法，测试人员可以获得一个远比单次请求更丰富、更全面的探索性测试清单。&lt;/p>
&lt;hr>
&lt;h3 id="第五章总结与展望">第五章：总结与展望
&lt;/h3>&lt;p>提示词工程正迅速成为软件测试工程师的核心竞争力之一。它不是要取代测试人员的思考，而是要增强他们的能力，将他们从重复劳动中解放出来，去完成更需要智慧和洞察力的任务。&lt;/p>
&lt;p>&lt;strong>成功的关键在于实践&lt;/strong>。从今天起，尝试将本文介绍的技巧应用到你的日常工作中。从小任务开始，比如用AI帮你润色缺陷报告，或者为你正在测试的功能头脑风暴一些边缘案例。随着你对模型“脾气”的了解加深，你将能够构建出越来越强大的提示词，真正实现与AI的高效协同，将软件测试的效率和质量提升到一个全新的高度。&lt;/p>
&lt;p>未来的软件测试，将是人类智慧与人工智能深度融合的时代，而提示词工程，正是开启这扇大门的钥匙。&lt;/p>
&lt;hr></description></item><item><title>转译：2025自动化测试八大趋势</title><link>https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/</link><pubDate>Wed, 09 Apr 2025 23:00:28 +0800</pubDate><guid>https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/</guid><description>&lt;p>本文来自 &lt;strong>TestGuild&lt;/strong> 1 月份对今年测试发展趋势的分析，目前看判断还是客观准确的，现将译文分享给大家。&lt;/p>
&lt;hr>
&lt;p>随着我们进入2025年，我认为以下&lt;strong>自动化测试趋势&lt;/strong>将深刻影响软件测试的未来。&lt;/p>
&lt;h3 id="目录">目录
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="#trend1" >1. AI Agent：测试新浪潮&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend2" >2. AI右移：理解用户&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend3" >3. 全民皆QA：人机协同&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend4" >4. 测试者角色进化：适应未来&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend5" >5. DevOps与SRE整合：持续质量&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend6" >6. 端到端（E2E）自治质量平台&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend7" >7. Playwright：首选自动化工具&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trend8" >8. 2025年测试者必备编程语言&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#summary" >总结：2025年自动化测试成功之道&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="ai-agent测试新浪潮">AI Agent：测试新浪潮 &lt;a id="trend1">&lt;/a>
&lt;/h2>&lt;p>我认为2025年将见证AI辅助测试的持续扩展。&lt;/p>
&lt;p>原因何在？&lt;/p>
&lt;p>AI在测试中的应用呈指数级增长：调查显示，截至2024年，72.3%的团队正在积极探索或采用AI驱动的测试工作流，而几年前这一技术尚处于早期采用阶段。这一趋势标志着我们TestGuild自动化测试调查历史上最快的技术采用曲线。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409.png"
width="1403"
height="533"
srcset="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409_hu_ea73bf39cd238a9b.png 480w, https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409_hu_9e5eb824ebd21647.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="263"
data-flex-basis="631px"
>&lt;/p>
&lt;p>在2024年多模态AI（通过专用算法处理多种数据类型）基础上，新兴趋势是代理型AI。&lt;/p>
&lt;p>首先，您可能会问：什么是代理型AI？&lt;/p>
&lt;p>这类系统能自主运作，处理以往需要人工干预的任务。它们能进行通信、维持长期状态，并根据交互独立决策，实质上是充当高能效测试助手团队。&lt;/p>
&lt;p>仍不清楚？让我们通过示例说明。&lt;/p>
&lt;h3 id="代理型ai自动化测试工作流示例">代理型AI自动化测试工作流示例
&lt;/h3>&lt;p>设想一个真实场景：代理型AI为大型电商平台自主管理全量回归测试套件。&lt;/p>
&lt;p>不同于依赖预设脚本和固定排期，该代理型AI系统将执行以下操作：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>优先级判定&lt;/strong>：分析近期代码变更和功能发布，根据修改风险等级排序回归测试&lt;/li>
&lt;li>&lt;strong>测试选择与适配&lt;/strong>：动态选取合适测试用例，基于风险评估从完整套件中筛选子集&lt;/li>
&lt;li>&lt;strong>测试执行与环境管理&lt;/strong>：跨多环境（浏览器/操作系统/设备）调度执行测试。若测试失败，自动触发诊断测试收集详细信息，甚至尝试自动修复简单问题&lt;/li>
&lt;li>&lt;strong>结果分析与报告&lt;/strong>：分类故障严重程度，识别模式，根据常见错误模式提出修复建议&lt;/li>
&lt;li>&lt;strong>反馈循环与持续改进&lt;/strong>：通过经验积累不断自我优化&lt;/li>
&lt;/ul>
&lt;p>此设想并非天方夜谭。调查数据显示，团队不仅追求任务自动化，更依赖AI自主决策——这正是代理型AI的核心：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>决策能力&lt;/strong>：AI工具日益被信任用于优化测试覆盖率和维护&lt;/li>
&lt;li>&lt;strong>自主性&lt;/strong>：对AI驱动流水线和框架的兴趣表明团队需要最小化人工干预的解决方案&lt;/li>
&lt;li>&lt;strong>性能表现&lt;/strong>：聚焦采用AI的工具框架，显示向动态学习适应系统的转变&lt;/li>
&lt;/ul>
&lt;p>转型速度超乎预期：网络研讨会投票显示56%团队处于AI采用&amp;quot;调研阶段&amp;quot;，38%企业将AI视为缓解测试人才短缺的解决方案。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-1.png"
width="864"
height="804"
srcset="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-1_hu_face25b8bc1d201d.png 480w, https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-1_hu_84c2239caf2705b5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="107"
data-flex-basis="257px"
>&lt;/p>
&lt;p>行业巨头观点与此一致（笔者将其延伸至自动化测试领域）：&lt;/p>
&lt;p>微软CEO萨提亚·纳德拉近期提及&lt;a class="link" href="https://www.cxtoday.com/data-analytics/microsoft-ceo-ai-agents-will-transform-saas-as-we-know-it/" target="_blank" rel="noopener"
>AI&amp;quot;代理&amp;quot;将革新SaaS&lt;/a>，通过处理复杂任务、持续学习和跨系统无缝连接实现突破。斯坦福研究者关于&lt;a class="link" href="https://www.livescience.com/technology/artificial-intelligence/just-2-hours-is-all-it-takes-for-ai-agents-to-replicate-your-personality-with-85-percent-accuracy" target="_blank" rel="noopener"
>AI代理模拟人类行为&lt;/a>的实验，同样印证代理型AI改变测试方式的潜力。&lt;/p>
&lt;hr>
&lt;h2 id="ai右移理解用户">AI右移：理解用户 &lt;a id="trend2">&lt;/a>
&lt;/h2>&lt;p>理解真实用户行为已成为2025年质量策略的核心要素。通过分析生产环境用户交互，团队能发现模式、预测问题，确保软件满足用户期望。AI整合使团队探索出质量提升新路径。&lt;/p>
&lt;p>调查数据显示，对&lt;strong>预测模型和用户行为分析&lt;/strong>的关注度显著提升，团队聚焦利用AI发现长尾用例，优化用户旅程理解。&lt;a class="link" href="https://testguild.com/podcast/automation/a509-gojko/" target="_blank" rel="noopener"
>Gojko Adzic&lt;/a>设想工具直接集成至平台，提供体验分析和预测模型，主动预判问题。这在管理海量用户数据（含长尾用例）时价值凸显，AI在数据模式识别中发挥关键作用。&lt;/p>
&lt;p>这种右移方法通过强调部署后质量保障，与传统左移方法论形成互补。潜在收益包括：&lt;/p>
&lt;ul>
&lt;li>通过&lt;strong>主动监控&lt;/strong>减少用户报障&lt;/li>
&lt;li>通过&lt;strong>优化高价值用户流&lt;/strong>提升功能采用率&lt;/li>
&lt;li>基于真实使用模式的&lt;strong>数据驱动决策&lt;/strong>改善测试覆盖&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="全民皆qa人机协同">全民皆QA：人机协同 &lt;a id="trend3">&lt;/a>
&lt;/h2>&lt;p>随着代理型AI和端到端自治质量平台（后文详述）的采用，2025年软件测试将发生剧变。低代码/无代码工具结合AI，使测试突破传统壁垒，让业务分析师、开发者甚至非技术背景的利益相关方都能参与质量保障。网络研讨会投票显示**74%**参与者自认AI新手，凸显降低使用门槛的工具需求。&lt;/p>
&lt;p>直观的低代码解决方案通过自动化测试创建和缺陷检测等复杂任务，降低学习曲线，加速工具采用。调查显示**32.3%**团队积极尝试无代码测试方案。&lt;/p>
&lt;p>同时，人类监督仍不可或缺。正如&lt;a class="link" href="https://testguild.com/podcast/automation/a522-tobias/" target="_blank" rel="noopener"
>Tobias Müller&lt;/a>所言：&amp;ldquo;重点已非是否信任AI，而是设定边界并信任所设规范。&amp;ldquo;结合人类经验与AI的团队展现出更优缺陷检测和更快测试周期，证明人机协同的重要性。&lt;/p>
&lt;hr>
&lt;h2 id="测试者角色进化适应未来">测试者角色进化：适应未来 &lt;a id="trend4">&lt;/a>
&lt;/h2>&lt;p>测试者正转型为融合传统技能与AI、DevOps、自动化知识的复合型角色。调查数据印证这一转变：&lt;/p>
&lt;ul>
&lt;li>45%团队强调AI技能需求&lt;/li>
&lt;li>51.8%优先考虑DevOps知识&lt;/li>
&lt;li>72.3%聚焦自动化专长&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="devops与sre整合持续质量">DevOps与SRE整合：持续质量 &lt;a id="trend5">&lt;/a>
&lt;/h2>&lt;p>测试与DevOps及站点可靠性工程（SRE）实践的整合，是2025年最显著的自动化测试趋势。随着企业日益重视持续交付和运营韧性，测试正进化为主动的、贯穿软件生命周期的质量保障活动。&lt;/p>
&lt;p>调查数据显示显著转变：截至2024年，**51.8%**团队采用DevOps实践（2022年仅16.9%）。这种增长印证测试与DevOps/SRE工作流的深度整合，以保障高速交付下的软件质量。&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-2.png"
width="1489"
height="568"
srcset="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-2_hu_a7209be5e9f85952.png 480w, https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-2_hu_89683b652da6dffb.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="262"
data-flex-basis="629px"
>&lt;/p>
&lt;p>这种整合超越传统QA，转变为提升全生命周期的持续活动，帮助企业：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>加速反馈循环&lt;/strong>：CI/CD管道嵌入测试，即时发现问题&lt;/li>
&lt;li>&lt;strong>实施主动质量保障&lt;/strong>：工作流整合性能测试与监控，提前识别风险&lt;/li>
&lt;li>&lt;strong>促进团队协作&lt;/strong>：质量共担机制改善QA、开发与运维团队协作&lt;/li>
&lt;/ul>
&lt;p>调查数据清晰支持此趋势。从流水线自动化到性能监控，团队正采用与卓越运营目标一致的持续质量实践。若您的组织尚未整合测试与DevOps/SRE，2025年正是转型良机。&lt;/p>
&lt;hr>
&lt;h2 id="端到端e2e自治质量平台">端到端（E2E）自治质量平台 &lt;a id="trend6">&lt;/a>
&lt;/h2>&lt;p>E2E平台正成为测试战略核心。这些平台整合测试、可用性、性能、无障碍访问和安全性于统一框架，应对更广泛的质量问题。通过AI自动化测试生命周期，团队反馈缺陷检测和测试覆盖显著提升。&lt;/p>
&lt;p>调查数据显示显著增长：&lt;/p>
&lt;ul>
&lt;li>安全测试从2021年8.2%增至2024年39.5%&lt;/li>
&lt;li>性能测试采用率达41%&lt;/li>
&lt;li>API测试从2021年13.1%增长至2024年46.2%&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409230826.png"
width="1365"
height="663"
srcset="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409230826_hu_4d6ba26bdca4808c.png 480w, https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409230826_hu_7e889e6d25a4b9c0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="205"
data-flex-basis="494px"
>这些指标反映企业对综合质量平台管理全测试需求的依赖度提升。&lt;/p>
&lt;hr>
&lt;h2 id="playwright首选自动化工具">Playwright：首选自动化工具 &lt;a id="trend7">&lt;/a>
&lt;/h2>&lt;p>正如笔者去年预测，Playwright已成为众多测试者首选工具。根据&lt;a class="link" href="https://testguild.com/playwright-cypress-ai/" target="_blank" rel="noopener"
>Playwright超越Cypress（未来展望）&lt;/a>文中分析，这一预测已被验证。&lt;/p>
&lt;p>当前进展？凭借卓越的多功能性、可靠性和性能，Playwright在2025年持续巩固其领先地位。TestGuild 2024年调查及社区反馈显示其显著增长。&lt;/p>
&lt;p>测试工具偏好呈现重大转变（2018-2024数据分析）：&lt;/p>
&lt;p>&lt;img src="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-3.png"
width="1467"
height="516"
srcset="https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-3_hu_c408c68fb9c92883.png 480w, https://chengxiaqiucao.github.io/post/074-%E6%9C%80%E6%96%B0%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E8%B6%8B%E5%8A%BF2025/Pasted-20250409-3_hu_c3c6e4021fe20496.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="284"
data-flex-basis="682px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Playwright&lt;/strong>：45.1%采用率使其成为增长最快工具，优势包括跨浏览器支持、API测试能力和高效工作流&lt;/li>
&lt;li>&lt;strong>Selenium&lt;/strong>：曾为市场领导者，现采用率下降至22.1%，因团队追求更高效稳定方案&lt;/li>
&lt;li>&lt;strong>Cypress&lt;/strong>：坚守前端测试领域，保持14.4%稳定用户群&lt;/li>
&lt;/ul>
&lt;p>Playwright用户普遍反馈：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>更快测试执行&lt;/strong>：加速反馈循环，改进开发生命周期&lt;/li>
&lt;li>&lt;strong>更低测试波动性&lt;/strong>：产出更稳定可靠的测试结果&lt;/li>
&lt;/ul>
&lt;p>除初始的UI浏览器自动化功能外，Playwright已进化支持&lt;strong>API测试&lt;/strong>等高级能力，成为现代测试需求的综合解决方案。&lt;/p>
&lt;hr>
&lt;h2 id="2025年测试者必备编程语言">2025年测试者必备编程语言 &lt;a id="trend8">&lt;/a>
&lt;/h2>&lt;p>根据&lt;a class="link" href="https://www.tiobe.com/tiobe-index/" target="_blank" rel="noopener"
>TIOBE编程社区指数&lt;/a>，Python连续两年蝉联榜首。这与我预期一致——Python凭借简洁性、强大库支持及在AI/机器学习领域的主导地位，仍是2025年测试者首选语言。无论您是初学自动化还是资深测试专家，Python都是衔接当下挑战与未来自动化测试可能性的桥梁。&lt;/p>
&lt;hr>
&lt;h2 id="总结2025年自动化测试成功之道">总结：2025年自动化测试成功之道 &lt;a id="summary">&lt;/a>
&lt;/h2>&lt;p>2025年将成为软件测试关键转折年，为拥抱变革者提供空前机遇。AI成熟度、团队协作与工具演进的融合，标志着质量保障新纪元的开启。&lt;/p>
&lt;p>成功不仅需要关注趋势，更需行动：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>拥抱代理型AI&lt;/strong>：探索自主AI代理如何优化工作流，降低人工干预&lt;/li>
&lt;li>&lt;strong>采用右移测试实践&lt;/strong>：平衡传统左移方法与部署后监控，确保软件符合真实用户期望&lt;/li>
&lt;li>&lt;strong>投资技能发展&lt;/strong>：为团队配备AI、自动化与DevOps知识以保持竞争力&lt;/li>
&lt;li>&lt;strong>测试与DevOps/SRE整合&lt;/strong>：打破孤岛，将质量保障融入交付各阶段&lt;/li>
&lt;li>&lt;strong>善用综合工具&lt;/strong>：从Playwright到Python，选择满足当前需求并面向未来的工具&lt;/li>
&lt;/ul>
&lt;p>这些趋势预示着质量保障方式的根本转变。随着测试、开发与运维界限的模糊，现代测试者角色正进化为战略要职。欲深度掌握变革趋势，欢迎参加年度&lt;strong>Automation Guild大会&lt;/strong>，与行业领袖共同塑造测试未来。&lt;/p>
&lt;p>2025创新之路已铺就，您是否已准备好引领变革？&lt;/p>
&lt;hr></description></item></channel></rss>